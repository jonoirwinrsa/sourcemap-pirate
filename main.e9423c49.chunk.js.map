{"version":3,"sources":["shared/utils/styles/color.ts","shared/utils/toast.ts","apolloClient.ts","browserHistory.ts","shared/utils/styles/font.ts","shared/utils/styles/mediaQueries.ts","shared/utils/styles/mixin.ts","shared/utils/styles/sizes.ts","shared/utils/styles/zIndexValues.ts","shared/components/LocationSearch/Styles.ts","shared/constants/authStatus.ts","shared/constants/buttonVariant.ts","shared/utils/analytics.ts","shared/utils/console.ts","shared/constants/countryCodes.ts","shared/constants/errorTypes.ts","shared/constants/formTypes.ts","shared/constants/keyCodes.ts","shared/constants/modals.ts","shared/constants/rootElementId.ts","shared/constants/sort.ts","__graphql__/globalTypes.ts","shared/constants/subcontractors.ts","shared/constants/routes.ts","shared/hooks/useAuthToken.ts","shared/hooks/useAuthentication.ts","shared/hooks/useStack.ts","shared/hooks/useModalsManager.ts","shared/hooks/useQueryMatches.ts","shared/contexts/authContext.ts","shared/contexts/modalsContext.ts","shared/contexts/queryMatchesContext.ts","shared/components/Icon/Styles.ts","shared/components/Icon/index.tsx","shared/components/Clickable/index.tsx","shared/components/AddMoreLink/Styles.ts","shared/components/AddMoreLink/index.tsx","shared/components/Avatar/colors.ts","shared/components/Avatar/Styles.ts","shared/components/Avatar/index.tsx","shared/components/Spinner.tsx","shared/components/PageLoader/Styles.ts","shared/components/PageLoader/index.tsx","shared/components/PageError/Styles.ts","shared/components/PageError/index.tsx","shared/components/QueryErrors.tsx","shared/utils/documents.ts","shared/utils/validation/is.ts","shared/utils/validation/generateErrors.ts","shared/components/Form/Styles.ts","shared/components/Form/RequiredFieldsNote.tsx","shared/components/Form/index.tsx","shared/components/Input/Styles.ts","shared/components/Input/index.tsx","shared/components/Select/constants.ts","shared/constants/nullString.ts","shared/utils/transitionStates.ts","shared/hooks/useClickOutside.ts","shared/components/DropdownCard/Card.tsx","shared/components/DropdownCard/index.tsx","shared/components/Portal.tsx","shared/components/DropdownAction/index.tsx","shared/components/DropdownCardContent/index.ts","shared/components/IconClickable/Styles.ts","shared/components/IconClickable/index.tsx","shared/components/Select/Styles.tsx","shared/components/Select/SelectBase.tsx","shared/components/Select/SelectSingle.tsx","shared/components/Select/SelectMulti.tsx","shared/components/Textarea/Styles.ts","shared/components/Textarea/index.tsx","shared/utils/onlyOnKeyboardFocus.ts","shared/components/DatePicker/Styles.tsx","shared/utils/dateTime.ts","shared/components/DatePicker/constants.ts","shared/components/DatePicker/useDatePicker.ts","shared/components/DatePicker/DateSection.tsx","shared/components/DatePicker/TimeSection.tsx","shared/components/DatePicker/index.tsx","shared/hooks/useGoogleMapsApi.ts","shared/utils/script.ts","shared/components/LocationSearch/index.tsx","shared/components/Checkbox/Styles.ts","shared/utils/images.ts","shared/components/Checkbox/index.tsx","shared/components/RadioButtonGroup/Styles.ts","shared/components/RadioButtonGroup/index.tsx","shared/utils/url.ts","shared/components/ImageUploader/api.ts","shared/components/ImageUploader/Styles.ts","shared/components/ImageUploader/index.tsx","shared/components/CurrencyInput.tsx","shared/components/Field/Styles.ts","shared/components/Field/index.tsx","shared/components/ExternalLink.tsx","shared/components/SubcontractorInfo/Styles.ts","shared/components/SubcontractorInfo/index.tsx","shared/utils/getContactName.ts","shared/components/Icon/utils.ts","shared/components/ContactsList/Styles.ts","shared/components/ContactsList/api.ts","shared/components/ContactsList/ResendInvitationLink.tsx","shared/components/ContactsList/index.tsx","shared/utils/enumHelpers.ts","shared/components/Button/Styles.tsx","shared/components/Button/index.tsx","shared/components/ModalFormBody/Styles.tsx","shared/components/ModalFormBody/index.tsx","shared/utils/apollo.ts","shared/components/DropdownMenu/DropdownMenuContext.ts","shared/components/DropdownMenu/Action.tsx","shared/components/DropdownMenu/Styles.ts","shared/components/DropdownMenu/index.tsx","shared/components/DocumentsTable/Styles.tsx","shared/components/DocumentsTable/ProgressBars.tsx","shared/components/DocumentsTable/DocumentsTableContext.ts","shared/hooks/useKeyboardEventCallback.ts","shared/components/Modal/useModalState.ts","shared/components/Modal/Styles.ts","shared/components/Modal/ModalContent.tsx","shared/components/Modal/index.tsx","shared/components/InputModal/Styles.ts","shared/components/InputModal/index.tsx","shared/components/DocumentsTable/NameFormModal.tsx","shared/components/DocumentsTable/DropzoneLink.tsx","shared/components/DocumentsTable/TopControls.tsx","shared/components/DocumentsTable/DragHighlightZone.tsx","shared/components/DocumentsTable/DropzoneArea.tsx","shared/components/DocumentsTable/NoResultsMessage.tsx","shared/components/DocumentsTable/Headers.tsx","shared/components/DocumentsTable/FolderDropzone.tsx","shared/utils/files.ts","shared/components/DocumentsTable/utils/addItemIdToMoveEvent.ts","shared/components/ConfirmationModal/Styles.ts","shared/components/ConfirmationModal/index.tsx","shared/components/DocumentsTable/classes/Item.ts","shared/components/DocumentsTable/classes/File.ts","shared/components/DocumentsTable/classes/Folder.ts","shared/components/DocumentsTable/ItemControls.tsx","shared/components/DocumentsTable/File.tsx","shared/components/DocumentsTable/FolderRow.tsx","shared/components/DocumentsTable/FolderWithContents.ts","shared/components/DocumentsTable/FolderWithContents.desktop.tsx","shared/components/DocumentsTable/FolderWithContents.mobile.tsx","services/document.ts","shared/components/DocumentsTable/hooks/useProgressState.ts","shared/components/DocumentsTable/hooks/useFilesDropHandler.ts","shared/components/DocumentsTable/hooks/useMobileNavigation.ts","shared/components/DocumentsTable/utils/getMoveHandler.ts","shared/components/DocumentsTable/utils/getDownloadURLBuilder.ts","shared/components/PrintDialog/index.tsx","shared/components/DocumentsTable/PrintDocuments.Styles.ts","shared/components/DocumentsTable/PrintDocuments.tsx","shared/components/DocumentsTable/DocumentsTable.tsx","shared/components/DocumentsTable/api.ts","shared/components/DocumentsTable/DocumentsTableSingle.tsx","shared/components/DocumentsTable/DocumentsTableCombined.tsx","shared/components/SearchInput/Styles.ts","shared/components/SearchInput/index.tsx","shared/components/Styles.ts","shared/components/BidFormModal/api.ts","shared/components/BidFormModal/Styles.ts","shared/components/BidFormModal/Form.tsx","shared/components/BidFormModal/index.tsx","shared/components/CurrencyFormatter.tsx","shared/components/BidModal/Styles.ts","shared/components/BidModal/index.tsx","shared/components/Table/Styles.ts","shared/components/Table/Cell.tsx","shared/components/Pagination/Styles.ts","shared/components/Pagination/index.tsx","shared/components/EmptyContent/index.ts","shared/components/Table/useSort.ts","shared/components/Table/Headers.tsx","shared/components/Table/Rows.tsx","shared/components/Table/Row.tsx","shared/components/Table/index.tsx","shared/constants/ui.ts","shared/components/BidsList/Styles.ts","shared/components/BidsList/index.tsx","shared/components/ClickableText/index.ts","shared/components/DeletionModal.tsx","shared/components/HtmlHeadTags.tsx","shared/components/IconLink/index.tsx","shared/components/Logo.tsx","shared/hooks/useQueryParamInitialAction.ts","shared/components/Messages/FormattedMessageTime.tsx","shared/components/Messages/ThreadsList.styles.tsx","shared/components/Messages/ThreadsList.tsx","shared/components/Messages/ThreadReplyForm.styles.ts","shared/components/Messages/ThreadReplyForm.tsx","shared/components/Messages/ThreadDetails.styles.ts","shared/components/Messages/ThreadDetails.tsx","shared/components/Messages/NewMessage.styles.ts","shared/components/Messages/NewMessage.tsx","shared/components/Messages/index.styles.tsx","shared/components/Messages/index.tsx","shared/components/Topbar/Styles.ts","shared/components/Topbar/index.tsx","shared/components/ErrorBoundary/Styles.ts","shared/components/ErrorBoundary/index.tsx","shared/components/Page/Styles.ts","shared/components/Page/index.tsx","shared/components/PageWithSidebar/Styles.ts","shared/components/PageWithSidebar/index.tsx","shared/components/RowBadge/Styles.ts","shared/components/RowBadge/index.tsx","shared/components/Tabs/Styles.ts","shared/components/Tabs/index.tsx","shared/components/UnauthenticatedPage/Styles.tsx","shared/components/UnauthenticatedPage/index.tsx","shared/components/UsersInviteModal/Styles.ts","shared/components/UsersInviteModal/index.tsx","shared/components/UsersTableDropdown/api.ts","shared/components/UsersTableDropdown/LoginAsUser.tsx","shared/components/UsersTableDropdown/ResendInvite.tsx","shared/components/UsersTableDropdown/CopyInviteLink.tsx","shared/components/UsersTableDropdown/CancelInvite.tsx","shared/components/UsersTableDropdown/RestoreInvite.tsx","shared/components/UsersTableDropdown/DeactivateUser.tsx","shared/components/UsersTableDropdown/ReactivateUser.tsx","shared/components/UsersTableDropdown/ChangeTypeModal.tsx","shared/components/UsersTableDropdown/index.tsx","shared/components/UnauthenticatedStyles.tsx","components/Auth/api.ts","components/Auth/Login.tsx","shared/utils/queries.ts","components/Auth/BidInviteFeedback/api.ts","components/Auth/BidInviteFeedback/useBidInviteFeedback.ts","components/Auth/BidInviteFeedback/index.tsx","components/Auth/Signup.tsx","components/Auth/ResetPassword.tsx","components/Auth/CreatePassword.tsx","components/Auth/Invitation.tsx","shared/components/TagStyles.tsx","components/Projects/api.ts","components/Projects/List.tsx","components/Projects/index.tsx","components/PageNotFound/Styles.ts","components/PageNotFound/index.tsx","components/Project/api.ts","components/Project/BidPackages/api.ts","components/Project/BidPackages/Styles.ts","components/Project/BidPackages/BidPackagesDropdown.tsx","components/Project/BidPackages/index.tsx","components/Project/Styles.ts","components/Project/ProjectStatusAction.tsx","shared/components/DisplayField/styles.ts","shared/components/DisplayField/index.tsx","shared/components/FormRow/styles.ts","shared/components/FormRow/index.tsx","shared/components/Overview/index.ts","shared/hooks/useUserAuthStatus.ts","components/Project/Users/api.ts","components/Project/Users/Form.tsx","components/Project/Users/Style.ts","components/Project/Users/UsersTable.tsx","components/Project/Users/index.tsx","components/Project/Overview.tsx","components/Project/OverviewEdit.tsx","components/Project/ShowProject.tsx","components/Project/OverviewCreate.tsx","components/Project/CreateProject.tsx","components/Project/index.tsx","shared/utils/address.ts","shared/components/ContactInfo/Styles.tsx","shared/components/ContactInfo/index.tsx","shared/components/SubcontractorsListItem/Styles.ts","shared/components/SubcontractorsListItem/api.ts","shared/components/SubcontractorsListItem/index.tsx","shared/components/SubcontractorsList/api.ts","shared/components/SubcontractorsList/Styles.tsx","shared/components/SubcontractorsList/Filters.tsx","shared/components/SubcontractorsList/index.tsx","components/BidPackage/Bidders/Add/api.ts","components/BidPackage/Bidders/Add/Styles.tsx","components/BidPackage/Bidders/Add/ContactAction.tsx","components/BidPackage/Bidders/Add/index.tsx","components/BidPackage/Bidders/api.ts","components/BidPackage/Bidders/ChangeStatusModal.tsx","components/BidPackage/Bidders/Styles.ts","components/BidPackage/Bidders/RejectBidRequestModal.tsx","components/BidPackage/Bidders/Request.tsx","components/BidPackage/Bidders/RemoveLink.tsx","components/BidPackage/Bidders/index.tsx","components/BidPackage/api.ts","shared/hooks/useTabPathFragment.ts","components/BidPackage/Sidebar.styles.ts","components/BidPackage/Sidebar.tsx","components/BidPackage/Styles.ts","components/BidPackage/PublishBidPackageButton.tsx","components/BidPackage/MessagesTab.tsx","components/BidPackage/Overview.tsx","components/BidPackage/OverviewEdit.tsx","components/BidPackage/ShowBidPackage.tsx","components/BidPackage/OverviewCreate.tsx","components/BidPackage/CreateBidPackage.tsx","components/BidPackage/index.tsx","components/Subcontractors/api.ts","components/Subcontractors/Styles.ts","shared/constants/contact.ts","components/Subcontractors/ContactsForm.tsx","components/Subcontractors/ContactsList.tsx","components/Subcontractors/Contacts.tsx","components/Subcontractors/Form.tsx","components/Subcontractors/Edit.tsx","components/Subcontractors/index.tsx","components/Bids/api.ts","components/Bids/index.tsx","components/BidPackage/Bidders/Print.styles.ts","components/BidPackage/Bidders/Print.tsx","components/BidInvite/Signup.styles.ts","components/BidInvite/api.ts","components/BidInvite/Signup.tsx","components/BidInvite/Claim.tsx","components/BidInvite/index.tsx","components/Project/PrintDocuments.tsx","components/BidPackage/PrintDocuments.tsx","components/Admin/Companies/api.ts","components/Admin/Companies/EditForm.tsx","components/Admin/Companies/Dropdown.tsx","components/Admin/Companies/index.tsx","components/Admin/Users/api.tsx","components/Admin/Users/index.tsx","components/Admin/BidRequests/api.ts","components/Admin/BidRequests/Dropdown.tsx","components/Admin/BidRequests/index.tsx","components/Admin/index.tsx","components/Profile/api.ts","components/Profile/Personal.tsx","components/Profile/Password.tsx","components/Profile/index.tsx","components/Company/api.ts","components/Company/Users.tsx","components/Company/Offices/api.ts","components/Company/Offices/Form.tsx","components/Company/Offices/index.tsx","components/Company/CompanyProfile.tsx","components/Company/index.tsx","components/BidRequests/api.ts","components/BidRequests/index.tsx","components/BidRequest/api.ts","components/BidRequest/Contacts.styles.ts","components/BidRequest/Contacts.tsx","components/BidRequest/CustomerInfo.styles.ts","components/BidRequest/CustomerInfo.tsx","components/BidRequest/Overview.styles.ts","components/BidRequest/Overview.tsx","components/BidRequest/Styles.ts","components/BidRequest/DeclinedReasonForm.styles.ts","components/BidRequest/DeclinedReasonForm.tsx","components/BidRequest/Actions.styles.ts","components/BidRequest/Actions.tsx","components/BidRequest/Bids.styles.ts","components/BidRequest/Bids.tsx","components/BidRequest/CurrentBid.styles.ts","components/BidRequest/CurrentBid.tsx","components/BidRequest/MessagesTab.tsx","components/BidRequest/index.tsx","shared/components/Navbar/Styles.ts","shared/components/Navbar/index.tsx","components/Routes/Styles.ts","components/Routes/AuthRoute.tsx","components/Routes/index.tsx","components/App/VersionCheck/Styles.tsx","components/App/VersionCheck/index.tsx","components/App/Toast/Styles.ts","components/App/Toast/index.tsx","components/App/NormalizeStyles.ts","components/App/BaseStyles.ts","components/App/App.tsx","shared/translations/de.ts","shared/translations/en.ts","shared/utils/gtranslateFix.ts","index.tsx"],"names":["COLOR","show","toast","pubsub","emit","err","type","title","i18n","t","message","get","duration","authLink","setContext","_","headers","token","localStorage","getItem","authorization","errorLink","onError","operation","graphQLErrors","networkError","forEach","formatError","some","error","extensions","code","logout","apolloClient","operationName","formatEmailDeliveryError","formatBadUserInputError","exception","msg","emailErrors","failedEmails","map","email","messageKey","join","fields","Object","keys","fieldName","name","args","httpLink","HttpLink","uri","process","cache","InMemoryCache","link","ApolloLink","from","ApolloClient","defaultOptions","query","fetchPolicy","watchQuery","createBrowserHistory","font","regular","css","medium","bold","black","size","mediaQueries","darken","colorValue","amount","Color","string","boxShadowMedium","boxShadowBorderMedium","borderLight","borderLightest","truncateText","clickable","hardwareAccelerate","clearfix","cover","scrollableY","backgroundImage","backgroundLight","tag","mixin","lighten","rgba","opacity","alpha","placeholderColor","customScrollbar","width","background","backgroundMedium","primary","sizes","zIndexValues","visibleMobileDocumentsTableRow","mainVisibleMobileDocumentsTableRow","tableItemDropdown","documentsTableProgress","tableLoadingIndicator","topbar","backLink","navbar","intercom","modalOverlayInactive","modalInactive","modalOverlay","modal","modalCloseIcon","dropdown","createGlobalStyle","AUTH_STATUS","BUTTON_VARIANT","trackPageview","window","analytics","page","trackUserIdentity","user","firstName","lastName","company","intercomHash","identify","id","integrations","Intercom","user_hash","log","console","bind","ERROR_TYPES","FormTypes","countryCodes","KEY_CODES","MODAL_VARIANTS","KEY_CODE_VALUES","escape","tab","enter","arrowUp","arrowDown","space","SortDirection","BIDS_SORT_FIELD","BID_INVITE_STATUS","BID_PACKAGE_STATUS","BID_REQUESTS_SORT_FIELD","BID_REQUEST_STATUS","COMPANY_SIZE","COMPANY_STATUS","COMPANY_TYPE","CONTACT_TITLE","DOCUMENT_ENTITY","PROJECT_STATUS","USER_STATUS","USER_TYPE","PROJECTS_ROUTE_TYPE","BID_INVITE_ACTION_ROUTE_TYPE","orderedCompanySizes","size_1_10","size_11_50","size_51_200","size_201_500","size_501_1000","size_1001_5000","size_5000plus","useAuthToken","useTranslation","hasDisplayedLocalStorageError","useRef","getStoredToken","useCallback","current","removeStoredToken","removeItem","tokenContent","jwtDecode","getTimeToExpiration","exp","moment","unix","isTokenValid","getRoutePathParams","paramsEnum","params","routes","root","projectsRoot","projects","showProject","projectId","createProject","printProjectDocuments","editProject","printBidPackageDocuments","bidPackageId","bidPackages","showBidPackage","showBidPackageLegacy","createBidPackage","editBidPackage","bidRequests","bidInvite","bidInviteId","bidRequest","bidRequestId","bidInviteAction","action","bidInviteActionLegacy","subcontractors","bids","profile","admin","login","signup","resetPassword","createPassword","invitation","printBidders","mutationRefresh","gql","fragmentCurrentUserForAuthentication","queryCurrentUserForReAuthentication","useAuthentication","useState","status","authenticating","authState","setAuthState","useApolloClient","useEffect","refreshIfTokenIsValidAndHourPassed","mutate","mutation","then","data","refreshToken","setItem","setFirstAuthState","newAuthState","setTimeout","setInterval","anonymous","me","authenticated","companyType","isAdmin","catch","Console","redirectTo","history","push","reset","undefined","resetStore","useStack","initialValue","stack","setStack","peek","length","pop","slice","value","toggle","contains","includes","remove","filter","item","debug","useModalsManager","getIsActive","modalRef","setAsActive","setAsInactive","getIsOpen","getMatches","mobile","matchMedia","matches","desktop","useQueryMatches","setMatches","handleResize","throttle","addEventListener","removeEventListener","isMobile","isDesktop","isAuthenticated","authContext","AuthContext","createContext","ModalsContext","QueryMatchesContext","ICON_CODE","StyledIcon","styled","i","props","left","top","Icon","data-cy-icon","ClickableBase","forwardRef","ref","Clickable","disabled","Wrapper","IconWrapper","span","AddMoreLink","children","colors","getColorFromName","toLocaleLowerCase","charCodeAt","Image","div","avatarUrl","Letter","color","Math","round","Avatar","className","charAt","Spinner","textMedium","height","xmlns","viewBox","preserveAspectRatio","style","transform","r","fill","attributeName","begin","values","keyTimes","dur","repeatCount","fillOpacity","PageLoader","StyledPageError","MessageBox","danger","Message","isOnlyMessage","PageError","hasMultipleMessages","Array","isArray","messageArr","data-cy-page-error","text","key","data-testid","QueryErrors","buildAttachableName","parts","Boolean","isNilOrEmptyString","is","match","testFn","fieldValues","required","minLength","min","maxLength","max","minValue","parseFloat","notEmptyArray","test","url","notAfter","getTargetDate","targetDate","isSameOrBefore","notBefore","isSameOrAfter","isNestedValidators","obj","Function","isValidator","isMultipleValidators","generateErrors","fieldValidators","allFieldValues","errors","assignError","validator","errorMessage","assignErrorBuilder","asignNestedError","nestedValidators","allValues","errorMessages","nestedValues","hasErrorMessages","find","assignNestedErrorBuilder","entries","validators","flat","RequiredFieldsNoteWrapper","RequiredFieldsNote","Form","validations","validateOnBlur","validate","Element","noValidate","borderMedium","icon","invalid","Input","onChange","renderInput","renderProps","event","target","inputProps","displayName","NULL_ITEM","label","isEntered","state","ENTERED","isExiting","EXITING","isExited","EXITED","isEnter","ENTERING","isEntering","useClickOutside","options","refs","onClickOutside","handleClick","HTMLElement","document","CardContent","Card","isOpen","hasClosed","DropdownCardBase","triggerRef","matchTriggerWidth","Transition","in","timeout","data-cy-dropdown-card-open","DropdownCard","overlay","getBoundingClientRect","right","alignedToBottom","alignedToRight","body","clientWidth","propTypes","PropTypes","node","isRequired","Portal","ReactDOM","createPortal","getElementById","DropdownActionBase","isDisplayed","tabIndex","aria-hidden","DropdownAction","textDark","accent","highlightWhite","DropdownCardContent","StyledClickable","IconClickable","onClick","iconProps","StyledSelect","ValueContainer","ChevronIcon","Placeholder","textLightBlue","ValueSingle","ValueMulti","ValueMultiItem","DropdownInput","input","textDarkest","ClearIcon","StyledDropdownCardContent","OptionBase","isSelected","isHighlighted","Option","OptionsMessage","textLight","SelectBase","placeholder","selectedItem","onSelect","onCreate","isValueEmpty","renderValue","showChevron","showNullOption","closeDropdownOnSelect","getIsLabelInOptions","setIsOpen","filterRaw","setFilterRaw","isCreatingOption","setIsCreatingOption","searchInput","trigger","trim","filteredOptions","toLowerCase","closeDropdown","blur","clearFilter","focus","isBeingFiltered","canCreateOption","optionHighlightOffset","inputValue","itemToString","defaultHighlightedIndex","initialSelectedItem","newOptionName","createdOptionValue","onStateChange","changes","Downshift","stateChangeTypes","changeInput","stateReducer","keyDownEnter","clickItem","highlightedIndex","downshift","data-name","getRootProps","as","getToggleButtonProps","unmountOnExit","data-cy-select-dropdown-card","getMenuProps","getInputProps","onKeyDown","stopPropagation","getItemProps","hidden","data-create-option-name","itemName","option","data-select-option-value","index","count","SelectSingle","selectedOption","SelectMulti","selectedItems","remainingOptions","optionValue","StyledTextarea","preventResize","Textarea","minRows","textareaProps","onlyOnKeyboardFocus","hasReceivedMouseDown","handleMouseDown","whenKeyboardFocus","callback","StyledDatePicker","StyledDropdownCardBase","withTime","StyledDropdownCard","DropdownCardInternal","StyledDateSection","CurrentMonthYear","YearSelect","select","PrevNextIcons","Grid","Header","Cell","Day","isFiller","hoverStyles","isToday","selectedStyles","Week","isFirst","isLast","StyledTimeSection","Time","formatDate","date","format","formatDateTime","formatDateTimeForAPI","utc","formatDateForAPI","getSelectedDate","minutes","minute","set","second","millisecond","EDITING_STATE","useDatePicker","datePickerRef","inputRef","cardRef","clickOutsideRefs","displayedDate","setDisplayedDate","setInput","editingState","setEditingState","selectedDate","dateFormat","handleClickOutside","newSelectedDate","isValid","handleKeyboardExit","keyCode","openDropdown","changeYear","year","Number","goToPrevMonth","subtract","goToNextMonth","add","changeDay","day","month","changeTime","time","split","hour","handleManualInput","manualInputValue","DateSection","daysBefore","monthStart","startOf","weekStart","diff","range","generateDaysBefore","monthDays","times","daysInMonth","daysAfter","monthEnd","endOf","generateDaysAfter","isFirstDayMonday","weekday","isFirstWeekInMonth","isLastWeekInMonth","weekdaysMin","week","data-cy-day","isSame","formatTime","TimeSection","timeSectionRef","useLayoutEffect","$selectedTime","querySelector","selectedTimeOffsetTop","offsetTop","scrollTop","floor","paddedHour","data-time","DatePicker","data-cy-date-picker-name","autoComplete","onMouseDown","onFocus","useGoogleMapsApi","gmApiCallback","google","setGoogle","setGoogleFromWindow","on","script","createElement","onload","async","src","getElementsByTagName","appendChild","loadScript","off","boundsForGermany","east","north","south","west","LocationSearch","onPlaceSelect","autocomplete","updateLocation","place","getPlace","isPlaceValid","formatted_address","lat","geometry","String","location","long","lng","maps","places","Autocomplete","types","bounds","placeListener","addListener","inputListener","addDomListener","preventDefault","IMAGE_TYPE","StyledCheckbox","Label","CheckIcon","HiddenInput","Checkbox","checkboxLabel","checked","checkboxProps","checkboxId","uniqueId","htmlFor","StyledRadioButton","StyledRadioGroup","RadioButtonGroup","data-cy-radio-button","queryStringToObject","str","queryString","parse","arrayFormat","avatar","w","h","fit","crop","imageUploader","logo","fm","project","getImageUrl","storageKey","path","getImagePath","stringify","objectToQueryString","auto","queryImageUploadUrl","StyledImageUploader","SpinnerContainer","Dropzone","paddingBottom","img","RemoveLinkContainer","RemoveLink","uploadImageToStorage","uploadUrl","file","a","axios","put","ImageUploader","preview","setPreview","isUploading","setUploading","useDropzone","accept","multiple","onDrop","URL","createObjectURL","variables","filename","imageUploadUrl","revokeObjectURL","data-cy-image-uploader","alt","formatWithLocale","locale","Intl","NumberFormat","getDecimalSeparator","replace","getNumeralGroupSeparator","CurrencyInput","language","formattedValue","rawValue","numeral","numeralThousandsGroupStyle","numeralDecimalMark","delimiter","FieldWrapper","hasLabel","FieldLabel","FieldError","generateField","FormComponent","FieldComponent","useField","touched","setValue","fieldId","hasError","Field","ExternalLinkStyled","ExternalLink","to","href","startsWith","rel","Text","Name","Anchor","fragmentSubcontractorInfo","SubcontractorInfo","subcontractor","street","postalCode","city","countryCode","website","getContactName","contact","isPerson","getContactNameWithTitle","bidInviteStatusIconKey","draft","sent","failed","opened","viewed","bidRequestStatusIconKey","pendingInvite","invited","undecided","inviteDeclined","inviteAccepted","bidSubmitted","bidAwarded","bidRejected","withdrawn","Contact","Info","IconAvatar","Status","StatusIcon","attrs","ResendIconWrapper","ResendIcon","mutationSendInvitation","ResendInvitationLink","useMutation","refetchQueries","awaitRefetchQueries","sendInvitation","loading","confirmText","renderLink","ClickableText","open","isWorking","onConfirm","close","NameAvatar","fragmentContactsList","ContactsList","bidInvites","isProjectClosed","showResendLink","phone","mobilePhone","fax","nameWithTitle","getHumanReadableCompanySize","StyledButton","linkTo","buttonProps","omit","linkProps","iconSize","hollow","hollowStyles","filledStyles","working","disabledStyles","iconOnly","iconOnlyStyles","StyledSpinner","backgroundDark","buttonColor","textMediumBlue","borderBlue","Button","variant","otherProps","success","getColorFromButtonVariant","spinnerColor","white","Container","fullHeight","rest","FormElements","scrollable","Buttons","ModalFormBody","useFullPageHeight","submitText","onSubmit","submitOnEnter","isLoading","queryObj","isEmpty","isDoneLoading","doesErrorMatchCode","gqlError","DropdownMenuContext","closeModal","isTriggered","Action","useContext","forwardedAs","theme","isLarge","StyledContainer","getTheme","parentTheme","renderTrigger","setIsTriggered","Provider","toggleTrigger","DocumentsTableContainer","StyledProgress","paddingTop","ProgressLabel","fontSize","ProgressBar","percentComplete","StyledTopControls","TopControlsButton","isLink","TopControlsDropdownTrigger","StyledDocumentsTable","MobileContentContainer","currentlyVisibleRows","NoResultsReadOnly","NoResultsUploadable","RootDropzoneArea","StyledHeaders","percentWidth","nestingLevel","DropArea","StyledDragHighlightZone","highlightStyles","Row","isAtTopOfList","isFolderAndOpen","ItemActions","isShown","isAboveOthers","MobileRowsContainer","StyledFolder","FolderName","StyledFile","FileColumns","iconWidth","FileColumnName","FileColumnSize","FileColumnLast","DropdownMenu","itemActionsTriggerSize","ItemActionsAction","ItemActionsTrigger","ProgressBars","progress","progressRef","abs","currentFileProgress","currentFileName","DocumentsTableContext","documents","isReadOnly","downloadURL","handleFilesDrop","handleFileOrFolderMove","refetch","mobileNavigation","toggleFolder","getIsCurrentlySelected","setCurrentlyVisibleRows","rootId","useKeyboardEventCallback","element","condition","handleEvent","useModalState","isOpenProp","onOpen","onClose","isActive","upToDateSetAsInactive","openModal","Overlay","transitionState","Layout","overlayStyles","center","aside","fullSize","cardStyles","CloseIcon","closeIconStyles","ModalContent","renderContent","modalCardRef","data-test-is-active","data-cy-close-modal","isReadyToLoad","Modal","modalStateData","StyledModalContent","Title","InputModal","cancelText","submitButtonVariant","onCancel","getFormOptions","handleCancel","formOptions","formData","data-cy-button-name","NameFormModal","formLabel","confirm","initialValues","autoFocus","DropzoneLink","targetFolder","files","TopControls","rootFolder","printPath","webkitdirectory","newFolderName","createFolderAndSave","DragHighlightZone","setHighlighted","dragTargets","moveZone","onDragEnter","currentTarget","onDragLeave","onDragOver","DropzoneArea","data-cy-droparea-root","isRoot","data-cy-droparea-folder-name","NoResultsMessage","Headers","FolderDropzone","folder","formatFileSize","bytes","decimalPoint","k","toFixed","addItemIdToMoveEvent","movedItemId","dataTransfer","setData","JSON","p","ConfirmationModal","confirmationButtonVariant","isWorkingProp","isWorkingState","setIsWorkingState","handleConfirm","Item","ancestor","saveCallback","save","serializable","this","removeChild","addChild","newName","ancestorPath","getPath","File","Folder","contents","sort","b","localeCompare","getFiles","doc","childItem","createdDocuments","documentId","sourceDirectoryPathArray","wasUploadedFileInFolder","getOrCreateFolderAtPath","createFolder","uuidv4","findItembyId","result","pathArray","currentFolder","folderName","existingFolder","getChildFolders","ItemControls","data-cy-dropdown-trigger","updateName","delete","rowProps","data-cy-folder","data-cy-filename","draggable","onDragStart","data-cy-file-link","updatedAt","FolderRow","isFolderOpen","data-cy-folder-name","data-cy-nesting-level","Desktop","FolderWithContents","setOpen","getFilesWithDocs","folders","Mobile","isParentCurrentlySelected","folderId","isCurrentlySelected","mutationCreateDocument","mutationUpdateDocument","createDocument","encodeURIComponent","response","uploadDocumentToStorage","onFileProgress","onUploadProgress","progressEvent","total","loaded","updateDocument","uploaded","createDocumentsFromFiles","onFileUploaded","completedCount","createDocumentFromFile","defaultUploadProgressState","uploadedCount","totalCount","useProgressState","setProgress","newFields","previousFields","useFilesDropHandler","updateProgress","resetProgress","part","addDocuments","useMobileNavigation","rootFiles","rootFolders","getMoveHandler","getData","movedItemJSON","parsedJSON","moveTo","getDownloadURLBuilder","fileTreeIds","queryParams","stringifyUrl","fileTreeId","PrintDialog","fonts","ready","print","DocumentsPrintContainer","Heading","h3","Table","table","TableHeader","th","FileNameColumn","col","SizeColumn","LastChangedColumn","tr","td","PrintDocuments","documentRows","buildDocumentRows","rows","fullPathName","concat","childFolder","DocumentsTable","printDocuments","context","fragmentDocumentsTableDocuments","fragmentDocumentsTableFileTree","queryFileTreeWithDocuments","queryCombinedFileTreeWithDocuments","mutationUpdateFileTree","DocumentsTableSingle","attachableType","attachableId","attachableName","onDocumentsCountChange","useQuery","attachable","onCompleted","completedData","fileTreeWithDocuments","queryResults","updateFileTree","refetchWithCallback","fetchedData","parsedFileTree","fileTree","updatedRootFolder","cloneDeep","DocumentsTableCombined","attachables","projectAttachable","projectName","bidPackageAttachable","bidPackageName","combinedFileTreeWithDocuments","fileTrees","flatMap","ClearQueryIcon","SearchInputElement","SearchInput","resetInput","onChangeHandler","changedValue","ContentWithScroll","DropdownMenuWrapper","HeadingLarge","h1","HeadingMedium","SectionTitle","SectionHint","SpaceBetween","TableSearch","BackLink","Link","DisabledIcon","ProjectClosedMessage","addBottomMargin","fragmentBidFormModal","draftBid","subcontractorDraftBid","mutationSubmitBid","mutationSubcontractorSubmitBid","StyledBidFormModal","SubcontractorSection","ContactsListSection","PullUp","StyledSectionTitle","BidFormModalForm","isUserSubcontractor","documentsCount","results","submitBid","mutating","bid","totalAmount","Bid","BidFormModal","formatCurrency","currency","CurrencyFormatter","StyledBidModal","Details","DetailsSection","DetailsTitle","DetailsTotalAmount","DetailsDateTime","DetailsMessage","fragmentBidModal","BidModal","data-cy-bid-modal-amount","data-cy-bid-modal-submitted-on","submittedAt","data-cy-bid-modal-message","TableElement","isResponsive","textAlign","fixedWidth","HeaderText","hasSort","headerTextSortStyles","SortIcon","TableBody","tbody","StyledRow","CellMobileLabel","CellIcon","CellText","CellLink","isClickLink","RouterLink","StyledPagination","Arrow","Pagination","currentOffset","itemsPerPage","totalRecords","accessibleRecords","currentPage","totalPages","ceil","startIndex","endIndex","handleChange","data-cy-pagination","data-cy-pagination-prev-page","data-cy-pagination-next-page","EmptyContent","CallToAction","Explanation","DefaultButton","useSort","setSort","getSortIcon","sortField","sortBy","sortDirection","asc","changeSort","sortVariables","desc","getSortVariables","offset","columns","column","Rows","highlightedRowId","cells","rowId","data-cy-row-key","React","Children","toArray","cell","j","data-cy-cell-name","testIdentifier","contentIfEmpty","isFiltered","limit","TotalAmountCell","fragmentBidsList","BidsList","currentBidId","currentBid","sortedBids","Date","getTime","unshift","bidRows","data-cy-bids-list","DeletionModal","titleKey","confirmTextKey","successKey","HtmlHeadTags","Helmet","truncate","IconLink","calculateHeight","Logo","data-cy-app-logo","fillRule","d","useQueryParamInitialAction","paramName","useLocation","useHistory","paramValue","search","pathname","FormattedMessageTime","shortFormat","yesterday","sameDay","lastDay","lastWeek","sameElse","calendar","ThreadsListWrapper","ThreadsListItem","MessageSnippet","ThreadHeader","OtherParticipant","Subject","fragmentThreadsList","ThreadsList","threads","onSelectThread","activeUserType","selectedThreadId","data-cy-threads-list","thread","otherParticipantNames","principal","lastMessage","recipientNames","numberOfRemainingParticipants","participatingCompanyOffice","getOtherParticipantNames","data-cy-threads-list-time","createdAt","subject","messageText","ButtonWrapper","mutationReplyToMessageThread","ThreadReplyForm","messageThreadId","replyToThread","isReplying","replyToThreadAndHandleErrors","authorType","form","resetForm","ThreadDetailsWrapper","GoBackWrapper","StyledAvatar","MessageContent","MessageHeader","MessageHeaderFirstRow","Author","Recipient","MessageText","ReplyWrapper","queryMessageThread","ThreadDetails","unselectThread","messageThread","data-cy-thread-details","messages","authorName","names","data-cy-thread-details-time","NewMessageWrapper","SingleRecipient","mutationCreateMessageThread","NewMessage","potentialRecipients","selectThread","goBack","createThread","selectOptions","bidRequestIds","recipient","createMessageThread","createThreadAndNotifyUser","agent","MessagesWrapper","useBorder","ControlsArea","StyledSearchInput","DetailsArea","fragmentMessages","Messages","threadsQuery","threadsQueryName","queryThreads","threadsQueryMeta","setState","searchString","setSearchString","openNewMessage","called","messageThreads","loadThreads","displayThreadsList","displayDetailsArea","displayControlsArea","data-cy-input-name","Bar","nav","UserDropdownTrigger","Username","HelpLink","Topbar","userType","data-cy-topbar","NavLink","employee","data-cy-logout","ErrorBoundaryWithoutTranslation","reloading","reload","errorInfo","Sentry","scope","setExtras","content","Component","ErrorBoundary","withTranslation","PageContainer","PageContent","withBackLink","Page","withTopbar","data-cy-back-link","SidebarContainer","PageWithSidebar","renderSidebar","pageProps","RowBadgeWrapper","RowBadgeAvatar","RowBadgeName","RowBadge","Links","StyledLink","Content","prepend","currentUrl","isDefault","useRouteMatch","isExact","Route","routeProps","matchPath","LogoContainer","ContentBox","ContentBoxSmall","UnauthenticatedPage","FieldRow","DeleteIcon","AddLink","getNewUser","UsersInviteModal","users","render","_user","mutationDeactivateUser","mutationReactivateUser","mutationResendUserInvite","mutationCancelInvite","mutationRestoreInvite","mutationAdminLoginAsUser","mutationUpdateUserType","LoginAsUser","userId","loginAsUser","adminLoginAsUser","ResendInvite","resendInvite","CopyInviteLink","invitationLink","navigator","clipboard","writeText","CancelInvite","cancelInvite","RestoreInvite","restoreInvite","DeactivateUser","ReactivateUser","reactivateUser","ChangeTypeModal","updateUserType","external","fragmentUsersTableDropdown","UsersTableDropdown","isCurrentUser","actions","active","inviteCanceled","inviteFailed","inactive","Tip","SuccessMessage","SubmitButton","BottomLink","BottomLinkLeftAligned","mutationLogin","mutationResetPassword","mutationCreatePassword","queryCheckResetPasswordToken","queryInvitation","mutationActivateInvitee","mutationSignup","AuthLogin","mutateLogin","password","redirect","graphQLError","queryCurrentUser","queryWorkCategories","mutationUpdateBidRequestStatusBySubcontractor","mutationUpdateBidRequestDeclinedReasonBySubcontractor","queryBidRequestForBidInviteFeedback","useBidInviteFeedback","bidRequestQuery","bidRequestForSubcontractor","setBidRequestStatus","statusMutationResult","setBidRequestDeclinedReason","declinedReasonMutationResult","getBidRequestStatus","isFeedbackNeeded","hasGivenFeedback","setDeclinedReason","declinedReason","BidInviteFeedback","data-cy-success","Signup","completed","setCompleted","mutationError","companyName","termsAccepted","submitValues","i18nKey","AuthResetPassword","setStatus","errorObj","entityName","getErrorMessage","AuthCreatePassword","redirectOnError","tokenError","AuthInvitation","useParams","queryError","activateInvitee","inviter","invitee","statusTagListStyles","statusTagHeaderStyles","StatusTag","inList","getUserStatusColor","UserStatusTag","getCompanyStatusColor","CompanyStatusTag","getBidRequestStatusColor","BidRequestStatusTag","getBidPackageStatusColor","published","BidPackageStatusTag","getProjectStatusColor","ProjectStatusTag","queryProjects","mutationDeleteProject","ProjectsList","closed","number","customer","primaryUser","data-cy-project-status","Projects","Tabs","List","UnauthenticatedWrapper","WithdrawnHeading","PageNotFoundContent","data-cy-404-page","Authenticated","Unauthenticated","RequestWithdrawn","WithdrawnPage","queryProjectForShow","queryProjectForPrintingDocuments","queryOfficesForProjectOverview","queryProjectForOverview","mutationCloseProject","mutationReopenProject","mutationUpdateProject","mutationCreateProject","queryBidPackages","mutationDeleteBidPackage","BidsDueAtDate","BidsDueAtTime","TimeCell","StatsCell","highlighted","faded","BidPackagesDropdown","bidPackageStatus","BidPackagesList","projectStatus","ASC","bidPackage","bidsDueAt","requestStatusCount","bidders","accepted","ActionButton","ProjectStatusAction","refetchProject","mutationProjectAvailability","toggleProjectAvailability","handleStatusToggle","successMessage","DisplayField","mapValue","x","field","isValueMissing","FormRow","isEditing","data-cy-form-row-label","FormWrapper","Controls","ControlsButton","StyledFormCheckbox","StyledImage","useUserAuthStatus","isUserAuthenticated","isUserEmployee","isUserAnonymous","isAnonymous","isUserAuthenticating","isUserPrincipal","isUserAgent","isUserAdmin","userBaseUrl","queryUsersForProjectForm","UsersForm","assignedUsers","formUser","modifyUser","assignedUserIds","Set","userRole","sourceId","handleSubmit","sourceUser","has","Role","UserActionIcon","RadioButtonCircle","selected","EmptyTable","EmptyTableExplanation","AddMore","ProjectUserAvatar","ProjectUserBadgeWrapper","ProjectUsersTable","projectUsers","arrayHelpers","primaryUserId","setPrimaryUserId","editedProjectUser","headUser","ProjectUsers","fieldArrayRenderProps","newUser","Overview","offices","currentUser","initialUserId","submitForm","onlyAllowEdit","editByDefault","setIsEditing","initialProjectUsers","officeSelectOptions","office","imageKey","startsOn","endsOn","description","isEstimating","budget","officeId","forceSubcontractorSignup","notes","remainingValues","data-cy-project-image","setFieldValue","newId","OverviewEdit","projectQuery","officesQuery","updateProject","edit","ShowProject","notFound","PageNotFound","data-cy-project-name","BidPackages","Project","OverviewCreate","CreateProject","component","formatAddress","addressComponents","foundCountryCode","isCentered","TextWrapper","isAlignedWithAvatar","JobTitle","fragmentContactInfo","ContactInfo","centerAvatar","jobTitle","SubcontractorWrapper","SubcontractorMain","SubcontractorName","SubcontractorAddress","SubcontractorWorkCategoriesList","SubcontractorAction","WorkCategoryTag","ShowAllContactsButton","ShowAllContactsText","fragmentSubcontractorsListItem","SubcontractorsListItem","renderContactAction","renderActions","showContactsWithoutEmails","areAllContactsVisible","setAreAllContactsVisible","address","contacts","visibleContacts","hasMoreContactsToShow","data-cy-subcontractor-id","workCategories","workCategory","querySubcontractors","withShadow","FiltersWrapper","DistanceSelect","Distance","DistanceLabel","FilterLabel","Subs","SubsNoResults","Filters","filters","setFilters","locationString","setLocationString","notifyOnNetworkStatusChange","partialRefetch","distance","workCategoryIds","getQueryVariablesForFilters","latLong","companySizes","SubcontractorsList","renderHeaderAction","renderNoResults","defaultFilters","displayContent","isMounted","reloadFilters","debounce","filtersToReloadWith","handleReset","queryBidPackageForAddBidders","mutationAddContactToBidRequest","StyledHeadingMedium","ModalDescription","SubButton","ContactAction","bidPackageRefetch","subcontractorId","contactId","isBanned","addContactToBidRequest","addedContactIds","data-cy-add-contact","BiddersAdd","queryBidRequestsForBidPackage","queryBidPackageHeaderForPrint","queryBidRequestsForPrint","mutationDeleteBidRequest","mutationAwardBidRequest","mutationUnAwardBidRequest","mutationRejectBidRequest","mutationUnRejectBidRequest","mutationUpdateBidRequestStatusInBidders","ChangeStatusModal","changeStatus","StyledTable","haveAllInvitesFailed","statusStyles","StatusActions","StatusActionButton","BidderActions","PrintButton","TableCell","TableName","TableSecondary","StatusLink","RequestContainer","NoSelectionMessage","RequestSidebar","AdditionalInfo","RequestAddBid","DisplayReason","ModalCheckbox","RejectBidRequestModal","isRejecting","shouldSendNotification","setShouldSendNotification","hasTotalAmount","BiddersRequest","isAnyBidRequestAwarded","awardBid","isAwarding","unAwardBid","isUnAwarding","rejectBid","unRejectBid","isUnRejecting","isStatusEditable","data-cy-contacts-container","data-cy-status","deleteBid","data-cy-link","fragmentBidPackage","Bidders","activeRequestId","setActiveRequestId","subcontractorName","activeRequest","Add","lastChanged","contactName","every","n","data-cy-status-container","data-cy-bid-request-last-changed","Request","queryProjectWithBidPackages","queryBidPackageForShow","queryBidPackageForOverview","queryBidRequestsForMessages","queryMessageThreadsInBidPackage","queryBidPackageForPrintingDocuments","mutationPublishBidPackage","mutationCreateBidPackage","mutationUpdateBidPackage","useTabPathFragment","Sidebar","ProjectNumber","ProjectName","ListTitle","BidPackageLink","highlightLight","highlightMedium","BidPackageNumber","BidPackageName","BidPackagesSidebar","tabPathFragment","sortedBidPackages","StyledPageWithSidebar","StyledTabsContainer","StyledTabsContent","ScrollableTabsContent","MainActionButton","PublishBidPackageButton","publishBidPackage","MessagesTab","useLazyQuery","updateBidPackage","ShowBidPackage","data-cy-bid-package-name","data-cy-status-tag","data-cy-tabs-container","BidPackage","CreateBidPackage","querySubcontractorForEdit","mutationDeleteSubcontractor","mutationCreateSubcontractor","mutationUpdateSubcontractor","ContactsListWrapper","ContactsListItem","StyledAddMoreLink","StyledContactInfo","ContactsListActions","ContactsListAction","ModalHeading","StyledExplanation","makeValidateEmailIsUnique","valueOccurences","contactValues","ContactsForm","validation","validationArgs","mr","ms","removeContact","replaceContact","data-cy-contact-id","Contacts","SubcontractorsForm","createOrUpdateSubcontractor","allWorkCategoryNames","companySize","workCategoryNames","category","setSubmitting","selectOptionValue","uniq","country","otherCountry","EditSubcontractor","subcontractorError","queryData","Subcontractors","new","Edit","queryBids","Bids","data-cy-bids-title","data-cy-submitted-at-timestamp","BiddersPrintContainer","InnerTable","OuterTable","StatusColumn","NameColumn","EmailColumn","PhoneColumn","FaxColumn","CurrentBidColumn","BidRequestRow","ContactRow","hasContactEmail","PrintBidders","biddersError","biddersQueryResults","bidPackageHeaderError","bidPackageHeaderResults","ColumnGroup","colSpan","filterAndSortBidInvites","BidRequestHeading","BidRequestOffice","TopLink","FormElementRow","FormElementRowItem","queryBidInvite","mutationClaimBidInvite","mutationAgentSignup","BidInviteSignup","agentSignup","signupData","ClaimBidInvite","claimBidInvite","BidInvite","Claim","documentsQueryResults","queryAdminCompanies","mutationAdminUpdateCompany","mutationAdminActivateCompany","mutationAdminInviteUsers","EditForm","updateCompany","remindersEnabled","CompaniesDropdown","adminInviteUsers","inviteMutating","adminActivateCompany","activateMutating","pendingApproval","companyId","Companies","adminCompanies","companies","queryAdminUsers","AdminUsers","adminUsersRequest","currentUserRequest","adminUsers","queryAdminBidRequests","Dropdown","data-cy-link-name","AdminBidRequests","adminBidRequests","Admin","Users","BidRequests","mutationUpdateProfile","mutationUpdatePassword","ProfilePersonal","updateProfile","maxWidth","ProfilePassword","updatePassword","currentPassword","newPassword","Profile","Personal","Password","queryUsers","queryCompany","mutationUpdateCompany","mutationInviteUsers","CompanyUsers","usersRequest","inviteUsers","inviteUsersMutating","formatUserName","queryOffices","mutationCreateOffice","mutationUpdateOffice","OfficesForm","createOrUpdateOffice","logoKey","Offices","CompanyProfile","Company","queryBidRequestsForAgent","bidRequestsForAgent","queryBidRequestForSubcontractor","queryMessageThreadsInBidRequest","ContactInfoItems","ContactInfoItem","ProjectContacts","ProjectContact","role","CustomerInfo","OverviewWrapper","Left","Right","InfoItem","InfoLabel","InfoValue","Description","CustomerLogo","startsAndEndsOn","primaryUserWithRole","secondaryUsers","projectContacts","customerSection","DeclinedReasonAsk","DeclinedReasonForm","mutateDeclinedReason","ActionsBar","ActionsContent","StyledProjectClosedMessage","DecisionButton","ChangeFeedbackButton","DecisionIcon","Actions","selectedStatus","setSelectedStatus","mutateStatus","statusLoading","selectStatus","Promise","resolve","BidsWrapper","StatusMessage","BidsListContainer","isBidRequestAwardedToOther","isBidRequestAwardedToUs","isBidSubmittedToBidRequest","getBidsWithTotalAmount","CurrentPrice","SubmitBidButton","CurrentBid","isBidAwarded","canSubmitBid","getCurrentBidTotalAmount","hasCurrentBid","BidRequest","potentialMessageRecipients","isNonAdminUser","data-cy-page","LogoLink","StyledLogo","highlightPrimary","LinkText","Navbar","data-cy-main-navbar","Main","main","AuthRoute","exact","withLayout","mountRoute","route","PrincipalRoute","AgentRoute","UserRoute","EmployeeRoute","AdminRoute","AnonymousRoute","Routes","PrintProjectDocuments","PrintBidPackageDocuments","Invitation","Login","ResetPassword","CreatePassword","AppOutdatedBar","VersionCheck","isOutdated","setIsOutdated","version","checkVersion","latestVersion","CheckPeriodInSeconds","useIsOutdated","StyledToast","Toast","transitionTime","toasts","setToasts","addToast","currentToasts","removeToast","TransitionGroup","CSSTransition","classNames","data-cy-toast","segmentKey","App","modalManagerProps","queryMatches","NormalizeStyles","BaseStyles","common","addMore","showingResults","showingResults_plural","showingManyResults_plural","cancel","submit","noResults","warning","confirmMessage","confirmDeleteMessage","confirmDeleteDescription","itemDeleted","appOutdated","itemRemoved","requiredFieldsNote","help","internalData","internalDataHint","documentsTable","download","downloadAll","dragToEmptyTable","dragToRoot","renameFolder","renameFile","uploadFiles","uploadFolder","uploadProgress","preparingFiles","documentsUploaded","documentsRemoved","empty","rename","emptyFolderUpload","bidDocuments","selectComponent","moreResults","create","creating","clearButtonLabel","uploadImage","uploadedImage","removeImage","bidList","latest","bidModal","bidSummary","details","bidFormModal","addBid","enterDetails","uploadDocuments","totalAmountPlaceholder","documentsError","bidAdded","companyInfo","numberShort","declined","mustBeBeforeStartDate","mustBeBeforeEndDate","mustBeAfterStartDate","image","manager","defaultUserRole","showAllContacts","showFewerContacts","unknownContact","contactPerson","subcontractorForm","heading","oneContactRequired","removeModalTitle","addAnotherButton","titleLabel","modalHeading","newContact","existingContact","request","invitees","invitedContacts","allInvitesFailed","submittedOn","bidInviteStatus","userStatus","datesAndTime","pageTitles","account","requestWithdrawn","adminPanel","validFileTreeString","termsMustBeAccepted","contactEmailNotUnique","apiErrors","downloadError","bidPackageAlreadyAwarded","bidCreationDeniedOnAwardedPackages","bidCreationDeniedOnUninvitedRequests","cannotDeleteBidRequest","bidPackageAlreadyPublished","cannotDeletePublishedBidPackage","cannotDeleteProjectWithPublishedBidPackages","cannotModifyClosedProject","thereWereValidationErrors","invalidEmailOrPassword","userNotActive","invalidCurrentPassword","resetPasswordTokenExpired","inviteTokenExpired","emailsNotDelivered","emailFailed","emailAlreadyExists","fileUploadFailed","userNotInvited","userInvitationAccepted","unauthorized","companyAlreadyActivated","bidRequestBelongsToOtherCompany","mustBeAgentToClaimBidInvite","userMustHaveInvitedStatus","userMustHaveInviteCanceledStatus","localStorageNotPermitted","primaryUserMustBeProjectUser","recipientsAreRequired","auth","forgotPassword","signOut","createPasswordSuccess","invitationHeading","invitationMessage","signupHeading","signupMessage","signupSubmit","signupSuccessHeading","signupSuccessMessage","accountCreated","invitationNotActiveHeading","invitationNotActiveTip","loginNow","bidRequestHeading","alreadyHaveAnAccount","goToLogin","bidRequestSignupHeading","instructions","remember","emailNotFound","myAccount","personalInfo","passwordUpdated","updated","deactivate","confirmDeactivateMessage","confirmDeactivateDescription","cancelInviteMessage","restoreInviteMessage","restoreInviteDescription","userDeactivated","exampleEmail","addAnother","sendInvitations","invitationsSent","inviteSent","inviteRestored","resendInviteModalTitle","reactivate","confirmReactivateMessage","confirmReactivateDescription","userReactivated","newOffice","editOffice","officeCreated","officeUpdated","copyInviteLink","copyInviteLinkSuccess","updateUserTypeSuccess","openProjects","closedProjects","overviewLabel","newProject","newProjectCallToAction","newProjectExplanation","closedProjectsHeadline","closedProjectsExplanation","reopenProject","closeProject","closeProjectConfirmTitle","reopenProjectConfirmTitle","closeConfirmMessage","reopenConfirmMessage","closeProjectSuccess","reopenProjectSuccess","removeUserTitle","removeUserMessage","emptyUsersList","usersTitle","editUserTitle","addUserLink","addUserTitle","created","backToProjects","phase","estimationPhase","bidPhase","overview","buttonLabels","headings","basicInfo","newSubcontractor","newSubcontractorCallToAction","newSubcontractorExplanation","editSubcontractor","backToProject","newBidPackage","newBidPackageCallToAction","newBidPackageExplanation","deleteBidPackage","biddersLabel","messagesLabel","publishAndSendInvitations","publishConfirmTitle","publishConfirmMessage","publishSuccess","removeConfirmTitle","removeConfirmMessage","removeSuccess","resendInvitation","resendInvitationConfirmTitle","resendInvitationSuccess","addBidders","inviteBidders","addDescription","inviteDescription","basedWithin","kilometersOf","added","banned","addSuccess","inviteConfirmTitle","inviteSuccess","resetFilters","bidAwardedSuccess","awardBidConfirmTitle","awardBidConfirmMessage","bidRejectedSuccess","rejectBidConfirmTitle","rejectBidConfirmMessage","rejectBidConfirmCheckboxLabel","bidUnRejectedSuccess","bidUnAwardedSuccess","unAwardBidConfirmTitle","unAwardBidConfirmMessage","selectToViewDetails","missingBid","addBidManually","addOrInviteBiddersCallToAction","addOrInviteBiddersExplanation","projectClosed","requestDeclinedReason","changeStatusSuccess","formFields","backToBidRequests","tableHeader","requests","overviewTabName","bidsTabName","messagesTabName","willYouBid","youWillBid","youWillNotBid","bidNotSubmitted","otherWasAwarded","declinedReasonHeader","declinedReasonAsk","declinedReasonSuccess","yes","no","maybe","changeFeedback","reviseBid","importantDates","bidsDue","expectedStart","expectedFinish","projectDetails","siteLocation","owner","projectDescription","bidPackageDescription","contactPersons","bidAmount","actionsBar","documentsPrint","home","requestWithdrawnHeading","requestWithdrawnMessage","errorBoundary","explanation","reloadButton","newCompany","editCompany","companyCreated","companyUpdated","activateCompany","activateCompanyTitle","activateCompanyMessage","activateCompanySuccess","viewAsSubcontractor","bidRequestTableHeader","emptyContentTitle","emptyContentExplanation","noMessages","callToAction","noMatchingMessages","buttons","newMessage","reply","send","resetSearchQuery","messageList","toMe","toAnother","threadsList","threadParticipants_plural","threadParticipants","toSingleRecipient","successNotification","fieldLabels","newReply","countries","AW","AF","AO","AI","AX","AL","AD","AE","AR","AM","AS","AQ","TF","AG","AU","AT","AZ","BI","BE","BJ","BF","BD","BG","BH","BS","BA","BL","SH","BY","BZ","BM","BO","BQ","BR","BB","BN","BT","BV","BW","CF","CA","CC","CH","CL","CN","CI","CM","CD","CG","CK","CO","KM","CV","CR","CU","CW","CX","KY","CY","CZ","DE","DJ","DM","DK","DO","DZ","EC","EG","ER","EH","ES","EE","ET","FI","FJ","FK","FR","FO","FM","GA","GB","GE","GG","GH","GI","GN","GP","GM","GW","GQ","GR","GD","GL","GT","GF","GU","GY","HK","HM","HN","HR","HT","HU","ID","IM","IN","IO","IE","IR","IQ","IS","IL","IT","JM","JE","JO","JP","KZ","KE","KG","KH","KI","KN","KR","XK","KW","LA","LB","LR","LY","LC","LI","LK","LS","LT","LU","LV","MO","MF","MA","MC","MD","MG","MV","MX","MH","MK","ML","MT","MM","ME","MN","MP","MZ","MR","MS","MQ","MU","MW","MY","YT","NA","NC","NE","NF","NG","NI","NU","NL","NO","NP","NR","NZ","OM","PK","PA","PN","PE","PH","PW","PG","PL","PR","KP","PT","PY","PS","PF","QA","RE","RO","RU","RW","SA","SD","SN","SG","GS","SJ","SB","SL","SV","SM","SO","PM","RS","SS","ST","SR","SK","SI","SE","SZ","SX","SC","SY","TC","TD","TG","TH","TJ","TK","TM","TL","TO","TT","TN","TR","TV","TW","TZ","UG","UA","UM","UY","US","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YE","ZA","ZM","ZW","bidCreationDeniedMissingTotalAmount","applyGoogleTranslateFix","Node","prototype","originalRemoveChild","child","parentNode","apply","arguments","originalInsertBefore","insertBefore","newNode","referenceNode","dsn","environment","load","listen","Analytics","interceptors","use","initReactI18next","init","resources","translations","fallbackLng","defaultNS","fallbackNS","interpolation","escapeValue","de","client"],"mappings":"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zB,GAAKJ,OAAOC,UAAZ,CADgE,IAGxDI,EAAsDD,EAAtDC,UAAWC,EAA2CF,EAA3CE,SAAUxF,EAAiCsF,EAAjCtF,MAAOyF,EAA0BH,EAA1BG,QAASC,EAAiBJ,EAAjBI,aAC7CR,OAAOC,UAAUQ,SACfL,EAAKM,GACL,CACEL,YACAC,WACAxF,QACAyF,QAAS,CACPG,GAAIH,EAAQG,GACZrF,KAAMkF,EAAQlF,OAGlB,CACEsF,aAAc,CACZC,SAAU,CACRC,UAAWL,QC5CN,IACbM,KAA0BC,QAAQD,IAAIE,KAAKD,SAJpC,cAKP9G,OAA4B8G,QAAQ9G,MAAM+G,KAAKD,SALxC,gB,SHNGlB,K,gCAAAA,E,8BAAAA,E,uBAAAA,Q,cCAAC,K,kBAAAA,E,gBAAAA,E,mBAAAA,Q,KGAL,ICAKmB,GCAAC,GFACC,GAAe,CAC1B,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA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","file":"static/js/main.e9423c49.chunk.js","sourcesContent":["export enum COLOR {\n  primary = 'hsl(221, 66%, 42%)', // blue\n  success = 'hsl(127, 60%, 41%)', // green\n  danger = 'hsl(0, 73%, 56%)', // red\n  warning = 'hsl(35, 94%, 54%)', // orange\n  accent = 'hsl(268, 64%, 56%)', // purple\n\n  textDarkest = 'hsl(0, 0%, 20%)',\n  textDark = 'hsl(0, 0%, 38%)',\n  textMedium = 'hsl(0, 0%, 48%)',\n  textMediumBlue = 'hsl(218, 17%, 55%)',\n  textLight = 'hsl(0, 0%, 58%)',\n  textLightBlue = 'hsl(219, 17%, 65%)',\n\n  backgroundDark = 'hsl(217, 20%, 60%)',\n  backgroundMedium = 'hsl(219, 22%, 87%)',\n  backgroundLight = 'hsl(210, 33%, 98%)',\n\n  highlightPrimary = 'hsl(221, 46%, 47%)',\n  highlightDark = 'hsl(217, 20%, 55%)',\n  highlightMedium = 'hsl(219, 22%, 82%)',\n  highlightLight = 'hsl(210, 33%, 93%)',\n  highlightWhite = 'hsl(210, 10%, 95%)',\n\n  borderLightest = 'hsl(220, 33%, 91%)',\n  borderLight = 'hsl(219, 22%, 87%)',\n  borderMedium = 'hsl(218, 9%, 75%)',\n  borderBlue = 'hsl(218, 49%, 85%)',\n\n  overlay = 'hslA(219, 17%, 65%, 0.7)',\n\n  white = '#FFF',\n}\n","import pubsub from 'sweet-pubsub';\nimport i18n from 'i18next';\n\nimport { get } from 'shared/utils/javascript';\n\ninterface Toast {\n  type?: 'danger' | 'warning' | 'success';\n  title?: string;\n  message?: string;\n  duration?: number;\n}\n\nconst show = (toast: Toast): void => pubsub.emit('toast', toast);\n\nconst success = (title: string): void => show({ title });\n\nconst error = (err?: Error | string): void => {\n  show({\n    type: 'danger',\n    title: i18n.t('error'),\n    message: get(err, 'message', err),\n    duration: 0,\n  });\n};\n\nconst warning = (message: { message: string } | string): void =>\n  show({\n    type: 'warning',\n    message: get(message, 'message', message),\n    duration: 0,\n  });\n\nexport default {\n  show,\n  error,\n  success,\n  warning,\n};\n","import { GraphQLError } from 'graphql';\nimport ApolloClient from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { setContext } from 'apollo-link-context';\nimport { onError, ErrorResponse } from 'apollo-link-error';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\nimport i18n from 'i18next';\n\nimport toast from 'shared/utils/toast';\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst errorLink = onError(({ operation, graphQLErrors = [], networkError }: ErrorResponse) => {\n  graphQLErrors.forEach(formatError);\n  if (\n    graphQLErrors.some(\n      error =>\n        error.extensions?.code === 'UNAUTHENTICATED' ||\n        error.message === 'Access denied! You need to be authorized to perform this action!',\n    )\n  ) {\n    const { logout } = apolloClient;\n    if (logout) logout();\n  }\n\n  // Ignore network errors for RefreshToken call because otherwise, if the user\n  // goes offline for an extended period of time, a large number of network errors\n  // may accumulate.\n  if (operation.operationName === 'RefreshToken') {\n    return;\n  }\n\n  if (networkError) {\n    toast.error(i18n.t('networkError'));\n  }\n});\n\nconst formatError = (error: GraphQLError) => {\n  switch (error.extensions?.code) {\n    case 'FAILED_EMAIL_DELIVERY':\n      formatEmailDeliveryError(error);\n      break;\n    case 'BAD_USER_INPUT':\n      formatBadUserInputError(error);\n      break;\n    default:\n      error.message = i18n.t(`apiErrors:${error.message}`, error.extensions?.exception);\n  }\n};\n\nconst formatEmailDeliveryError = (error: GraphQLError) => {\n  const msg = i18n.t('apiErrors:emailsNotDelivered');\n  const emailErrors = error.extensions?.exception.failedEmails\n    .map(({ email, messageKey }: { email: string; messageKey: string }) =>\n      messageKey && messageKey !== 'emailsNotDelivered'\n        ? i18n.t(`apiErrors:${messageKey}`, { email })\n        : i18n.t('apiErrors:emailFailed', { email }),\n    )\n    .join('\\n');\n  error.message = `${msg}:\\n\\n${emailErrors}`;\n};\n\nconst formatBadUserInputError = (error: GraphQLError) => {\n  const { fields } = error.extensions?.exception;\n  error.message = i18n.t('apiErrors:thereWereValidationErrors');\n\n  Object.keys(fields).forEach(fieldName => {\n    fields[fieldName] = fields[fieldName].map((err: { name: string; args: string }) =>\n      i18n.t(`validation:${err.name}`, err.args),\n    );\n    error.message = `${error.message}\\n\\n${fieldName}\\n${fields[fieldName].join('\\n')}`;\n  });\n};\n\nconst httpLink = new HttpLink({\n  uri: `${process.env.REACT_APP_API_BASE}/graphql`,\n});\n\nconst cache = new InMemoryCache();\nconst link = ApolloLink.from([authLink, errorLink, httpLink]);\n\n// This is an ugly workaround needed so we can trigger a logout from within\n// the Apollo error link. We should find a better solution if we can.\n// See components/App/App.jsx\nexport type ApolloClientWithLogout = ApolloClient<object> & { logout?: () => void };\n\nconst apolloClient: ApolloClientWithLogout = new ApolloClient({\n  cache,\n  link,\n  defaultOptions: {\n    query: { fetchPolicy: 'network-only' },\n    watchQuery: { fetchPolicy: 'network-only' },\n  },\n});\n\nexport default apolloClient;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { css } from 'styled-components/macro';\n\nexport const font = {\n  regular: css`\n    font-family: 'CircularStd', sans-serif;\n    font-weight: 450;\n  `,\n  medium: css`\n    font-family: 'CircularStd', sans-serif;\n    font-weight: 500;\n  `,\n  bold: css`\n    font-family: 'CircularStd', sans-serif;\n    font-weight: 700;\n  `,\n  black: css`\n    font-family: 'CircularStd', sans-serif;\n    font-weight: 900;\n  `,\n  size: (size: number) =>\n    css`\n      font-size: ${size}px;\n    `,\n};\n","export const mediaQueries = {\n  mobile: '(max-width: 767px)',\n  desktop: '(min-width: 768px)',\n};\n","import { css } from 'styled-components/macro';\nimport Color from 'color';\n\nimport { COLOR } from './color';\nimport { font } from './font';\n\nconst darken = (colorValue: string, amount: number): string =>\n  Color(colorValue)\n    .darken(amount)\n    .string();\n\nconst lighten = (colorValue: string, amount: number): string =>\n  Color(colorValue)\n    .lighten(amount)\n    .string();\n\nconst rgba = (colorValue: string, opacity: number): string =>\n  Color(colorValue)\n    .alpha(opacity)\n    .string();\n\nconst boxShadowMedium = css`\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\n`;\n\nconst boxShadowBorderMedium = css`\n  box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.1);\n  border: 1px solid ${COLOR.borderLight};\n  border-top: 1px solid ${COLOR.borderLightest};\n`;\n\nconst truncateText = css`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\nconst clickable = css`\n  cursor: pointer;\n  user-select: none;\n`;\n\nconst hardwareAccelerate = css`\n  transform: translateZ(0);\n`;\n\nconst clearfix = css`\n  *zoom: 1;\n  &::before,\n  &::after {\n    content: ' ';\n    display: table;\n  }\n  &::after {\n    clear: both;\n  }\n`;\n\nconst cover = css`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst placeholderColor = (colorValue: COLOR) => css`\n  ::-webkit-input-placeholder {\n    color: ${colorValue} !important;\n    opacity: 1 !important;\n  }\n  :-moz-placeholder {\n    color: ${colorValue} !important;\n    opacity: 1 !important;\n  }\n  ::-moz-placeholder {\n    color: ${colorValue} !important;\n    opacity: 1 !important;\n  }\n  :-ms-input-placeholder {\n    color: ${colorValue} !important;\n    opacity: 1 !important;\n  }\n`;\n\nconst scrollableY = css`\n  overflow-x: hidden;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n`;\n\ninterface CustomScrollbarOptions {\n  width?: number;\n  background?: string;\n}\nconst customScrollbar = ({\n  width = 8,\n  background = darken(COLOR.backgroundMedium, 0.2),\n}: CustomScrollbarOptions = {}) => css`\n  &::-webkit-scrollbar {\n    width: ${width}px;\n  }\n  &::-webkit-scrollbar-track {\n    background: none;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 99px;\n    background: ${background};\n  }\n`;\n\nconst backgroundImage = css`\n  background-position: 50% 50%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-color: ${COLOR.backgroundLight};\n`;\n\nconst link = (colorValue: string = COLOR.primary) => css`\n  cursor: pointer;\n  color: ${colorValue};\n  ${font.medium}\n  &:hover, &:visited, &:active {\n    color: ${colorValue};\n  }\n  &:hover,\n  &:focus {\n    text-decoration: underline;\n  }\n`;\n\nconst tag = css`\n  display: inline-block;\n  height: 24px;\n  line-height: 22px;\n  padding: 0 6px 0 8px;\n  border: 1px solid ${COLOR.borderLight};\n  border-radius: 4px;\n  cursor: pointer;\n  user-select: none;\n  background: ${COLOR.backgroundLight};\n  ${font.medium}\n  ${font.size(12)}\n  i {\n    margin-left: 4px;\n    vertical-align: middle;\n    font-size: 14px;\n  }\n`;\n\nexport const mixin = {\n  darken,\n  lighten,\n  rgba,\n  boxShadowMedium,\n  boxShadowBorderMedium,\n  truncateText,\n  clickable,\n  hardwareAccelerate,\n  clearfix,\n  cover,\n  placeholderColor,\n  scrollableY,\n  customScrollbar,\n  backgroundImage,\n  link,\n  tag,\n};\n","export const sizes = {\n  navbarWidthDesktop: 75,\n  navbarHeightMobile: 60,\n  topbarHeight: 50,\n  minViewportWidth: 1000,\n  secondarySideBarWidth: 230,\n};\n","const visibleMobileDocumentsTableRow = 1;\nconst mainVisibleMobileDocumentsTableRow = visibleMobileDocumentsTableRow + 1;\nconst tableItemDropdown = 3;\nconst documentsTableProgress = 5;\nconst tableLoadingIndicator = 10;\nconst topbar = 20;\nconst backLink = 21;\nconst navbar = 100;\nconst intercom = 2147483001;\nconst modalOverlayInactive = intercom + 1;\nconst modalInactive = modalOverlayInactive + 1;\nconst modalOverlay = modalInactive + 1;\nconst modal = modalOverlay + 1;\nconst modalCloseIcon = modal + 1;\nconst dropdown = modalCloseIcon + 1;\nconst toast = dropdown + 1;\n\nexport const zIndexValues = {\n  visibleMobileDocumentsTableRow,\n  mainVisibleMobileDocumentsTableRow,\n  tableItemDropdown,\n  documentsTableProgress,\n  tableLoadingIndicator,\n  topbar,\n  backLink,\n  navbar,\n  intercom,\n  modalOverlayInactive,\n  modalInactive,\n  modalOverlay,\n  modal,\n  modalCloseIcon,\n  dropdown,\n  toast,\n};\n","import { createGlobalStyle } from 'styled-components/macro';\n\nimport { COLOR, font, zIndexValues } from 'shared/utils/styles';\n\n// Google maps autocomplete dropdown styles\nexport default createGlobalStyle`\n  .pac-container {\n    z-index: ${zIndexValues.intercom + 4};\n    border: 1px solid #eee;\n    transform: translateY(8px);\n    ${font.regular};\n\n    .pac-item {\n      line-height: 36px;\n      ${font.size(14)}\n      &:first-of-type {\n        border-top: none;\n      }\n      .pac-icon {\n        margin-top: 10px;\n      }\n      .pac-item-query {\n        ${font.size(14)}\n      }\n      .pac-matched {\n        ${font.bold}\n      }\n    }\n    .pac-item:hover,\n    .pac-item-selected {\n      background: ${COLOR.backgroundLight};\n    }\n  }\n`;\n","export enum AUTH_STATUS {\n  authenticating = 'authenticating',\n  authenticated = 'authenticated',\n  anonymous = 'anonymous',\n}\n","export enum BUTTON_VARIANT {\n  primary = 'PRIMARY',\n  danger = 'DANGER',\n  success = 'SUCCESS',\n}\n","import { CurrentUserForAuthentication } from 'shared/hooks/__graphql__/CurrentUserForAuthentication';\n\nexport interface Analytics {\n  page({ title }: { title: string }): void;\n  reset(): void;\n  load(key?: string): void;\n  identify(\n    id: CurrentUserForAuthentication['id'],\n    user: Pick<CurrentUserForAuthentication, 'firstName' | 'lastName' | 'email'> & {\n      company: { id: string; name: string };\n    },\n    arg2: {\n      integrations: {\n        Intercom: {\n          user_hash: string;\n        };\n      };\n    },\n  ): void;\n}\n\ndeclare let window: Window & { analytics?: Analytics };\nexport type WindowWithAnalytics = typeof window;\n\nconst trackPageview = () => {\n  if (!window.analytics) return;\n\n  // Segment.com tracking\n  // The title property needs to be overwritten because otherwise the page title\n  // is used automatically which is not correct because by the time the route changes\n  // the page title has not been updated yet. It is better to have no title than to have\n  // an incorrect title.\n  window.analytics.page({ title: '' });\n};\n\nconst trackUserIdentity = (user: CurrentUserForAuthentication) => {\n  if (!window.analytics) return;\n\n  const { firstName, lastName, email, company, intercomHash } = user;\n  window.analytics.identify(\n    user.id,\n    {\n      firstName,\n      lastName,\n      email,\n      company: {\n        id: company.id,\n        name: company.name,\n      },\n    },\n    {\n      integrations: {\n        Intercom: {\n          user_hash: intercomHash,\n        },\n      },\n    },\n  );\n};\n\nconst resetUserIdentity = () => {\n  if (!window.analytics) return;\n\n  window.analytics.reset();\n};\n\nconst load = (segmentKey?: string) => {\n  if (!window.analytics) return;\n\n  window.analytics.load(segmentKey);\n};\n\nexport { load, trackPageview, trackUserIdentity, resetUserIdentity };\n","/* eslint-disable no-console */\n\ntype Noop = () => void;\n\nconst onlyRunInDevelopment = <T>(func: T): T | Noop => {\n  if (process.env.NODE_ENV === 'development') return func;\n  return () => {};\n};\n\nexport default {\n  log: onlyRunInDevelopment(console.log.bind(console)),\n  error: onlyRunInDevelopment(console.error.bind(console)),\n};\n","export const countryCodes = [\n  'AW',\n  'AF',\n  'AO',\n  'AI',\n  'AX',\n  'AL',\n  'AD',\n  'AE',\n  'AR',\n  'AM',\n  'AS',\n  'AQ',\n  'TF',\n  'AG',\n  'AU',\n  'AT',\n  'AZ',\n  'BI',\n  'BE',\n  'BJ',\n  'BF',\n  'BD',\n  'BG',\n  'BH',\n  'BS',\n  'BA',\n  'BL',\n  'SH',\n  'BY',\n  'BZ',\n  'BM',\n  'BO',\n  'BQ',\n  'BR',\n  'BB',\n  'BN',\n  'BT',\n  'BV',\n  'BW',\n  'CF',\n  'CA',\n  'CC',\n  'CH',\n  'CL',\n  'CN',\n  'CI',\n  'CM',\n  'CD',\n  'CG',\n  'CK',\n  'CO',\n  'KM',\n  'CV',\n  'CR',\n  'CU',\n  'CW',\n  'CX',\n  'KY',\n  'CY',\n  'CZ',\n  'DE',\n  'DJ',\n  'DM',\n  'DK',\n  'DO',\n  'DZ',\n  'EC',\n  'EG',\n  'ER',\n  'EH',\n  'ES',\n  'EE',\n  'ET',\n  'FI',\n  'FJ',\n  'FK',\n  'FR',\n  'FO',\n  'FM',\n  'GA',\n  'GB',\n  'GE',\n  'GG',\n  'GH',\n  'GI',\n  'GN',\n  'GP',\n  'GM',\n  'GW',\n  'GQ',\n  'GR',\n  'GD',\n  'GL',\n  'GT',\n  'GF',\n  'GU',\n  'GY',\n  'HK',\n  'HM',\n  'HN',\n  'HR',\n  'HT',\n  'HU',\n  'ID',\n  'IM',\n  'IN',\n  'IO',\n  'IE',\n  'IR',\n  'IQ',\n  'IS',\n  'IL',\n  'IT',\n  'JM',\n  'JE',\n  'JO',\n  'JP',\n  'KZ',\n  'KE',\n  'KG',\n  'KH',\n  'KI',\n  'KN',\n  'KR',\n  'XK',\n  'KW',\n  'LA',\n  'LB',\n  'LR',\n  'LY',\n  'LC',\n  'LI',\n  'LK',\n  'LS',\n  'LT',\n  'LU',\n  'LV',\n  'MO',\n  'MF',\n  'MA',\n  'MC',\n  'MD',\n  'MG',\n  'MV',\n  'MX',\n  'MH',\n  'MK',\n  'ML',\n  'MT',\n  'MM',\n  'ME',\n  'MN',\n  'MP',\n  'MZ',\n  'MR',\n  'MS',\n  'MQ',\n  'MU',\n  'MW',\n  'MY',\n  'YT',\n  'NA',\n  'NC',\n  'NE',\n  'NF',\n  'NG',\n  'NI',\n  'NU',\n  'NL',\n  'NO',\n  'NP',\n  'NR',\n  'NZ',\n  'OM',\n  'PK',\n  'PA',\n  'PN',\n  'PE',\n  'PH',\n  'PW',\n  'PG',\n  'PL',\n  'PR',\n  'KP',\n  'PT',\n  'PY',\n  'PS',\n  'PF',\n  'QA',\n  'RE',\n  'RO',\n  'RU',\n  'RW',\n  'SA',\n  'SD',\n  'SN',\n  'SG',\n  'GS',\n  'SJ',\n  'SB',\n  'SL',\n  'SV',\n  'SM',\n  'SO',\n  'PM',\n  'RS',\n  'SS',\n  'ST',\n  'SR',\n  'SK',\n  'SI',\n  'SE',\n  'SZ',\n  'SX',\n  'SC',\n  'SY',\n  'TC',\n  'TD',\n  'TG',\n  'TH',\n  'TJ',\n  'TK',\n  'TM',\n  'TL',\n  'TO',\n  'TT',\n  'TN',\n  'TR',\n  'TV',\n  'TW',\n  'TZ',\n  'UG',\n  'UA',\n  'UM',\n  'UY',\n  'US',\n  'UZ',\n  'VA',\n  'VC',\n  'VE',\n  'VG',\n  'VI',\n  'VN',\n  'VU',\n  'WF',\n  'WS',\n  'YE',\n  'ZA',\n  'ZM',\n  'ZW',\n];\n","export enum ERROR_TYPES {\n  notFound = 'NOT_FOUND',\n}\n","export enum FormTypes {\n  new = 'new',\n  edit = 'edit',\n}\n","export enum KEY_CODES {\n  escape = 'escape',\n  tab = 'tab',\n  enter = 'enter',\n  arrowUp = 'arrowUp',\n  arrowDown = 'arrowDown',\n  space = 'space',\n}\n\nexport const KEY_CODE_VALUES = {\n  [KEY_CODES.escape]: 27,\n  [KEY_CODES.tab]: 9,\n  [KEY_CODES.enter]: 13,\n  [KEY_CODES.arrowUp]: 38,\n  [KEY_CODES.arrowDown]: 40,\n  [KEY_CODES.space]: 32,\n};\n","export enum MODAL_VARIANTS {\n  center = 'center',\n  aside = 'aside',\n  fullSize = 'fullSize',\n}\n","export const rootElementId = 'root';\n","export enum SortDirection {\n  asc = 'ASC',\n  desc = 'DESC',\n}\n","/* tslint:disable */\n/* eslint-disable */\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\nexport enum BIDS_SORT_FIELD {\n  projectName = \"projectName\",\n  submittedAt = \"submittedAt\",\n}\n\nexport enum BID_INVITE_STATUS {\n  draft = \"draft\",\n  failed = \"failed\",\n  opened = \"opened\",\n  sent = \"sent\",\n  viewed = \"viewed\",\n}\n\nexport enum BID_PACKAGE_STATUS {\n  bidAwarded = \"bidAwarded\",\n  draft = \"draft\",\n  published = \"published\",\n}\n\nexport enum BID_REQUESTS_SORT_FIELD {\n  bidRequestStatus = \"bidRequestStatus\",\n  subcontractorName = \"subcontractorName\",\n}\n\nexport enum BID_REQUEST_STATUS {\n  bidAwarded = \"bidAwarded\",\n  bidRejected = \"bidRejected\",\n  bidSubmitted = \"bidSubmitted\",\n  inviteAccepted = \"inviteAccepted\",\n  inviteDeclined = \"inviteDeclined\",\n  invited = \"invited\",\n  opened = \"opened\",\n  pendingInvite = \"pendingInvite\",\n  undecided = \"undecided\",\n  viewed = \"viewed\",\n  withdrawn = \"withdrawn\",\n}\n\nexport enum COMPANY_SIZE {\n  size_1001_5000 = \"size_1001_5000\",\n  size_11_50 = \"size_11_50\",\n  size_1_10 = \"size_1_10\",\n  size_201_500 = \"size_201_500\",\n  size_5000plus = \"size_5000plus\",\n  size_501_1000 = \"size_501_1000\",\n  size_51_200 = \"size_51_200\",\n}\n\nexport enum COMPANY_STATUS {\n  active = \"active\",\n  pendingApproval = \"pendingApproval\",\n}\n\nexport enum COMPANY_TYPE {\n  agent = \"agent\",\n  principal = \"principal\",\n}\n\nexport enum CONTACT_TITLE {\n  mr = \"mr\",\n  ms = \"ms\",\n}\n\nexport enum DOCUMENT_ENTITY {\n  Bid = \"Bid\",\n  BidPackage = \"BidPackage\",\n  Project = \"Project\",\n}\n\nexport enum PROJECT_STATUS {\n  closed = \"closed\",\n  completed = \"completed\",\n  draft = \"draft\",\n  published = \"published\",\n}\n\nexport enum SortDirection {\n  ASC = \"ASC\",\n  DESC = \"DESC\",\n}\n\nexport enum USER_STATUS {\n  active = \"active\",\n  inactive = \"inactive\",\n  inviteCanceled = \"inviteCanceled\",\n  inviteFailed = \"inviteFailed\",\n  invited = \"invited\",\n}\n\nexport enum USER_TYPE {\n  employee = \"employee\",\n  external = \"external\",\n}\n\nexport interface AgentSignupInput {\n  companyName: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  bidInviteId: string;\n}\n\nexport interface AttachableInput {\n  attachableId: string;\n  attachableType: DOCUMENT_ENTITY;\n}\n\nexport interface BidInput {\n  message?: string | null;\n  totalAmount?: number | null;\n}\n\nexport interface BidPackageInput {\n  number?: string | null;\n  name: string;\n  bidsDueAt: any;\n  startsOn?: any | null;\n  endsOn?: any | null;\n  projectId: string;\n  budget?: number | null;\n  description?: string | null;\n  notes?: string | null;\n}\n\nexport interface CompanyInput {\n  name: string;\n  remindersEnabled?: boolean | null;\n}\n\nexport interface ContactInput {\n  id?: string | null;\n  isPerson: boolean;\n  email?: string | null;\n  title?: CONTACT_TITLE | null;\n  firstName?: string | null;\n  lastName?: string | null;\n  jobTitle?: string | null;\n  phone?: string | null;\n  mobilePhone?: string | null;\n  fax?: string | null;\n}\n\nexport interface CreateDocumentInput {\n  filename: string;\n  size: number;\n}\n\nexport interface InviteeInput {\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface OfficeInput {\n  name?: string | null;\n  logoKey?: string | null;\n  street?: string | null;\n  postalCode?: string | null;\n  city?: string | null;\n  countryCode?: string | null;\n  email?: string | null;\n  phone?: string | null;\n  fax?: string | null;\n  website?: string | null;\n}\n\nexport interface ProjectInput {\n  number: string;\n  name: string;\n  customer: string;\n  location: string;\n  lat?: number | null;\n  long?: number | null;\n  status?: PROJECT_STATUS | null;\n  budget?: number | null;\n  description?: string | null;\n  startsOn?: any | null;\n  endsOn?: any | null;\n  notes?: string | null;\n  isEstimating: boolean;\n  primaryUserId: string;\n  projectUsers: ProjectUserInput[];\n  officeId: string;\n  imageKey?: string | null;\n  forceSubcontractorSignup: boolean;\n}\n\nexport interface ProjectUserInput {\n  userId: string;\n  userRole: string;\n}\n\nexport interface SignupInput {\n  companyName: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nexport interface SubcontractorInput {\n  name: string;\n  companySize?: COMPANY_SIZE | null;\n  website?: string | null;\n  street?: string | null;\n  postalCode?: string | null;\n  city?: string | null;\n  countryCode?: string | null;\n  notes?: string | null;\n  isBanned: boolean;\n  lat?: number | null;\n  long?: number | null;\n  workCategoryNames?: string[] | null;\n  contacts: ContactInput[];\n}\n\nexport interface UpdateDocumentInput {\n  uploaded: boolean;\n}\n\nexport interface UserInput {\n  email: string;\n  firstName: string;\n  lastName: string;\n  jobTitle?: string | null;\n  phone?: string | null;\n  fax?: string | null;\n}\n\nexport interface UserToInviteInput {\n  email: string;\n  type: USER_TYPE;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import { COMPANY_SIZE } from '__graphql__/globalTypes';\n\nexport const orderedCompanySizes = [\n  COMPANY_SIZE.size_1_10,\n  COMPANY_SIZE.size_11_50,\n  COMPANY_SIZE.size_51_200,\n  COMPANY_SIZE.size_201_500,\n  COMPANY_SIZE.size_501_1000,\n  COMPANY_SIZE.size_1001_5000,\n  COMPANY_SIZE.size_5000plus,\n];\n","const getRoutePathParams = (paramsEnum: { [key: string]: string }, name?: string): string => {\n  const params = Object.keys(paramsEnum).join('|');\n\n  return `${name || ''}(${params})`;\n};\n\nexport enum PROJECTS_ROUTE_TYPE {\n  open = 'open',\n  closed = 'closed',\n}\n\nexport enum BID_INVITE_ACTION_ROUTE_TYPE {\n  'accept' = 'accept',\n  'decline' = 'decline',\n  'decide-later' = 'decide-later',\n}\n\nconst routes = {\n  root: () => '/',\n\n  projectsRoot: () => '/projects',\n\n  projects: (type?: PROJECTS_ROUTE_TYPE) =>\n    `/projects/${type || getRoutePathParams(PROJECTS_ROUTE_TYPE)}`,\n\n  showProject: (projectId = ':projectId') => `/projects/${projectId}`,\n\n  createProject: () => '/projects/new',\n\n  printProjectDocuments: (projectId = ':projectId') => `/print/projects/${projectId}/documents`,\n\n  editProject: (projectId: string) => `/projects/${projectId}/overview?edit=true`,\n\n  printBidPackageDocuments: (bidPackageId = ':bidPackageId') =>\n    `/print/bid-packages/${bidPackageId}/documents`,\n\n  bidPackages: (projectId = ':projectId') => `/projects/${projectId}/bid-packages`,\n\n  showBidPackage: (projectId = ':projectId', bidPackageId = ':bidPackageId') =>\n    `/projects/${projectId}/bid-packages/${bidPackageId}`,\n\n  showBidPackageLegacy: (projectId = ':projectId', bidPackageId = ':bidPackageId') =>\n    `/projects/${projectId}/bidPackages/${bidPackageId}`,\n\n  createBidPackage: (projectId = ':projectId') => `/projects/${projectId}/bid-packages/new`,\n\n  editBidPackage: (projectId: string, bidPackageId: string) =>\n    `/projects/${projectId}/bid-packages/${bidPackageId}/overview?edit=true`,\n\n  bidRequests: () => '/requests',\n\n  bidInvite: (bidInviteId = ':bidInviteId') => `/bid-invitations/${bidInviteId}`,\n\n  bidRequest: (bidRequestId = ':bidRequestId') => `/requests/${bidRequestId}`,\n\n  bidInviteAction: (bidInviteId = ':bidInviteId', action?: BID_INVITE_ACTION_ROUTE_TYPE) =>\n    `/bid-invitations/${bidInviteId}/${action ||\n      getRoutePathParams(BID_INVITE_ACTION_ROUTE_TYPE, ':action')}`,\n\n  bidInviteActionLegacy: (bidInviteId = ':bidInviteId', action?: BID_INVITE_ACTION_ROUTE_TYPE) =>\n    `/requests/${bidInviteId}/${action ||\n      getRoutePathParams(BID_INVITE_ACTION_ROUTE_TYPE, ':action')}`,\n\n  subcontractors: () => '/subcontractors',\n\n  bids: () => '/bids',\n\n  profile: () => '/me',\n\n  company: () => '/company',\n\n  admin: () => '/admin',\n\n  login: () => '/login',\n\n  signup: () => '/signup',\n\n  resetPassword: () => '/reset-password',\n\n  createPassword: (token = ':token') => `/create-password/${token}`,\n\n  invitation: (token = ':token') => `/invitations/${token}`,\n\n  printBidders: (bidPackageId = ':bidPackageId') => `/print/bidders/${bidPackageId}`,\n};\n\nexport default routes;\n","import { useCallback, useRef } from 'react';\nimport moment from 'moment';\nimport jwtDecode from 'jwt-decode';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\n\nconst useAuthToken = () => {\n  const { t } = useTranslation('apiErrors');\n  const hasDisplayedLocalStorageError = useRef(false);\n\n  // Safari will throw an error when trying to access local storage if the\n  // setting \"Block all cookies\" is enabled.\n  const getStoredToken = useCallback((): string | null => {\n    try {\n      return localStorage.getItem('token');\n    } catch (error) {\n      if (!hasDisplayedLocalStorageError.current) {\n        hasDisplayedLocalStorageError.current = true;\n        toast.error(t('localStorageNotPermitted'));\n      }\n      return null;\n    }\n  }, [t]);\n\n  const removeStoredToken = useCallback((): void => {\n    try {\n      localStorage.removeItem('token');\n    } catch (error) {\n      if (!hasDisplayedLocalStorageError.current) {\n        hasDisplayedLocalStorageError.current = true;\n        toast.error(t('localStorageNotPermitted'));\n      }\n    }\n  }, [t]);\n\n  const tokenContent = useCallback((): { exp: number } | null => {\n    const token = getStoredToken();\n\n    return token === null ? token : jwtDecode(token);\n  }, [getStoredToken]);\n\n  const getTimeToExpiration = useCallback((): number => {\n    const token = tokenContent();\n\n    return token ? token.exp - moment().unix() : 0;\n  }, [tokenContent]);\n\n  const isTokenValid = useCallback((): boolean => !!getStoredToken() && getTimeToExpiration() > 0, [\n    getStoredToken,\n    getTimeToExpiration,\n  ]);\n\n  return { isTokenValid, getTimeToExpiration, removeStoredToken };\n};\n\nexport default useAuthToken;\n","import { useState, useEffect } from 'react';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport history from 'browserHistory';\nimport { trackPageview, trackUserIdentity, resetUserIdentity } from 'shared/utils/analytics';\nimport Console from 'shared/utils/console';\nimport { AUTH_STATUS } from 'shared/constants';\nimport useAuthToken from 'shared/hooks/useAuthToken';\nimport routes from 'shared/constants/routes';\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\n\nimport { CurrentUserForAuthentication } from './__graphql__/CurrentUserForAuthentication';\nimport { CurrentUserForReAuthentication } from './__graphql__/CurrentUserForReAuthentication';\nimport { RefreshToken } from './__graphql__/RefreshToken';\n\nconst mutationRefresh = gql`\n  mutation RefreshToken {\n    refreshToken\n  }\n`;\n\nexport const fragmentCurrentUserForAuthentication = gql`\n  fragment CurrentUserForAuthentication on User {\n    id\n    email\n    firstName\n    lastName\n    jobTitle\n    phone\n    fax\n    intercomHash\n    company {\n      id\n      name\n      type\n    }\n    isAdmin\n    type\n  }\n`;\n\nconst queryCurrentUserForReAuthentication = gql`\n  query CurrentUserForReAuthentication {\n    me {\n      ...CurrentUserForAuthentication\n    }\n  }\n  ${fragmentCurrentUserForAuthentication}\n`;\n\nexport interface LoginParams {\n  token: string;\n  user: CurrentUserForAuthentication;\n  redirectTo?: string;\n}\n\nexport interface AuthState {\n  status: AUTH_STATUS;\n  companyType?: COMPANY_TYPE;\n  isAdmin?: boolean;\n  user?: CurrentUserForAuthentication;\n}\n\nconst useAuthentication = () => {\n  const [authState, setAuthState] = useState<AuthState>({ status: AUTH_STATUS.authenticating });\n  const apolloClient = useApolloClient();\n  const { isTokenValid, getTimeToExpiration, removeStoredToken } = useAuthToken();\n\n  const login = ({ token, user, redirectTo = routes.root() }: LoginParams) => {\n    if (user) {\n      trackUserIdentity(user);\n    }\n    localStorage.setItem('token', token);\n    setAuthState({\n      status: AUTH_STATUS.authenticated,\n      companyType: COMPANY_TYPE[user.company.type],\n      isAdmin: user.isAdmin,\n      user,\n    });\n\n    history.push(redirectTo);\n  };\n\n  const logout = () => {\n    resetUserIdentity();\n    removeStoredToken();\n    setAuthState({ status: AUTH_STATUS.anonymous, isAdmin: undefined });\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    apolloClient.resetStore();\n    history.push(routes.login());\n  };\n\n  useEffect(() => {\n    const refresh = () =>\n      apolloClient\n        .mutate<RefreshToken>({ mutation: mutationRefresh })\n        .then(({ data }) => {\n          if (data?.refreshToken) {\n            localStorage.setItem('token', data.refreshToken);\n          }\n        });\n\n    const refreshIfTokenIsValidAndHourPassed = () => {\n      if (isTokenValid() && getTimeToExpiration() < 23 * 60 * 60) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        refresh();\n      }\n    };\n\n    // The reason we need this function is related to user tracking for analytics.\n    // The first time that `trackPageview` is called must happen after `trackUserIdentity`\n    // is called, otherwise the first pageview has no user data associated with it.\n    const setFirstAuthState = (newAuthState: AuthState) => {\n      trackPageview();\n      setAuthState(newAuthState);\n    };\n\n    setTimeout(refreshIfTokenIsValidAndHourPassed, 1000);\n    setInterval(refreshIfTokenIsValidAndHourPassed, 1000 * 60 * 10);\n\n    if (!isTokenValid()) {\n      removeStoredToken();\n      setFirstAuthState({ status: AUTH_STATUS.anonymous });\n      return;\n    }\n\n    apolloClient\n      .query({ query: queryCurrentUserForReAuthentication })\n      .then(({ data }: { data: CurrentUserForReAuthentication }) => {\n        trackUserIdentity(data.me);\n        setFirstAuthState({\n          status: AUTH_STATUS.authenticated,\n          companyType: COMPANY_TYPE[data.me.company.type],\n          isAdmin: data.me.isAdmin,\n          user: data.me,\n        });\n      })\n      .catch(error => {\n        Console.error(error);\n        setFirstAuthState({ status: AUTH_STATUS.anonymous });\n      });\n  }, [apolloClient, getTimeToExpiration, isTokenValid, removeStoredToken]);\n\n  return { authState, login, logout };\n};\n\nexport default useAuthentication;\n","import { useState } from 'react';\n\nimport Console from 'shared/utils/console';\n\ninterface StackMethods<T> {\n  peek: () => T;\n  pop: () => void;\n  push: (value: T) => void;\n  toggle: (value: T) => void;\n  contains: (value: T) => boolean;\n  remove: (value: T) => void;\n  debug: () => void;\n}\n\nconst useStack = <T>(initialValue?: T): StackMethods<T> => {\n  const [stack, setStack] = useState(initialValue ? [initialValue] : []);\n\n  const peek = () => stack[stack.length - 1];\n  const pop = () => setStack(stack.slice(0, -1));\n  const push = (value: T) => setStack([...stack, value]);\n  const toggle = (value: T) => (peek() === value ? pop() : push(value));\n  const contains = (value: T) => stack.includes(value);\n  const remove = (value: T) => setStack(stack.filter(item => item !== value));\n  const debug = () => {\n    Console.log(stack);\n  };\n\n  return { peek, pop, push, toggle, contains, remove, debug };\n};\n\nexport default useStack;\n","import { Ref } from 'react';\n\nimport useStack from './useStack';\n\nexport interface ModalsManagerMethods {\n  getIsActive: (modalRef: Ref<HTMLElement>) => boolean;\n  setAsActive: (modalRef: Ref<HTMLElement>) => void;\n  setAsInactive: (modalRef: Ref<HTMLElement>) => void;\n  getIsOpen: (modalRef: Ref<HTMLElement>) => boolean;\n}\n\nconst useModalsManager = (): ModalsManagerMethods => {\n  const { peek, contains, push, pop } = useStack<Ref<HTMLElement>>();\n\n  const getIsActive = (modalRef: Ref<HTMLElement>) => {\n    return peek() === modalRef;\n  };\n  const setAsInactive = (modalRef: Ref<HTMLElement>) => {\n    if (getIsActive(modalRef)) {\n      pop();\n    }\n  };\n\n  return { getIsActive, setAsActive: push, setAsInactive, getIsOpen: contains };\n};\n\nexport default useModalsManager;\n","import { useState, useEffect, useCallback } from 'react';\nimport throttle from 'just-throttle';\n\nimport { mediaQueries } from 'shared/utils/styles';\n\nexport interface QueryMatches {\n  isMobile: boolean;\n  isDesktop: boolean;\n}\n\nconst getMatches = () => ({\n  mobile: window.matchMedia(mediaQueries.mobile).matches,\n  desktop: window.matchMedia(mediaQueries.desktop).matches,\n});\n\nconst useQueryMatches = (): QueryMatches => {\n  const [matches, setMatches] = useState(getMatches());\n\n  const handleResize = useCallback(\n    throttle(() => {\n      setMatches(getMatches());\n    }, 500),\n    [],\n  );\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [handleResize]);\n\n  return { isMobile: matches.mobile, isDesktop: matches.desktop };\n};\n\nexport default useQueryMatches;\n","import { createContext } from 'react';\n\nimport { LoginParams, AuthState } from 'shared/hooks/useAuthentication';\nimport { AUTH_STATUS } from 'shared/constants';\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\n\nexport interface AuthContextBase {\n  login: (loginParams: LoginParams) => void;\n  logout: () => void;\n  authState: {\n    status: AUTH_STATUS;\n  };\n}\n\ninterface AuthContextAnonymous extends AuthContextBase {\n  authState: { status: Exclude<AUTH_STATUS, AUTH_STATUS.authenticated> };\n}\n\ninterface AuthContextAuthenticated extends AuthContextBase {\n  authState: {\n    status: AUTH_STATUS.authenticated;\n    companyType: COMPANY_TYPE;\n    isAdmin: boolean;\n    user: NonNullable<AuthState['user']>;\n  };\n}\n\nexport const isAuthenticated = (\n  authContext: AuthContextBase,\n): authContext is AuthContextAuthenticated =>\n  authContext.authState.status === AUTH_STATUS.authenticated;\n\nexport const isAnonymous = (authContext: AuthContextBase): authContext is AuthContextAnonymous =>\n  authContext.authState.status === AUTH_STATUS.anonymous;\n\nconst AuthContext = createContext<AuthContextBase>({\n  authState: { status: AUTH_STATUS.anonymous },\n  login: () => undefined,\n  logout: () => undefined,\n});\n\nexport default AuthContext;\n","import { createContext } from 'react';\n\nimport { ModalsManagerMethods } from 'shared/hooks/useModalsManager';\n\nconst ModalsContext = createContext<ModalsManagerMethods>({\n  getIsActive: () => false,\n  setAsActive: () => {},\n  setAsInactive: () => {},\n  getIsOpen: () => false,\n});\n\nexport default ModalsContext;\n","import { createContext } from 'react';\n\nimport { QueryMatches } from 'shared/hooks/useQueryMatches';\n\nconst QueryMatchesContext = createContext<QueryMatches>({ isMobile: false, isDesktop: false });\n\nexport default QueryMatchesContext;\n","import styled, { css } from 'styled-components/macro';\n\ninterface StyledIconProps {\n  code: string;\n  size: number;\n  left: number;\n  top: number;\n  // TODO: Remove this\n  onClick?: (...args: unknown[]) => unknown;\n}\n\nexport const StyledIcon = styled.i<StyledIconProps>`\n  display: inline-block;\n  font-size: ${props => `${props.size}px`};\n  line-height: 1;\n\n  ${props =>\n    props.left || props.top\n      ? css`\n          transform: translate(${props.left}px, ${props.top}px);\n        `\n      : ''}\n\n  &::before {\n    content: \"${props => props.code}\";\n\n    /* There's no generic font that could be used here */\n    /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */\n    font-family: \"cosuno\" !important;\n    speak: none;\n    font-style: normal;\n    font-weight: normal;\n    font-variant: normal;\n    text-transform: none;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n","import React from 'react';\n\nimport { StyledIcon } from './Styles';\n\nenum ICON_CODE {\n  'check-circle' = '\\\\e86c',\n  gavel = '\\\\e9a8',\n  'arrow-left' = '\\\\e900',\n  download = '\\\\e90a',\n  file = '\\\\e90b',\n  plus = '\\\\e90c',\n  refresh = '\\\\e90d',\n  search = '\\\\e90e',\n  upload = '\\\\e90f',\n  bell = '\\\\e901',\n  settings = '\\\\e902',\n  calendar = '\\\\e903',\n  check = '\\\\e904',\n  'chevron-down' = '\\\\e905',\n  'chevron-left' = '\\\\e906',\n  'chevron-right' = '\\\\e907',\n  'chevron-up' = '\\\\e908',\n  clock = '\\\\e909',\n  close = '\\\\e910',\n  'thumbs-down' = '\\\\e91a',\n  'thumbs-up' = '\\\\e91b',\n  'checkmark' = '\\\\e91c',\n  watch = '\\\\e91d',\n  'file-plus' = '\\\\e91e',\n  'upload-thin' = '\\\\e91f',\n  alert = '\\\\e911',\n  'arrow-right' = '\\\\e912',\n  lock = '\\\\e913',\n  email = '\\\\e914',\n  archive = '\\\\e915',\n  briefcase = '\\\\e916',\n  dashboard = '\\\\e917',\n  edit = '\\\\e918',\n  delete = '\\\\e919',\n  'folder-plus' = '\\\\e921',\n  'folder-minus' = '\\\\e920',\n  eye = '\\\\e923',\n  'file-text' = '\\\\e924',\n  'bell-strikethrough' = '\\\\e925',\n  phone = '\\\\e926',\n  printer = '\\\\e927',\n  help = '\\\\e928',\n  'check-fat' = '\\\\f00c',\n  'close-fat' = '\\\\f00d',\n  sort = '\\\\f0dc',\n  'sort-down' = '\\\\f0d7',\n  'sort-up' = '\\\\f0d8',\n  euro = '\\\\f153',\n  'email-open' = '\\\\f2b7',\n}\n\nexport interface IconProps {\n  type: keyof typeof ICON_CODE;\n  size?: number;\n  left?: number;\n  top?: number;\n  // TODO: Remove this\n  onClick?: (...args: unknown[]) => unknown;\n}\n\nconst Icon = ({ type, size = 16, left = 0, top = 0, ...props }: IconProps) => (\n  <StyledIcon\n    data-cy-icon={type}\n    code={ICON_CODE[type]}\n    size={size}\n    left={left}\n    top={top}\n    {...props}\n  />\n);\n\nexport default Icon;\n","import React, { ButtonHTMLAttributes, forwardRef } from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport { mixin } from 'shared/utils/styles';\n\nexport type ClickableProps = ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst ClickableBase = forwardRef<HTMLButtonElement, ClickableProps>((props, ref) => (\n  <button type=\"button\" ref={ref} {...props} />\n));\n\nconst Clickable = styled(ClickableBase)`\n  appearance: none;\n  background: none;\n  border: 0;\n  padding: 0;\n  ${mixin.clickable}\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      cursor: default;\n    `}\n`;\n\nexport default Clickable;\n","import styled from 'styled-components/macro';\n\nimport { font, mixin } from 'shared/utils/styles';\nimport Clickable from 'shared/components/Clickable';\n\nexport const Wrapper = styled(Clickable)`\n  display: inline-block;\n  height: 24px;\n  line-height: 22px;\n  padding-right: 5px;\n  ${font.size(12)}\n  ${mixin.link()}\n`;\n\nexport const IconWrapper = styled.span`\n  text-decoration: none;\n\n  i {\n    margin-right: 3px;\n    vertical-align: text-top;\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Icon from 'shared/components/Icon';\nimport { ClickableProps } from 'shared/components/Clickable';\n\nimport { Wrapper, IconWrapper } from './Styles';\n\nconst AddMoreLink: React.FC<ClickableProps> = ({ children, ...props }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Wrapper {...props}>\n      <IconWrapper>\n        <Icon type=\"plus\" />\n      </IconWrapper>\n      {children || t('addMore')}\n    </Wrapper>\n  );\n};\n\nexport default AddMoreLink;\n","const colors = [\n  '#DA7657',\n  '#6ADA57',\n  '#5784DA',\n  '#AA57DA',\n  '#DA5757',\n  '#DA5792',\n  '#57DACA',\n  '#57A5DA',\n];\n\nexport type Color = typeof colors[number];\n\nexport const getColorFromName = (name: string | null): Color =>\n  colors[(name || '').toLocaleLowerCase().charCodeAt(0) % colors.length];\n","import styled from 'styled-components/macro';\n\nimport { font, mixin } from 'shared/utils/styles';\n\nimport { Color } from './colors';\n\ninterface ImageProps {\n  avatarUrl: string;\n  size: number;\n}\n\nexport const Image = styled.div<ImageProps>`\n  flex-shrink: 0;\n  display: inline-block;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  border-radius: 100%;\n  background-image: url('${props => props.avatarUrl}');\n  ${mixin.backgroundImage}\n`;\n\ninterface LetterProps {\n  color: Color;\n  size: number;\n}\n\nexport const Letter = styled.div<LetterProps>`\n  flex-shrink: 0;\n  display: inline-block;\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  border-radius: 100%;\n  text-transform: uppercase;\n  color: #fff;\n  background: ${props => props.color};\n  ${font.medium}\n  ${props => font.size(Math.round(props.size / 1.7))}\n  & > span {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n  }\n`;\n","import React from 'react';\n\nimport { getColorFromName } from './colors';\nimport { Image, Letter } from './Styles';\n\ninterface AvatarProps {\n  className?: string;\n  avatarUrl?: string;\n  name?: string | null;\n  size?: number;\n}\n\nconst Avatar: React.FC<AvatarProps> = ({ className, avatarUrl, name = '', size = 24 }) => {\n  if (avatarUrl) {\n    return <Image className={className} size={size} avatarUrl={avatarUrl} />;\n  }\n  return (\n    <Letter className={className} size={size} color={getColorFromName(name)}>\n      {name && <span>{name.charAt(0)}</span>}\n    </Letter>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\n\nimport { COLOR } from 'shared/utils/styles';\n\ninterface Props {\n  className?: string;\n  size?: number;\n  color?: COLOR;\n}\n\nconst Spinner: React.FC<Props> = ({ className, size = 32, color = COLOR.textMedium }) => (\n  <span className={className}>\n    <svg\n      width={size}\n      height={size}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n      style={{ background: '0 0' }}\n    >\n      <g>\n        <g transform=\"translate(80 50)\">\n          <circle r={8} fill={color}>\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.875s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.875s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(45 -50.355 121.569)\">\n          <circle r={8} fill={color} fillOpacity=\".875\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.75s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.75s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(90 -15 65)\">\n          <circle r={8} fill={color} fillOpacity=\".75\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.625s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.625s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(135 -.355 41.569)\">\n          <circle r={8} fill={color} fillOpacity=\".625\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.5s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.5s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(180 10 25)\">\n          <circle r={8} fill={color} fillOpacity=\".5\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.375s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.375s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(-135 20.355 8.431)\">\n          <circle r={8} fill={color} fillOpacity=\".375\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.25s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.25s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(-90 35 -15)\">\n          <circle r={8} fill={color} fillOpacity=\".25\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"-0.125s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"-0.125s\"\n            />\n          </circle>\n        </g>\n      </g>\n      <g>\n        <g transform=\"rotate(-45 70.355 -71.569)\">\n          <circle r={8} fill={color} fillOpacity=\".125\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"scale\"\n              begin=\"0s\"\n              values=\"1 1;1 1\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n            />\n            <animate\n              attributeName=\"fill-opacity\"\n              keyTimes=\"0;1\"\n              dur=\"1s\"\n              repeatCount=\"indefinite\"\n              values=\"1;0\"\n              begin=\"0s\"\n            />\n          </circle>\n        </g>\n      </g>\n    </svg>\n  </span>\n);\n\nexport default Spinner;\n","import styled from 'styled-components/macro';\n\nexport default styled.div`\n  width: 100%;\n  padding: 100px;\n  text-align: center;\n`;\n","import React from 'react';\n\nimport Spinner from 'shared/components/Spinner';\n\nimport StyledPageLoader from './Styles';\n\nconst PageLoader: React.FC<{}> = () => (\n  <StyledPageLoader>\n    <Spinner size={70} />\n  </StyledPageLoader>\n);\n\nexport default PageLoader;\n","import styled, { css } from 'styled-components/macro';\n\nimport { mixin, COLOR, font } from 'shared/utils/styles';\n\nexport const StyledPageError = styled.div`\n  width: 100%;\n  padding: 100px;\n`;\n\nexport const MessageBox = styled.div`\n  width: 100%;\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 35px 50px 40px;\n  border-radius: 4px;\n  color: ${COLOR.danger};\n  background: ${mixin.rgba(COLOR.danger, 0.1)};\n  ${font.size(16)}\n`;\n\ninterface MessageProps {\n  isOnlyMessage: boolean;\n}\n\nexport const Message = styled.div<MessageProps>`\n  display: flex;\n  flex-direction: ${props => (props.isOnlyMessage ? 'column' : 'row')};\n  align-items: center;\n  ${props =>\n    !props.isOnlyMessage &&\n    css`\n      &:not(:last-child) {\n        margin-bottom: 15px;\n      }\n    `}\n\n  i {\n    font-size: 24px;\n    ${props =>\n      props.isOnlyMessage &&\n      css`\n        margin-bottom: 25px;\n      `}\n    ${props =>\n      !props.isOnlyMessage &&\n      css`\n        margin-right: 15px;\n      `}\n  }\n`;\n","import React from 'react';\n\nimport Icon from 'shared/components/Icon';\n\nimport { Message, MessageBox, StyledPageError } from './Styles';\n\ninterface PageErrorProps {\n  message: string | string[];\n}\n\nconst PageError: React.FC<PageErrorProps> = ({ message }) => {\n  const hasMultipleMessages = Array.isArray(message) && message.length > 1;\n  const messageArr = Array.isArray(message) ? message : [message];\n\n  return (\n    <StyledPageError data-cy-page-error>\n      <MessageBox>\n        {messageArr.map((text, i) => (\n          <Message key={i} isOnlyMessage={!hasMultipleMessages} data-testid=\"message\">\n            <Icon type=\"alert\" />\n            {text}\n          </Message>\n        ))}\n      </MessageBox>\n    </StyledPageError>\n  );\n};\n\nexport default PageError;\n","import React from 'react';\nimport { ApolloError } from 'apollo-client';\n\nimport PageError from './PageError';\n\ninterface Props {\n  error: ApolloError;\n}\n\nconst QueryErrors: React.FC<Props> = ({ error: { graphQLErrors, networkError } }) => (\n  <PageError\n    message={[\n      ...graphQLErrors.map(({ message }) => message),\n      ...(networkError ? [networkError.message] : []),\n    ]}\n  />\n);\n\nexport default QueryErrors;\n","export const buildAttachableName = (parts: (string | false | undefined)[]): string =>\n  parts.filter(Boolean).join(' - ');\n","import i18n from 'i18next';\nimport moment from 'moment';\n\nimport { AnyDate } from 'shared/utils/dateTime';\n\nimport { Values, Validator } from './types';\n\nconst isNilOrEmptyString = (value: unknown): boolean =>\n  value === undefined || value === null || value === '';\n\nconst match = (testFn: (value: unknown, values: object) => boolean, message = ''): Validator => (\n  value,\n  fieldValues,\n) => !testFn(value, fieldValues) && message;\n\nconst notAfter = <V = Values>(\n  getTargetDate: (values: V) => AnyDate | null,\n  message: string,\n): Validator<AnyDate | null, V> => {\n  return (value, values) => {\n    const targetDate = getTargetDate(values);\n\n    if (!value || !targetDate || moment(value).isSameOrBefore(targetDate, 'day')) {\n      return false;\n    }\n\n    return message;\n  };\n};\n\nconst notBefore = <V = Values>(\n  getTargetDate: (values: V) => AnyDate | null,\n  message: string,\n): Validator<AnyDate | null, V> => {\n  return (value, values) => {\n    const targetDate = getTargetDate(values);\n\n    if (!value || !targetDate || moment(value).isSameOrAfter(targetDate, 'day')) {\n      return false;\n    }\n\n    return message;\n  };\n};\n\nconst required = (): Validator => value => {\n  if (Array.isArray(value) && value.length === 0) {\n    return i18n.t<string>('validation:required');\n  }\n\n  if (isNilOrEmptyString(value)) {\n    return i18n.t<string>('validation:required');\n  }\n\n  return false;\n};\n\nconst minLength = (min: number): Validator<string | unknown[]> => value =>\n  !!value && value.length < min && i18n.t<string>('validation:minLength', { min });\n\nconst maxLength = (max: number): Validator<string | unknown[]> => value =>\n  !!value && value.length > max && i18n.t<string>('validation:maxLength', { max });\n\nconst min = (minValue: number): Validator<string> => value =>\n  !isNilOrEmptyString(value) &&\n  parseFloat(value) < minValue &&\n  i18n.t<string>('validation:min', { minValue });\n\nconst notEmptyArray = (): Validator<unknown[]> => value =>\n  (!Array.isArray(value) || value.length === 0) && i18n.t<string>('validation:notEmptyArray');\n\nconst email = (): Validator<string> => value =>\n  !!value && !/.+@.+\\..+/.test(value) && i18n.t<string>('validation:email');\n\nconst url = (): Validator<string> => value =>\n  !!value &&\n  // eslint-disable-next-line no-useless-escape\n  !/^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/.test(value) &&\n  i18n.t<string>('validation:url');\n\nexport const is = {\n  match,\n  required,\n  minLength,\n  maxLength,\n  min,\n  notEmptyArray,\n  email,\n  url,\n  notAfter,\n  notBefore,\n};\n","import Console from 'shared/utils/console';\n\nimport { Validator, Validations, Values, Errors } from './types';\n\nconst isValidator = (obj: object): obj is Validator => obj instanceof Function;\nconst isMultipleValidators = (obj: object): obj is Validator[] => Array.isArray(obj);\nconst isNestedValidators = (obj: object): obj is Validations =>\n  !isValidator(obj) && !isMultipleValidators(obj);\n\nconst assignErrorBuilder = (errors: Errors) => (\n  validator: Validator,\n  fieldName: string,\n  fieldValues: Values,\n  allFieldValues: Values,\n): void => {\n  const value = fieldValues[fieldName];\n  const errorMessage = validator(value, fieldValues, allFieldValues);\n  if (errorMessage && !errors[fieldName]) {\n    errors[fieldName] = errorMessage;\n  }\n};\n\n// We assume here that nested validation is used only for field arrays\nconst assignNestedErrorBuilder = (errors: Errors) => (\n  nestedValidators: Validations,\n  fieldName: string,\n  allValues: Values,\n): void => {\n  const values = allValues[fieldName] as Values[];\n  const errorMessages = values.map(nestedValues =>\n    generateErrors(nestedValues, nestedValidators, allValues),\n  );\n  const hasErrorMessages = errorMessages.find(item => Object.keys(item).length > 0);\n\n  if (hasErrorMessages && !errors[fieldName]) {\n    errors[fieldName] = errorMessages;\n  } else if (!hasErrorMessages && !errors[fieldName]) {\n    delete errors[fieldName];\n  }\n};\n\nexport const generateErrors = (\n  fieldValues: Values,\n  fieldValidators: Validations,\n  allFieldValues?: Values,\n): Errors => {\n  const errors: Errors = {};\n  const assignError = assignErrorBuilder(errors);\n  const asignNestedError = assignNestedErrorBuilder(errors);\n\n  try {\n    Object.entries(fieldValidators).forEach(([fieldName, validators]) => {\n      if (!validators) {\n        return;\n      }\n\n      if (isNestedValidators(validators)) {\n        asignNestedError(validators, fieldName, fieldValues);\n      } else {\n        [validators]\n          .flat()\n          .forEach(validator =>\n            assignError(validator, fieldName, fieldValues, allFieldValues || fieldValues),\n          );\n      }\n    });\n  } catch (error) {\n    // Errors in validators get caught somewhere (in Formik?) and muted.\n    Console.error(error);\n    throw error;\n  }\n\n  return errors;\n};\n","import styled from 'styled-components/macro';\n\nimport { font, COLOR } from 'shared/utils/styles';\n\nexport const RequiredFieldsNoteWrapper = styled.div`\n  margin: 25px 0;\n  color: ${COLOR.textMedium};\n  ${font.size(13)};\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { RequiredFieldsNoteWrapper } from './Styles';\n\nconst RequiredFieldsNote: React.FC = () => {\n  const { t } = useTranslation();\n  return <RequiredFieldsNoteWrapper>{t('requiredFieldsNote')}</RequiredFieldsNoteWrapper>;\n};\n\nexport default RequiredFieldsNote;\n","import React from 'react';\nimport { Formik, Form as FormikForm, FormikConfig, FormikFormProps } from 'formik';\n\nimport { is, generateErrors } from 'shared/utils/validation';\nimport { Validator, Validations } from 'shared/utils/validation/types';\n\nimport RequiredFieldsNote from './RequiredFieldsNote';\n\ntype MapValuesToValidations<Values, AllValues = Values> = {\n  [K in keyof Values]?: Values[K] extends Array<{}>\n    ?\n        | Validator<Values[K], Values, AllValues>\n        | Validator<Values[K], Values, AllValues>[]\n        | MapValuesToValidations<Values[K], AllValues>\n    : Validator<Values[K], Values, AllValues> | Validator<Values[K], Values, AllValues>[];\n};\n\ntype FormProps<Values> = Omit<FormikConfig<Values>, 'validate' | 'initialValues'> & {\n  validations?: MapValuesToValidations<Values>;\n  initialValues: Required<Values>;\n};\n\nconst Form = <Values extends {}>({\n  validations,\n  validateOnBlur = false,\n  ...props\n}: FormProps<Values>): ReturnType<React.FC<FormProps<Values>>> => {\n  return (\n    <Formik\n      {...props}\n      validateOnBlur={validateOnBlur}\n      validate={values => {\n        if (validations) {\n          return generateErrors(values, validations as Validations);\n        }\n\n        return {};\n      }}\n    />\n  );\n};\n\nconst FormElement: React.FC<FormikFormProps> = props => <FormikForm noValidate {...props} />;\n\nForm.Element = FormElement;\n\nForm.is = is;\n\nForm.RequiredFieldsNote = RequiredFieldsNote;\n\nexport default Form;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\n\ninterface StyledInputProps {\n  icon?: string;\n  invalid?: boolean;\n}\n\nexport default styled.div<StyledInputProps>`\n  position: relative;\n  display: inline-block;\n  height: 40px;\n  width: 100%;\n  input {\n    height: 100%;\n    width: 100%;\n    padding: 0 15px;\n    border-radius: 4px;\n    border: 1px solid ${COLOR.borderLight};\n    box-shadow: inset 0 0 1px 0 rgba(0, 0, 0, 0.03);\n    background: #fff;\n    ${font.regular}\n    ${font.size(14)}\n    &:focus {\n      border-color: ${COLOR.borderMedium};\n    }\n    ${props => (props.icon ? 'padding-left: 40px;' : '')}\n    ${props => (props.invalid ? `&, &:focus { border-color: ${COLOR.danger}; }` : '')}\n  }\n  i:first-of-type {\n    position: absolute;\n    top: 12px;\n    left: 14px;\n    font-size: 16px;\n    pointer-events: none;\n    color: ${COLOR.textMedium};\n  }\n`;\n","import React, { ReactNode, Ref, forwardRef } from 'react';\n\nimport Icon, { IconProps } from 'shared/components/Icon';\n\nimport StyledInput from './Styles';\n\nexport type InputRenderProps = Omit<React.ComponentPropsWithRef<'input'>, 'onChange' | 'ref'> & {\n  onChange: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  ref?: Ref<HTMLInputElement>;\n};\n\nexport interface InputProps extends Omit<React.ComponentPropsWithoutRef<'input'>, 'onChange'> {\n  icon?: IconProps['type'];\n  invalid?: boolean;\n  filter?: RegExp;\n  onChange?: (value: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n  renderInput?: (props: InputRenderProps) => ReactNode;\n}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  (\n    {\n      icon,\n      className,\n      invalid = false,\n      filter,\n      onChange = () => {},\n      name,\n      renderInput = renderProps => (\n        <input\n          {...renderProps}\n          onChange={event => renderProps.onChange(event.target.value, event)}\n        />\n      ),\n      ...inputProps\n    },\n    ref,\n  ) => {\n    const handleChange: InputRenderProps['onChange'] = (value, event) => {\n      if (!filter || filter.test(value)) {\n        onChange(value, event);\n      }\n    };\n\n    return (\n      <StyledInput className={className} icon={icon} invalid={invalid}>\n        {icon && <Icon type={icon} />}\n        {renderInput({\n          ...inputProps,\n          name,\n          onChange: handleChange,\n          ref,\n        })}\n      </StyledInput>\n    );\n  },\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n","import { nullString } from 'shared/constants/nullString';\n\nexport const NULL_ITEM = {\n  label: nullString,\n  value: '',\n};\n","export const nullString = '–';\n","import {\n  TransitionStatus,\n  ENTERING,\n  ENTERED,\n  EXITING,\n  EXITED,\n} from 'react-transition-group/Transition';\n\nexport const isEntering = (state: TransitionStatus): boolean => state === ENTERING;\nexport const isEntered = (state: TransitionStatus): boolean => state === ENTERED;\nexport const isExiting = (state: TransitionStatus): boolean => state === EXITING;\nexport const isExited = (state: TransitionStatus): boolean => state === EXITED;\nexport const isEnter = (state: TransitionStatus): boolean => isEntering(state) || isEntered(state);\nexport const isExit = (state: TransitionStatus): boolean => isExiting(state) || isExited(state);\n","import { useEffect, RefObject } from 'react';\n\nimport Console from 'shared/utils/console';\n\ntype UseClickOutsideOptions =\n  | {\n      ref: RefObject<HTMLElement>;\n      refs?: undefined;\n      onClickOutside: () => void;\n    }\n  | { ref?: undefined; refs: RefObject<HTMLElement>[]; onClickOutside: () => void };\n\nconst useClickOutside = (options: UseClickOutsideOptions): void => {\n  useEffect(() => {\n    const refs = options.refs || [options.ref];\n    const { onClickOutside } = options;\n    const handleClick = (event: MouseEvent) => {\n      if (refs.length === 0) {\n        Console.error('`useClickOutside` has to receive a ref with a node as value');\n        return;\n      }\n\n      if (\n        !refs.some(\n          ref =>\n            event.target instanceof HTMLElement &&\n            ref.current &&\n            ref.current.contains(event.target),\n        )\n      ) {\n        onClickOutside();\n      }\n    };\n\n    document.addEventListener('click', handleClick);\n\n    return () => document.removeEventListener('click', handleClick);\n\n    // We don't want the effect to run whenever options changes identity\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.refs, options.ref, options.onClickOutside]);\n};\n\nexport default useClickOutside;\n","import React, { ReactNode, forwardRef } from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport { mediaQueries, mixin } from 'shared/utils/styles';\n\nexport const TRANSITION_DURATION = 100;\n\ninterface CardProps {\n  className?: string;\n  children: ReactNode;\n  isOpen: boolean;\n  hasClosed: boolean;\n}\n\nconst CardContent = forwardRef<HTMLDivElement, CardProps>(({ className, children }, ref) => (\n  <div className={className} ref={ref}>\n    {children}\n  </div>\n));\n\nconst Card = styled(CardContent)<CardProps>`\n  display: block;\n  background: #fff;\n  border-radius: 4px;\n  opacity: ${props => (props.isOpen ? 1 : 0)};\n  transform: scale(${props => (props.isOpen ? 1 : 0.97)});\n  transition: opacity ${TRANSITION_DURATION}ms, transform ${TRANSITION_DURATION}ms;\n\n  ${props =>\n    props.hasClosed &&\n    css`\n      height: 0;\n      overflow: hidden;\n    `}\n\n  @media ${mediaQueries.mobile} {\n    width: 300px;\n    max-height: 80%;\n  }\n\n  @media ${mediaQueries.desktop} {\n    ${mixin.boxShadowBorderMedium};\n  }\n`;\n\nexport default Card;\n","import React, { forwardRef, ReactNode, RefObject } from 'react';\nimport styled, { css } from 'styled-components/macro';\nimport { Transition } from 'react-transition-group';\n\nimport { COLOR, zIndexValues, mediaQueries } from 'shared/utils/styles';\nimport { isExited, isEnter, isEntered } from 'shared/utils/transitionStates';\n\nimport Card, { TRANSITION_DURATION } from './Card';\n\nexport interface DropdownCardProps {\n  className?: string;\n  children: ReactNode;\n  isOpen: boolean;\n  triggerRef?: RefObject<HTMLElement>;\n  matchTriggerWidth?: boolean;\n}\n\nconst DropdownCardBase = forwardRef<HTMLDivElement, DropdownCardProps>(\n  ({ className, children, isOpen, triggerRef, matchTriggerWidth, ...props }, ref) => (\n    <Transition in={isOpen} timeout={TRANSITION_DURATION}>\n      {state => (\n        <div data-cy-dropdown-card-open={isEntered(state)} className={className} {...props}>\n          <Card ref={ref} isOpen={isEnter(state)} hasClosed={isExited(state)}>\n            {children}\n          </Card>\n        </div>\n      )}\n    </Transition>\n  ),\n);\n\nconst DropdownCard = styled(DropdownCardBase)<DropdownCardProps>`\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  z-index: ${zIndexValues.dropdown};\n\n  @media ${mediaQueries.mobile} {\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    background: ${COLOR.overlay};\n    cursor: pointer; /* Without this, closing the overlay does not work on iOS */\n    opacity: ${props => (props.isOpen ? 1 : 0)};\n    transition: opacity ${TRANSITION_DURATION}ms;\n  }\n\n  @media ${mediaQueries.desktop} {\n    position: absolute;\n\n    ${props => {\n      if (!props.triggerRef) {\n        return css`\n          top: calc(100% - 2px);\n          right: 0;\n        `;\n      }\n\n      if (!props.triggerRef.current) {\n        return '';\n      }\n\n      const { top, height, right, width } = props.triggerRef.current.getBoundingClientRect();\n      const alignedToBottom = height + top;\n      const alignedToRight = document.body.clientWidth - right;\n\n      return css`\n        top: ${alignedToBottom - 2}px;\n        right: ${alignedToRight}px;\n\n        ${props.matchTriggerWidth &&\n          css`\n            width: ${width}px;\n          `}\n      `;\n    }}\n  }\n`;\n\nexport { Card, TRANSITION_DURATION };\nexport default DropdownCard;\n","import { ReactNode } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nimport { rootElementId } from 'shared/constants';\n\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\ninterface PortalProps {\n  children: ReactNode;\n}\n\nconst Portal: React.FC<PortalProps> = ({ children }) => {\n  // We know that rootElementId is always going to exist\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return ReactDOM.createPortal(children, document.getElementById(rootElementId)!);\n};\n\nPortal.propTypes = propTypes;\n\nexport default Portal;\n","import React, { forwardRef } from 'react';\nimport styled from 'styled-components/macro';\n\nimport Clickable, { ClickableProps } from 'shared/components/Clickable';\nimport { COLOR, font, mixin, mediaQueries } from 'shared/utils/styles';\nimport { As } from 'shared/constants/styledComponents';\n\nexport type DropdownActionProps = ClickableProps & {\n  isDisplayed: boolean;\n  forwardedAs?: As;\n};\n\nconst DropdownActionBase = forwardRef<HTMLButtonElement, DropdownActionProps>(\n  ({ isDisplayed, ...props }, ref) => {\n    if (isDisplayed) {\n      return <Clickable ref={ref} {...props} />;\n    }\n\n    return <Clickable ref={ref} tabIndex={-1} aria-hidden {...props} />;\n  },\n);\n\nconst DropdownAction = styled(DropdownActionBase)<DropdownActionProps>`\n  display: block;\n  width: 100%;\n  color: ${COLOR.textDark};\n  white-space: nowrap;\n  ${mixin.clickable};\n\n  &.active {\n    color: ${COLOR.accent};\n  }\n\n  @media ${mediaQueries.mobile} {\n    padding: 15px 30px;\n    text-align: center;\n    ${font.size(16)};\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 6px 20px;\n    text-align: left;\n    ${font.size(14)};\n\n    &:hover {\n      background: ${COLOR.highlightWhite};\n    }\n  }\n`;\n\nexport default DropdownAction;\n","import styled from 'styled-components/macro';\n\nconst DropdownCardContent = styled.div`\n  padding: 10px 0;\n`;\n\nexport default DropdownCardContent;\n","import styled from 'styled-components/macro';\n\nimport Clickable from 'shared/components/Clickable';\n\nexport const StyledClickable = styled(Clickable)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n`;\n","import React, { ReactElement } from 'react';\n\nimport Icon, { IconProps } from 'shared/components/Icon';\n\nimport { StyledClickable } from './Styles';\n\ninterface IconClickableProps {\n  className?: string;\n  title?: string;\n  onClick: (...args: unknown[]) => unknown;\n}\n\nconst IconClickable = ({\n  className = '',\n  title,\n  onClick,\n  ...iconProps\n}: IconClickableProps & IconProps): ReactElement => (\n  <StyledClickable className={className} onClick={onClick} title={title}>\n    <Icon {...iconProps} />\n  </StyledClickable>\n);\n\nexport default IconClickable;\n","import React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport DropdownAction, { DropdownActionProps } from 'shared/components/DropdownAction';\nimport DropdownCardContent from 'shared/components/DropdownCardContent';\nimport Clickable from 'shared/components/Clickable';\nimport Icon from 'shared/components/Icon';\nimport IconClickable from 'shared/components/IconClickable';\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\ninterface StyledSelectProps {\n  icon?: boolean;\n  invalid?: boolean;\n}\n\nexport const StyledSelect = styled.div<StyledSelectProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  ${font.size(14)}\n  &:focus {\n    outline: none;\n    border: 1px solid ${COLOR.borderMedium};\n  }\n  ${props => (props.icon ? 'padding-left: 25px;' : '')}\n  ${props => (props.invalid ? `&, &:focus { border: 1px solid ${COLOR.danger}; }` : '')}\n`;\n\nexport const ValueContainer = styled.div`\n  position: relative;\n  width: 100%;\n  min-height: 40px;\n  height: 100%;\n  text-align: left;\n  z-index: 1;\n  pointer-events: none;\n`;\n\nexport const ChevronIcon = styled(Icon)`\n  position: absolute;\n  top: 11px;\n  right: 11px;\n  font-size: 18px;\n  color: ${COLOR.textMedium};\n`;\n\nexport const Placeholder = styled.div`\n  padding: 11px 0 0 15px;\n  color: ${COLOR.textLightBlue};\n`;\n\nexport const ValueSingle = styled.div`\n  padding: 11px 0 0 15px;\n`;\n\nexport const ValueMulti = styled.div`\n  padding: 15px 5px 10px 10px;\n`;\n\nexport const ValueMultiItem = styled(Clickable)`\n  margin: 0 5px 5px 0;\n  pointer-events: auto;\n  ${mixin.tag}\n\n  &:focus {\n    border-color: ${COLOR.borderMedium};\n  }\n`;\n\nexport const DropdownInput = styled.input`\n  padding: 10px 15px 8px;\n\n  /* Account for the \"clear\" icon */\n  padding-right: 32px;\n\n  width: 100%;\n  border: none;\n  color: ${COLOR.textDarkest};\n  background: none;\n  &:focus {\n    outline: none;\n  }\n  &::-ms-clear {\n    display: none;\n  }\n`;\n\nexport const ClearIcon = styled(IconClickable)`\n  position: absolute;\n  top: 4px;\n  right: 7px;\n  padding: 5px;\n  font-size: 16px;\n  color: ${COLOR.textMedium};\n  ${mixin.clickable}\n`;\n\nexport const StyledDropdownCardContent = styled(DropdownCardContent)`\n  padding-top: 0;\n  max-height: 200px;\n  overflow: auto;\n`;\n\ninterface OptionProps {\n  isDisplayed: boolean;\n  isSelected: boolean;\n  isHighlighted: boolean;\n}\n\nconst OptionBase = forwardRef<HTMLButtonElement, OptionProps & DropdownActionProps>(\n  ({ isSelected, isHighlighted, ...props }, ref) => <DropdownAction ref={ref} {...props} />,\n);\n\nexport const Option = styled(OptionBase)<OptionProps>`\n  ${props =>\n    props.isSelected &&\n    css`\n      &,\n      &:hover {\n        background-color: ${COLOR.primary};\n        color: white;\n      }\n    `}\n\n  ${props =>\n    props.isHighlighted &&\n    css`\n      background: ${COLOR.highlightWhite};\n    `}\n`;\n\nexport const OptionsMessage = styled.div`\n  padding: 5px 15px 5px;\n  color: ${COLOR.textLight};\n`;\n","import React, { useState, useRef, ReactElement } from 'react';\nimport Downshift from 'downshift';\nimport { useTranslation } from 'react-i18next';\nimport { Transition } from 'react-transition-group';\n\nimport { isEnter } from 'shared/utils/transitionStates';\nimport useClickOutside from 'shared/hooks/useClickOutside';\nimport Clickable from 'shared/components/Clickable';\nimport DropdownCard, { TRANSITION_DURATION } from 'shared/components/DropdownCard';\nimport Portal from 'shared/components/Portal';\n\nimport { Item, GetInputPropsOptionsCompatibilityHack, OnCreate } from './types';\nimport { NULL_ITEM } from './constants';\nimport {\n  Wrapper,\n  StyledSelect,\n  ValueContainer,\n  StyledDropdownCardContent,\n  Option,\n  OptionsMessage,\n  Placeholder,\n  ChevronIcon,\n  DropdownInput,\n  ClearIcon,\n} from './Styles';\n\ninterface SelectBaseProps {\n  className?: string;\n  name: string;\n  placeholder?: string;\n  options: Item[];\n  selectedItem: Item | Item[];\n  onSelect: (selectedItem: Item | null) => void;\n  onCreate?: OnCreate;\n  isValueEmpty: boolean;\n  renderValue: () => ReactElement;\n  showChevron: boolean;\n  showNullOption: boolean;\n  closeDropdownOnSelect: boolean;\n  getIsLabelInOptions: (label: string) => boolean;\n}\n\nconst SelectBase: React.FC<SelectBaseProps> = ({\n  className,\n  name,\n  placeholder,\n  options,\n  selectedItem,\n  onSelect,\n  onCreate,\n  isValueEmpty,\n  renderValue,\n  showChevron,\n  showNullOption,\n  closeDropdownOnSelect,\n  getIsLabelInOptions,\n}) => {\n  const { t } = useTranslation();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [filterRaw, setFilterRaw] = useState('');\n  const [isCreatingOption, setIsCreatingOption] = useState(false);\n  const searchInput = useRef<HTMLInputElement>(null);\n  const dropdown = useRef(null);\n  const trigger = useRef(null);\n\n  const filter = filterRaw.trim();\n  const filteredOptions = options.filter((item: Item) =>\n    item.label.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  const openDropdown = () => {\n    setIsOpen(true);\n    clearFilter();\n  };\n\n  const closeDropdown = () => {\n    setIsOpen(false);\n    // IE11 doesn't blur the filter input automatically\n    if (searchInput.current && closeDropdownOnSelect) {\n      searchInput.current.blur();\n    }\n  };\n\n  const clearFilter = () => {\n    setFilterRaw('');\n    // We have to wait a tick before being able to focus on the search input\n    // because of Transition\n    setTimeout(() => {\n      if (searchInput.current) {\n        searchInput.current.focus();\n      }\n    });\n  };\n\n  const createOptionName = (newOptionName: string) => {\n    if (onCreate) {\n      setIsCreatingOption(true);\n\n      onCreate(newOptionName, createdOptionValue => {\n        setIsCreatingOption(false);\n        onSelect({\n          value: createdOptionValue,\n          label: newOptionName,\n        });\n      });\n    }\n  };\n\n  useClickOutside({\n    refs: [dropdown, trigger],\n    onClickOutside: closeDropdown,\n  });\n\n  const isBeingFiltered = filterRaw !== '';\n  const canCreateOption = onCreate && isBeingFiltered && filter && !getIsLabelInOptions(filter);\n  let optionHighlightOffset = 0;\n\n  if (showNullOption) {\n    optionHighlightOffset += 1;\n  }\n  if (canCreateOption) {\n    optionHighlightOffset += 1;\n  }\n\n  return (\n    <Downshift\n      isOpen={isOpen}\n      inputValue={filterRaw}\n      itemToString={(item: Item | null) => (item ? item.value : '')}\n      defaultHighlightedIndex={0}\n      initialSelectedItem={NULL_ITEM}\n      selectedItem={selectedItem}\n      onSelect={(item: Item | null) => {\n        if (!item) {\n          return;\n        }\n\n        if (item.label === filter && item.value === '') {\n          createOptionName(item.label);\n        } else {\n          onSelect(item);\n        }\n      }}\n      onStateChange={changes => {\n        if (\n          changes.type === Downshift.stateChangeTypes.changeInput &&\n          changes.inputValue !== null &&\n          changes.inputValue !== undefined\n        ) {\n          setFilterRaw(changes.inputValue);\n        }\n\n        if (changes.isOpen) {\n          openDropdown();\n        }\n\n        if (changes.isOpen === false) {\n          closeDropdown();\n        }\n      }}\n      stateReducer={(state, changes) => {\n        if (!closeDropdownOnSelect) {\n          if (\n            changes.type === Downshift.stateChangeTypes.keyDownEnter ||\n            changes.type === Downshift.stateChangeTypes.clickItem\n          ) {\n            return {\n              ...changes,\n              isOpen: state.isOpen,\n              highlightedIndex: state.highlightedIndex,\n            };\n          }\n        }\n\n        return changes;\n      }}\n    >\n      {downshift => (\n        <Wrapper\n          className={className}\n          data-name={name}\n          {...downshift.getRootProps()}\n          data-testid=\"select\"\n        >\n          <StyledSelect\n            as={Clickable}\n            {...downshift.getToggleButtonProps({ ref: trigger })}\n            data-testid=\"select-trigger\"\n          />\n          <ValueContainer data-testid=\"select-value-container\">\n            {showChevron && <ChevronIcon type={downshift.isOpen ? 'chevron-up' : 'chevron-down'} />}\n            {isValueEmpty && placeholder && <Placeholder>{placeholder}</Placeholder>}\n            {!isValueEmpty && renderValue()}\n          </ValueContainer>\n          <Portal>\n            <Transition in={downshift.isOpen} timeout={TRANSITION_DURATION} unmountOnExit>\n              {state => (\n                <DropdownCard\n                  isOpen={isEnter(state)}\n                  triggerRef={trigger}\n                  matchTriggerWidth\n                  data-cy-select-dropdown-card={name}\n                  {...downshift.getMenuProps({\n                    ref: dropdown,\n                  })}\n                >\n                  <DropdownInput\n                    ref={searchInput}\n                    {...(downshift.getInputProps({\n                      onKeyDown: event => {\n                        if (event.key === 'Escape' && downshift.isOpen) {\n                          event.stopPropagation();\n                        }\n                      },\n                    }) as GetInputPropsOptionsCompatibilityHack)}\n                    aria-hidden={!downshift.isOpen}\n                    tabIndex={downshift.isOpen ? undefined : -1}\n                    placeholder={t('search')}\n                  />\n                  {isBeingFiltered && (\n                    <ClearIcon\n                      type=\"close\"\n                      onClick={clearFilter}\n                      title={t('selectComponent.clearButtonLabel')}\n                    />\n                  )}\n                  <StyledDropdownCardContent data-testid=\"select-options-list\">\n                    {showNullOption && (\n                      <Option\n                        {...downshift.getItemProps({ item: NULL_ITEM })}\n                        hidden={isValueEmpty || isBeingFiltered}\n                        isSelected={false}\n                        isHighlighted={downshift.highlightedIndex === 0}\n                      >\n                        {NULL_ITEM.label}\n                      </Option>\n                    )}\n                    {canCreateOption && (\n                      <Option\n                        data-create-option-name={filter}\n                        {...downshift.getItemProps({ item: { label: filter, value: '' } })}\n                        isSelected={false}\n                        isHighlighted={downshift.highlightedIndex === (showNullOption ? 1 : 0)}\n                      >\n                        {isCreatingOption\n                          ? t('selectComponent.creating', { itemName: filter })\n                          : t('selectComponent.create', { itemName: filter })}\n                      </Option>\n                    )}\n                    {filteredOptions.slice(0, 100).map((option, i) => (\n                      <Option\n                        key={option.value}\n                        data-testid=\"select-option\"\n                        data-select-option-value={option.value}\n                        {...downshift.getItemProps({\n                          item: option,\n                          index: i + optionHighlightOffset,\n                        })}\n                        isDisplayed={downshift.isOpen}\n                        isSelected={downshift.selectedItem === option}\n                        isHighlighted={downshift.highlightedIndex === i + optionHighlightOffset}\n                      >\n                        {option.label}\n                      </Option>\n                    ))}\n                    {filteredOptions.length > 100 && (\n                      <OptionsMessage>\n                        {t('selectComponent.moreResults', { count: filteredOptions.length - 100 })}\n                      </OptionsMessage>\n                    )}\n                    {filteredOptions.length === 0 && (\n                      <OptionsMessage>{t('selectComponent.noResults')}</OptionsMessage>\n                    )}\n                  </StyledDropdownCardContent>\n                </DropdownCard>\n              )}\n            </Transition>\n          </Portal>\n        </Wrapper>\n      )}\n    </Downshift>\n  );\n};\n\nexport default SelectBase;\n","import React from 'react';\n\nimport { Item } from './types';\nimport { NULL_ITEM } from './constants';\nimport SelectBase from './SelectBase';\nimport { ValueSingle } from './Styles';\n\ninterface SelectSingleProps {\n  className?: string;\n  name: string;\n  value: string;\n  placeholder?: string;\n  options: Item[];\n  onChange: (value: string) => void;\n  required?: boolean;\n}\n\nconst SelectSingle: React.FC<SelectSingleProps> = ({\n  className,\n  name,\n  value,\n  placeholder,\n  options,\n  onChange,\n  required,\n}) => {\n  const selectedItem = options.find(option => option.value === value) || NULL_ITEM;\n\n  return (\n    <SelectBase\n      className={className}\n      name={name}\n      options={options}\n      placeholder={placeholder}\n      onSelect={selectedOption => {\n        onChange(selectedOption ? selectedOption.value : '');\n      }}\n      selectedItem={selectedItem}\n      isValueEmpty={selectedItem.value === ''}\n      renderValue={() => <ValueSingle>{selectedItem.label}</ValueSingle>}\n      showChevron\n      showNullOption={!required}\n      closeDropdownOnSelect\n      getIsLabelInOptions={label =>\n        options.some(item => item.label.toLowerCase() === label.toLowerCase())\n      }\n    />\n  );\n};\n\nexport default SelectSingle;\n","import React from 'react';\n\nimport Icon from 'shared/components/Icon';\nimport AddMoreLink from 'shared/components/AddMoreLink';\n\nimport { Item, OnCreate } from './types';\nimport SelectBase from './SelectBase';\nimport { ValueMulti, ValueMultiItem } from './Styles';\n\ninterface SelectMultiProps {\n  className?: string;\n  name: string;\n  value: string[];\n  placeholder?: string;\n  options: Item[];\n  onChange: (value: string[]) => void;\n  onCreate?: OnCreate;\n}\n\nconst SelectMulti: React.FC<SelectMultiProps> = ({\n  className,\n  name,\n  value,\n  placeholder,\n  options,\n  onChange,\n  onCreate,\n}) => {\n  const selectedItems = options.filter(option => value.includes(option.value));\n  const remainingOptions = options.filter(option => !value.includes(option.value));\n  const isValueEmpty = selectedItems.length === 0;\n\n  const removeItem = (item: Item) => {\n    onChange(value.filter(optionValue => optionValue !== item.value));\n  };\n\n  return (\n    <SelectBase\n      className={className}\n      name={name}\n      options={remainingOptions}\n      placeholder={placeholder}\n      onSelect={selectedOption => {\n        onChange(selectedOption ? [...value, selectedOption.value] : []);\n      }}\n      onCreate={onCreate}\n      selectedItem={selectedItems}\n      isValueEmpty={isValueEmpty}\n      renderValue={() => (\n        <ValueMulti>\n          {selectedItems.map(item => (\n            <ValueMultiItem\n              key={item.value}\n              onClick={event => {\n                removeItem(item);\n                event.stopPropagation();\n              }}\n            >\n              {item.label}\n              <Icon type=\"close\" />\n            </ValueMultiItem>\n          ))}\n          {remainingOptions.length !== 0 && <AddMoreLink />}\n        </ValueMulti>\n      )}\n      showChevron={isValueEmpty}\n      showNullOption={false}\n      closeDropdownOnSelect={false}\n      getIsLabelInOptions={label =>\n        options.some(item => item.label.toLowerCase() === label.toLowerCase())\n      }\n    />\n  );\n};\n\nexport default SelectMulti;\n","import styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\n\ninterface StyledTextareaProps {\n  invalid?: boolean;\n  preventResize: boolean;\n}\n\nexport const StyledTextarea = styled.div<StyledTextareaProps>`\n  display: inline-block;\n  width: 100%;\n\n  textarea {\n    width: 100%;\n    padding: 13px 15px 14px;\n    border-radius: 4px;\n    border: 1px solid ${COLOR.borderLight};\n    box-shadow: inset 0 0 1px 0 rgba(0, 0, 0, 0.03);\n    background: #fff;\n    overflow-y: hidden;\n\n    ${font.regular}\n    ${font.size(14)}\n\n    &:focus {\n      border: 1px solid ${COLOR.borderMedium};\n    }\n\n    ${props =>\n      props.invalid &&\n      css`\n        &,\n        &:focus {\n          border: 1px solid ${COLOR.danger};\n        }\n      `}\n\n    ${props =>\n      props.preventResize &&\n      css`\n        resize: none;\n      `}\n  }\n`;\n","import React, { HTMLAttributes } from 'react';\nimport TextareaAutoSize from 'react-textarea-autosize';\n\nimport { StyledTextarea } from './Styles';\n\ninterface Props {\n  minRows?: number;\n  className?: string;\n  invalid?: boolean;\n  value?: string;\n  preventResize?: boolean;\n  onChange?(value: string, event: React.ChangeEvent<HTMLTextAreaElement>): void;\n}\n\nconst Textarea: React.FC<Props & HTMLAttributes<HTMLTextAreaElement>> = ({\n  className = undefined,\n  invalid = false,\n  onChange = () => {},\n  minRows = 2,\n  preventResize = true,\n  ...textareaProps\n}) => (\n  <StyledTextarea className={className} invalid={invalid} preventResize={preventResize}>\n    <TextareaAutoSize\n      minRows={minRows}\n      {...textareaProps}\n      onChange={event => onChange(event.target.value, event)}\n    />\n  </StyledTextarea>\n);\n\nexport default Textarea;\n","type HandleMouseDown = () => void;\ntype HandleFocus = (\n  callback: (event: React.FocusEvent) => void,\n) => (event: React.FocusEvent) => void;\n\nconst onlyOnKeyboardFocus = () => {\n  let hasReceivedMouseDown = false;\n\n  const handleMouseDown: HandleMouseDown = () => {\n    hasReceivedMouseDown = true;\n  };\n\n  const whenKeyboardFocus: HandleFocus = callback => event => {\n    if (!hasReceivedMouseDown) {\n      callback(event);\n    }\n  };\n\n  return { handleMouseDown, whenKeyboardFocus };\n};\n\nexport default onlyOnKeyboardFocus;\n","import React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport DropdownCard, {\n  Card as DropdownCardInternal,\n  DropdownCardProps,\n} from 'shared/components/DropdownCard';\n\nexport const StyledDatePicker = styled.div`\n  position: relative;\n`;\n\ninterface StyledDropdownCardProps {\n  withTime: boolean;\n}\n\nconst StyledDropdownCardBase = forwardRef<\n  HTMLDivElement,\n  StyledDropdownCardProps & DropdownCardProps\n>(({ withTime, ...props }, ref) => <DropdownCard ref={ref} {...props} />);\n\nexport const StyledDropdownCard = styled(StyledDropdownCardBase)<StyledDropdownCardProps>`\n  ${DropdownCardInternal} {\n    width: 270px;\n\n    ${props =>\n      props.withTime &&\n      css`\n        width: 360px;\n        padding-right: 90px;\n      `}\n  }\n`;\n\nexport const StyledDateSection = styled.div`\n  position: relative;\n  padding: 20px;\n`;\n\nexport const CurrentMonthYear = styled.div`\n  display: inline-block;\n  padding-left: 7px;\n  ${font.bold}\n  ${font.size(16)}\n`;\n\nexport const YearSelect = styled.select`\n  margin-left: 5px;\n  width: 60px;\n  height: 22px;\n  ${font.size(13)}\n`;\n\nexport const PrevNextIcons = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 19px;\n  i {\n    padding: 7px 5px 4px;\n    font-size: 22px;\n    color: ${COLOR.textLight};\n    ${mixin.clickable}\n    &:hover {\n      color: ${COLOR.textDarkest};\n    }\n  }\n`;\n\nexport const Grid = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 15px;\n  text-align: center;\n`;\n\nexport const Header = styled.div`\n  width: calc(100% / 8);\n  height: 30px;\n  line-height: 30px;\n  color: ${COLOR.textLight};\n  ${font.size(13)}\n`;\n\nconst Cell = styled.div`\n  width: calc(100% / 8);\n  height: 30px;\n  line-height: 30px;\n  ${font.size(15)}\n`;\n\ninterface DayProps {\n  isFiller?: boolean;\n  isToday?: boolean;\n  isSelected?: boolean;\n}\n\nexport const Day = styled(Cell)<DayProps>`\n  border-radius: 4px;\n\n  ${props => !props.isFiller && hoverStyles};\n  ${props => props.isToday && font.bold};\n  ${props => props.isSelected && selectedStyles};\n`;\n\ninterface WeekProps {\n  isFirst?: boolean;\n  isLast?: boolean;\n}\n\nexport const Week = styled(Cell)<WeekProps>`\n  color: ${COLOR.textMedium};\n  background-color: ${COLOR.backgroundLight};\n\n  ${props =>\n    props.isFirst &&\n    css`\n      border-radius: 4px 4px 0 0;\n    `}\n  ${props =>\n    props.isLast &&\n    css`\n      border-radius: 0 0 4px 4px;\n    `}\n`;\n\nexport const StyledTimeSection = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 100%;\n  width: 90px;\n  padding: 5px 0;\n  border-left: 1px solid ${COLOR.borderLight};\n  ${mixin.scrollableY}\n`;\n\ninterface TimeProps {\n  isFiller?: boolean;\n  isSelected?: boolean;\n}\n\nexport const Time = styled.div<TimeProps>`\n  padding: 5px 0 5px 20px;\n  ${font.size(14)}\n  ${props => (!props.isFiller ? hoverStyles : '')}\n  ${props => (props.isSelected ? selectedStyles : '')}\n`;\n\nconst hoverStyles = `\n  ${mixin.clickable}\n  &:hover {\n    background: ${COLOR.backgroundMedium};\n  }\n`;\n\nconst selectedStyles = `\n  color: #fff;\n  &:hover, & {\n    background: ${COLOR.primary};\n  }\n`;\n","import moment, { Moment } from 'moment';\n\nexport type AnyDate = string | Date | Moment;\n\nexport const formatDate = (date: AnyDate, format = 'll'): string =>\n  date ? moment(date).format(format) : date;\n\nexport const formatDateTime = (date: AnyDate, format = 'lll'): string =>\n  date ? moment(date).format(format) : date;\n\nexport const formatDateTimeForAPI = (date: AnyDate): string =>\n  date\n    ? moment(date)\n        .utc()\n        .format()\n    : date;\n\nexport const formatDateForAPI = (date: AnyDate): string =>\n  date ? moment(date).format('YYYY-MM-DD') : date;\n\nexport function isAnyDate(value: unknown): value is AnyDate {\n  return typeof value === 'string' || value instanceof Date || moment.isMoment(value);\n}\n","export const DATE_FORMAT_WITH_TIME = 'L LT';\nexport const DATE_FORMAT_WITHOUT_TIME = 'L';\n","import React, { useEffect, useState, useRef } from 'react';\nimport moment, { Moment } from 'moment';\n\nimport { formatDateTimeForAPI, formatDateForAPI } from 'shared/utils/dateTime';\nimport useClickOutside from 'shared/hooks/useClickOutside';\nimport { KEY_CODE_VALUES } from 'shared/constants';\n\nimport { DATE_FORMAT_WITH_TIME, DATE_FORMAT_WITHOUT_TIME } from './constants';\n\nconst round = (min: number, max: number, value: number) => {\n  return Math.round((value - min) / (max - min)) * (max - min) + min;\n};\n\nconst getSelectedDate = (value: string | null) => {\n  const date = moment(value || undefined);\n  const minutes = date.minute();\n\n  if (minutes < 30) {\n    date.set('minute', round(0, 30, minutes));\n  } else if (minutes > 30) {\n    date.set('minute', round(30, 60, minutes));\n  }\n\n  date.set({ second: 0, millisecond: 0 });\n\n  return date;\n};\n\nconst EDITING_STATE = {\n  empty: 'empty',\n  editingManually: 'editingManually',\n  selectedDate: 'selectedDate',\n};\n\nexport interface DatePickerHookOptions {\n  value: string | null;\n  onChange: (nextDateOrDateTime: string | null) => void;\n  withTime: boolean;\n}\n\ninterface DatePickerAPI {\n  displayedDate: Moment;\n  inputValue: string;\n  isOpen: boolean;\n  selectedDate: Moment;\n\n  openDropdown: () => void;\n  changeYear: (year: number | string) => void;\n  goToPrevMonth: () => void;\n  goToNextMonth: () => void;\n  changeDay: (day: number | string) => void;\n  changeTime: (time: string) => void;\n  handleManualInput: (manualInputValue: string) => void;\n\n  datePickerRef: React.RefObject<HTMLDivElement>;\n  cardRef: React.RefObject<HTMLDivElement>;\n  inputRef: React.RefObject<HTMLInputElement>;\n}\n\nconst useDatePicker = ({ value, onChange, withTime }: DatePickerHookOptions): DatePickerAPI => {\n  const datePickerRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n  const clickOutsideRefs = useRef([inputRef, cardRef]);\n  const [displayedDate, setDisplayedDate] = useState(getSelectedDate(value));\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [editingState, setEditingState] = useState(\n    value ? EDITING_STATE.selectedDate : EDITING_STATE.empty,\n  );\n  const selectedDate = getSelectedDate(value);\n\n  useEffect(() => {\n    setDisplayedDate(getSelectedDate(value));\n  }, [value]);\n\n  const openDropdown = () => setIsOpen(true);\n  const closeDropdown = () => setIsOpen(false);\n\n  const changeYear = (year: number | string) => {\n    setDisplayedDate(moment(displayedDate).set('year', Number(year)));\n  };\n  const goToPrevMonth = () => setDisplayedDate(moment(displayedDate).subtract(1, 'month'));\n  const goToNextMonth = () => setDisplayedDate(moment(displayedDate).add(1, 'month'));\n  const changeDay = (day: number | string) => {\n    const date = moment(selectedDate).set({\n      date: Number(day),\n      month: displayedDate.get('month'),\n      year: displayedDate.get('year'),\n    });\n\n    setEditingState(EDITING_STATE.selectedDate);\n    onChange(withTime ? formatDateTimeForAPI(date) : formatDateForAPI(date));\n\n    if (!withTime) {\n      closeDropdown();\n    }\n  };\n  const changeTime = (time: string) => {\n    const [hour, minute] = time.split(':').map(Number);\n    const date = moment(selectedDate).set({ hour, minute });\n\n    setEditingState(EDITING_STATE.selectedDate);\n    onChange(formatDateTimeForAPI(date));\n    closeDropdown();\n  };\n\n  const dateFormat = withTime ? DATE_FORMAT_WITH_TIME : DATE_FORMAT_WITHOUT_TIME;\n  const handleManualInput = (manualInputValue: string) => {\n    setEditingState(EDITING_STATE.editingManually);\n    setInput(manualInputValue);\n  };\n  const handleClickOutside = () => {\n    closeDropdown();\n\n    if (editingState !== EDITING_STATE.editingManually) {\n      return;\n    }\n\n    if (!input) {\n      onChange(null);\n      return;\n    }\n\n    const newSelectedDate = moment(input, dateFormat);\n\n    setEditingState(EDITING_STATE.selectedDate);\n\n    if (newSelectedDate.isValid()) {\n      onChange(\n        withTime ? formatDateTimeForAPI(newSelectedDate) : formatDateForAPI(newSelectedDate),\n      );\n    }\n  };\n  const inputValue = {\n    [EDITING_STATE.empty]: '',\n    [EDITING_STATE.editingManually]: input,\n    [EDITING_STATE.selectedDate]: selectedDate.format(dateFormat),\n  }[editingState];\n\n  const handleKeyboardExit = (event: KeyboardEvent) => {\n    if (event.keyCode === KEY_CODE_VALUES.tab || event.keyCode === KEY_CODE_VALUES.enter) {\n      handleClickOutside();\n    }\n  };\n\n  useEffect(() => {\n    // Speaking of ref vs. state here, see the following discussion:\n    // https://github.com/cosuno/cosuno/pull/683#discussion_r346377552\n    const node = datePickerRef.current;\n\n    if (!node) return;\n\n    node.addEventListener('keydown', handleKeyboardExit);\n\n    // eslint-disable-next-line consistent-return\n    return () => node.removeEventListener('keydown', handleKeyboardExit);\n  });\n\n  useClickOutside({ refs: clickOutsideRefs.current, onClickOutside: handleClickOutside });\n\n  return {\n    displayedDate,\n    inputValue,\n    isOpen,\n    selectedDate,\n\n    openDropdown,\n    changeYear,\n    goToPrevMonth,\n    goToNextMonth,\n    changeDay,\n    changeTime,\n    handleManualInput,\n\n    datePickerRef,\n    cardRef,\n    inputRef,\n  };\n};\n\nexport default useDatePicker;\n","import React, { Fragment } from 'react';\nimport moment, { Moment } from 'moment';\nimport { useTranslation } from 'react-i18next';\n\nimport { times, range } from 'shared/utils/javascript';\nimport Icon from 'shared/components/Icon';\n\nimport {\n  StyledDateSection,\n  YearSelect,\n  CurrentMonthYear,\n  Grid,\n  PrevNextIcons,\n  Header,\n  Day,\n  Week,\n} from './Styles';\n\nconst generateYears = () =>\n  times(50, i => ({\n    disabled: false,\n    label: `${i + 2010}`,\n    value: `${i + 2010}`,\n  }));\n\nconst generateMonthDays = (date: Moment) =>\n  times(date.daysInMonth()).map(i => moment(date).set('date', i + 1));\n\nconst generateDaysBefore = (date: Moment) => {\n  const monthStart = moment(date).startOf('month');\n  const weekStart = moment(monthStart).startOf('week');\n  const count = monthStart.diff(weekStart, 'days');\n\n  return range(count);\n};\n\nconst generateDaysAfter = (date: Moment) => {\n  const monthEnd = moment(date).endOf('month');\n  const weekEnd = moment(monthEnd).endOf('week');\n  const count = weekEnd.diff(monthEnd, 'days');\n\n  return range(count);\n};\n\ninterface DateSectionProps {\n  selectedDate: Moment;\n  displayedDate: Moment;\n  changeDay: (day: number) => void;\n  goToPrevMonth: () => void;\n  goToNextMonth: () => void;\n  changeYear: (year: string) => void;\n}\n\nconst DateSection: React.FC<DateSectionProps> = ({\n  selectedDate,\n  displayedDate,\n  changeDay,\n  goToPrevMonth,\n  goToNextMonth,\n  changeYear,\n}) => {\n  const { t } = useTranslation();\n\n  const daysBefore = generateDaysBefore(displayedDate);\n  const monthDays = generateMonthDays(displayedDate);\n  const daysAfter = generateDaysAfter(displayedDate);\n\n  const isFirstDayMonday = monthDays[0].weekday() === 0;\n  const isFirstWeekInMonth = (date: Moment) =>\n    moment(date)\n      .subtract(1, 'week')\n      .month() !== date.month();\n  const isLastWeekInMonth = (date: Moment) =>\n    moment(date)\n      .add(1, 'week')\n      .month() !== date.month();\n\n  return (\n    <StyledDateSection>\n      <CurrentMonthYear>{displayedDate.format('MMM YYYY')}</CurrentMonthYear>\n      <YearSelect\n        value={displayedDate.get('year')}\n        onChange={event => changeYear(event.target.value)}\n        tabIndex={-1}\n      >\n        {[{ label: t('year'), value: '', disabled: true }, ...generateYears()].map(option => (\n          <option key={option.label} value={option.value} disabled={option.disabled}>\n            {option.label}\n          </option>\n        ))}\n      </YearSelect>\n      <PrevNextIcons>\n        <Icon type=\"arrow-left\" onClick={goToPrevMonth} />\n        <Icon type=\"arrow-right\" onClick={goToNextMonth} />\n      </PrevNextIcons>\n      <Grid>\n        <Header />\n        {moment.weekdaysMin(true).map(name => (\n          <Header key={name}>{name}</Header>\n        ))}\n        {!isFirstDayMonday && <Week isFirst>{monthDays[0].week()}</Week>}\n        {daysBefore.map(i => (\n          <Day key={`prev${i}`} isFiller />\n        ))}\n        {monthDays.map(date => (\n          <Fragment key={date.date()}>\n            {date.weekday() === 0 && (\n              <Week\n                isFirst={isFirstDayMonday && isFirstWeekInMonth(date)}\n                isLast={isLastWeekInMonth(date)}\n              >\n                {date.week()}\n              </Week>\n            )}\n            <Day\n              data-cy-day={moment(date).date()}\n              isToday={moment().isSame(date, 'day')}\n              isSelected={selectedDate.isSame(date, 'day')}\n              onClick={() => changeDay(date.get('date'))}\n            >\n              {date.format('D')}\n            </Day>\n          </Fragment>\n        ))}\n        {daysAfter.map(i => (\n          <Day key={`next${i}`} isFiller />\n        ))}\n      </Grid>\n    </StyledDateSection>\n  );\n};\n\nexport default DateSection;\n","import { Moment } from 'moment';\nimport React, { useLayoutEffect, useRef } from 'react';\n\nimport { range } from 'shared/utils/javascript';\n\nimport { StyledTimeSection, Time } from './Styles';\n\nconst formatTime = (date: Moment) => date.format('HH:mm');\n\nconst generateTimes = () =>\n  range(48).map(i => {\n    const hour = `${Math.floor(i / 2)}`;\n    const paddedHour = hour.length < 2 ? `0${hour}` : hour;\n    const minutes = i % 2 === 0 ? '00' : '30';\n    return `${paddedHour}:${minutes}`;\n  });\n\ninterface TimeSectionProps {\n  changeTime: (time: string) => void;\n  selectedDate: Moment;\n}\n\nconst TimeSection: React.FC<TimeSectionProps> = ({ selectedDate, changeTime }) => {\n  const timeSectionRef = useRef<HTMLDivElement>(null);\n\n  const scrollToSelectedTime = () => {\n    if (!timeSectionRef.current) return;\n\n    const $selectedTime = timeSectionRef.current.querySelector(\n      `[data-time=\"${formatTime(selectedDate)}\"]`,\n    );\n\n    if (!$selectedTime) return;\n\n    // Note: `$selectedTime` may no longer be `HTMLElement` as you change `<Time>` e.g. to <svg>\n    // so `selectedTimeOffsetTop` becomes `undefined` in this case\n    const selectedTimeOffsetTop = ($selectedTime as HTMLElement).offsetTop;\n\n    timeSectionRef.current.scrollTop = selectedTimeOffsetTop - 80;\n  };\n\n  // If we used regular `useEffect`, the scroll would occur after the initial render, which creates\n  // an unpleasant effect.\n  useLayoutEffect(scrollToSelectedTime, []);\n\n  return (\n    <StyledTimeSection ref={timeSectionRef}>\n      {generateTimes().map(time => (\n        <Time\n          key={time}\n          data-time={time}\n          isSelected={time === formatTime(selectedDate)}\n          onClick={() => changeTime(time)}\n        >\n          {time}\n        </Time>\n      ))}\n    </StyledTimeSection>\n  );\n};\n\nexport default TimeSection;\n","import React from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { isEnter } from 'shared/utils/transitionStates';\nimport Input from 'shared/components/Input';\nimport { TRANSITION_DURATION } from 'shared/components/DropdownCard';\nimport onlyOnKeyboardFocus from 'shared/utils/onlyOnKeyboardFocus';\n\nimport { StyledDatePicker, StyledDropdownCard } from './Styles';\nimport useDatePicker, { DatePickerHookOptions } from './useDatePicker';\nimport DateSection from './DateSection';\nimport TimeSection from './TimeSection';\n\nexport interface DatePickerProps {\n  className?: string;\n  // TODO: extend `DatePickerProps` from `InputProps` from 'shared/components/Input' instead\n  name?: string;\n  withTime?: boolean;\n  value?: DatePickerHookOptions['value'];\n  onChange: DatePickerHookOptions['onChange'];\n  disabled?: boolean;\n}\n\nconst DatePicker: React.FC<DatePickerProps> = ({\n  className,\n  onChange,\n  value = null,\n  withTime = true,\n  ...inputProps\n}) => {\n  const {\n    displayedDate,\n    inputValue,\n    isOpen,\n    selectedDate,\n\n    openDropdown,\n    changeYear,\n    goToPrevMonth,\n    goToNextMonth,\n    changeDay,\n    changeTime,\n    handleManualInput,\n\n    datePickerRef,\n    cardRef,\n    inputRef,\n  } = useDatePicker({ value, onChange, withTime });\n  const { handleMouseDown, whenKeyboardFocus } = onlyOnKeyboardFocus();\n\n  return (\n    <StyledDatePicker ref={datePickerRef} data-cy-date-picker-name={inputProps.name}>\n      <Input\n        icon=\"calendar\"\n        {...inputProps}\n        ref={inputRef}\n        className={className}\n        autoComplete=\"off\"\n        value={inputValue}\n        onClick={openDropdown}\n        onMouseDown={handleMouseDown}\n        onChange={handleManualInput}\n        onFocus={whenKeyboardFocus(openDropdown)}\n        data-testid=\"date-picker-input\"\n      />\n      <Transition in={isOpen} timeout={TRANSITION_DURATION} unmountOnExit>\n        {state => (\n          <StyledDropdownCard withTime={withTime} isOpen={isEnter(state)} ref={cardRef}>\n            <DateSection\n              selectedDate={selectedDate}\n              displayedDate={displayedDate}\n              changeDay={changeDay}\n              goToPrevMonth={goToPrevMonth}\n              goToNextMonth={goToNextMonth}\n              changeYear={changeYear}\n            />\n            {withTime && <TimeSection selectedDate={selectedDate} changeTime={changeTime} />}\n          </StyledDropdownCard>\n        )}\n      </Transition>\n    </StyledDatePicker>\n  );\n};\n\nexport { DATE_FORMAT_WITH_TIME, DATE_FORMAT_WITHOUT_TIME } from './constants';\nexport default DatePicker;\n","import { useEffect, useState } from 'react';\nimport pubsub from 'sweet-pubsub';\n\nimport { loadScript } from 'shared/utils/script';\n\ntype Google = typeof google;\n\nconst useGoogleMapsApi = (): Google | undefined => {\n  window.gmApiCallback = () => pubsub.emit('gmApiLoaded');\n\n  const [google, setGoogle] = useState<Google>(window.google);\n\n  const setGoogleFromWindow = () => {\n    setGoogle(window.google);\n  };\n\n  useEffect(() => {\n    pubsub.on('gmApiLoaded', setGoogleFromWindow);\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places&callback=gmApiCallback`,\n      'gmApiScript',\n    );\n\n    return () => {\n      pubsub.off('gmApiLoaded', setGoogleFromWindow);\n    };\n  }, []);\n\n  return google;\n};\n\nexport default useGoogleMapsApi;\n","export const loadScript = (url: string, id: string, then?: GlobalEventHandlers['onload']) => {\n  if (document.getElementById(id)) return;\n  const script = document.createElement('script');\n  if (then) script.onload = then;\n  script.async = true;\n  script.src = url;\n  script.id = id;\n  document.getElementsByTagName('head')[0].appendChild(script);\n};\n","import React, { useEffect, useRef, useCallback } from 'react';\n\nimport { KEY_CODE_VALUES } from 'shared/constants';\nimport useGoogleMapsApi from 'shared/hooks/useGoogleMapsApi';\nimport Input, { InputProps } from 'shared/components/Input';\n\nexport interface Place {\n  lat?: string;\n  long?: string;\n  location: string;\n}\n\ninterface LocationSearchProps {\n  onChange: (value: string) => void;\n  onPlaceSelect?: (place: Place) => void;\n}\n\nconst boundsForGermany = {\n  east: 15.0169958839,\n  north: 54.983104153,\n  south: 47.3024876979,\n  west: 5.98865807458,\n};\n\nconst LocationSearch: React.FC<LocationSearchProps &\n  Omit<InputProps, keyof LocationSearchProps>> = ({ onChange, onPlaceSelect, ...inputProps }) => {\n  const input = useRef<HTMLInputElement>(null);\n  const autocomplete = useRef<google.maps.places.Autocomplete>();\n\n  const google = useGoogleMapsApi();\n\n  const updateLocation = useCallback(() => {\n    if (!autocomplete.current) {\n      return;\n    }\n\n    const place = autocomplete.current.getPlace();\n    const isPlaceValid = place.formatted_address;\n\n    onChange(place.formatted_address || '');\n\n    if (isPlaceValid && onPlaceSelect) {\n      onPlaceSelect({\n        lat: place.geometry && String(place.geometry.location.lat()),\n        long: place.geometry && String(place.geometry.location.lng()),\n        location: place.formatted_address || '',\n      });\n    }\n  }, [onChange, onPlaceSelect]);\n\n  useEffect(() => {\n    if (!input.current || !google) {\n      return () => {};\n    }\n\n    if (!autocomplete.current) {\n      autocomplete.current = new google.maps.places.Autocomplete(input.current, {\n        types: ['geocode'],\n        bounds: boundsForGermany,\n      });\n    }\n\n    const placeListener = autocomplete.current.addListener('place_changed', updateLocation);\n\n    const inputListener = google.maps.event.addDomListener(input.current, 'keydown', event => {\n      if ((event as KeyboardEvent).keyCode === KEY_CODE_VALUES.enter) {\n        event.preventDefault();\n      }\n    });\n\n    return () => {\n      placeListener.remove();\n      inputListener.remove();\n    };\n  }, [google, updateLocation]);\n\n  return (\n    <Input\n      icon=\"search\"\n      {...inputProps}\n      ref={input}\n      onChange={value => {\n        onChange(value);\n        if (!value && onPlaceSelect) onPlaceSelect({ lat: '', long: '', location: '' });\n      }}\n    />\n  );\n};\n\nexport default LocationSearch;\n","import styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport Icon from 'shared/components/Icon';\n\ninterface StyledCheckboxProps {\n  invalid?: boolean;\n}\n\nexport const StyledCheckbox = styled.div<StyledCheckboxProps>`\n  border-radius: 4px;\n  ${props =>\n    props.invalid &&\n    css`\n      padding: 15px;\n      border: 1px solid ${COLOR.danger};\n    `}\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  position: relative;\n  height: 18px;\n  line-height: 1.5;\n  padding-left: 28px;\n  cursor: pointer;\n  color: ${COLOR.textDarkest};\n  ${font.size(14)}\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 18px;\n    width: 18px;\n    border: 1px solid ${COLOR.borderLight};\n    border-radius: 4px;\n    background: #fff;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const CheckIcon = styled(Icon)`\n  display: none;\n  position: absolute;\n  top: 2px;\n  left: 3px;\n  font-size: 13px;\n  color: #fff;\n`;\n\nexport const HiddenInput = styled.input`\n  display: none;\n  &:disabled + ${/* sc-selector */ Label} {\n    cursor: text;\n  }\n  &:disabled\n    + ${/* sc-selector */ Label}::before,\n    &:disabled\n    + ${/* sc-selector */ Label}\n    ${/* sc-selector */ CheckIcon} {\n    cursor: not-allowed;\n  }\n  &:not([disabled]) + ${/* sc-selector */ Label}:focus::before {\n    border: 1px solid ${COLOR.borderMedium};\n  }\n  &:checked + ${/* sc-selector */ Label} {\n    &::before {\n      border: 1px solid ${COLOR.primary} !important;\n      background: ${COLOR.primary};\n    }\n    ${CheckIcon} {\n      display: inline-block;\n    }\n  }\n`;\n","import { objectToQueryString } from 'shared/utils/url';\n\n// We're defining all possible image sizes here to encourage\n// reusing existing sizes to achieve efficient imgix caching\nexport enum IMAGE_TYPE {\n  avatar = 'avatar',\n  imageUploader = 'imageUploader',\n  logo = 'logo',\n  project = 'project',\n}\n\nconst types = {\n  [IMAGE_TYPE.avatar]: { w: 200, h: 200, fit: 'crop', crop: 'faces' },\n  [IMAGE_TYPE.imageUploader]: { w: 500 },\n  [IMAGE_TYPE.logo]: { w: 300, h: 300, fm: 'png' },\n  [IMAGE_TYPE.project]: { w: 700, h: 467 },\n};\n\nexport const getImageUrl = (storageKey: string, type: IMAGE_TYPE): string => {\n  const path = getImagePath(storageKey);\n  const query = objectToQueryString({\n    fit: 'clip',\n    auto: 'format,compress',\n    fm: 'jpg',\n    ...types[type],\n  });\n  return `${path}?${query}`;\n};\n\nexport const getImagePath = (storageKey: string): string =>\n  `https://${process.env.REACT_APP_IMGIX_SUBDOMAIN}.imgix.net/${storageKey}`;\n","import React from 'react';\n\nimport { uniqueId } from 'shared/utils/javascript';\n\nimport { StyledCheckbox, HiddenInput, Label, CheckIcon } from './Styles';\n\nexport interface CheckboxProps {\n  className?: string;\n  checkboxLabel: React.ReactNode | string;\n  name?: string;\n  value?: string | boolean;\n  checked?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  onChange: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Checkbox: React.FC<CheckboxProps> = ({\n  className,\n  checkboxLabel,\n  onChange,\n  invalid,\n  value,\n  checked,\n  ...checkboxProps\n}) => {\n  const checkboxId = uniqueId('form-checkbox-');\n\n  return (\n    <StyledCheckbox className={className} invalid={invalid}>\n      <HiddenInput\n        {...checkboxProps}\n        type=\"checkbox\"\n        id={checkboxId}\n        value={String(value)}\n        checked={checked !== undefined ? checked : Boolean(value)}\n        onChange={event => onChange(event.target.checked, event)}\n      />\n      <Label tabIndex={0} htmlFor={checkboxId}>\n        {checkboxLabel}\n        <CheckIcon type=\"check-fat\" />\n      </Label>\n    </StyledCheckbox>\n  );\n};\n\nexport default Checkbox;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\n\nexport const StyledRadioButton = styled.div`\n  display: block;\n`;\n\nexport const Label = styled.label`\n  display: inline-block;\n  position: relative;\n  height: 18px;\n  line-height: 16px;\n  padding-left: 28px;\n  padding-top: 10px;\n  cursor: pointer;\n  color: ${COLOR.textDarkest};\n  ${font.size(14)}\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    height: 18px;\n    width: 18px;\n    border: 1px solid ${COLOR.borderLight};\n    border-radius: 10px;\n    background: #fff;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const StyledRadioGroup = styled.div`\n  padding: 5px 15px 14px;\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  resize: none;\n  box-shadow: inset 0 0 1px 0 rgba(0, 0, 0, 0.03);\n  background: #fff;\n  overflow-y: hidden;\n`;\n\nexport const HiddenInput = styled.input`\n  display: none;\n  &:not([disabled]) + ${/* sc-selector */ Label}:focus::before {\n    border: 1px solid ${COLOR.borderMedium};\n  }\n  &:checked + ${/* sc-selector */ Label} {\n    &::before {\n      border: 3px solid ${COLOR.borderLight} !important;\n      background: ${COLOR.primary};\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledRadioButton, HiddenInput, Label, StyledRadioGroup } from './Styles';\n\ninterface RadioButtonGroupProps<T = string | boolean> {\n  className?: string;\n  value: T;\n  name: string;\n  values: Array<{ optionValue: T; label: string }>;\n  onChange: (value: T) => void;\n}\n\nconst RadioButtonGroup: React.FC<RadioButtonGroupProps> = ({\n  className,\n  value,\n  values,\n  onChange,\n  name,\n}) => (\n  <StyledRadioGroup className={className}>\n    {values.map(({ optionValue, label }, index) => (\n      <StyledRadioButton key={index}>\n        <HiddenInput\n          id={`${name}-${index}`}\n          name={name}\n          type=\"radio\"\n          checked={optionValue === value}\n          value={String(optionValue)}\n          onChange={() => onChange(optionValue)}\n        />\n        <Label\n          tabIndex={0}\n          data-cy-radio-button={`${name}-${optionValue}`}\n          htmlFor={`${name}-${index}`}\n        >\n          {label}\n        </Label>\n      </StyledRadioButton>\n    ))}\n  </StyledRadioGroup>\n);\n\nexport default RadioButtonGroup;\n","import queryString from 'query-string';\n\nexport const queryStringToObject = <S extends object>(str: string, options: object = {}): S =>\n  queryString.parse(str, {\n    arrayFormat: 'bracket',\n    ...options,\n  }) as S;\nexport const objectToQueryString = (obj: object, options: object = {}): string =>\n  queryString.stringify(obj, {\n    arrayFormat: 'bracket',\n    ...options,\n  });\n","import gql from 'graphql-tag';\n\nexport const queryImageUploadUrl = gql`\n  query ImageUploadUrl($filename: String!) {\n    imageUploadUrl(filename: $filename) {\n      uploadUrl\n      storageKey\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\n\nexport const StyledImageUploader = styled.div`\n  position: relative;\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  box-shadow: inset 0 0 1px 0 rgba(0, 0, 0, 0.03);\n  background: #fff;\n`;\n\nexport const SpinnerContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.8);\n`;\n\ninterface DropzoneProps {\n  paddingBottom?: number;\n}\n\nexport const Dropzone = styled.div<DropzoneProps>`\n  outline: none;\n  padding: 25px 25px ${props => props.paddingBottom || 25}px;\n  cursor: pointer;\n`;\n\nexport const Message = styled.div`\n  text-align: center;\n  ${font.medium}\n  ${font.size(14)}\n  i {\n    margin-right: 7px;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  margin: 0 auto;\n  width: 75%;\n  border-radius: 4px;\n`;\n\nexport const RemoveLinkContainer = styled.div`\n  padding: 0 0 15px;\n  text-align: center;\n`;\n\nexport const RemoveLink = styled.div`\n  display: inline-block;\n  padding: 4px;\n  cursor: pointer;\n  ${font.size(14)}\n  ${mixin.link()}\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\n\nimport apolloClient from 'apolloClient';\nimport { getImageUrl, IMAGE_TYPE } from 'shared/utils/images';\nimport toast from 'shared/utils/toast';\nimport Spinner from 'shared/components/Spinner';\nimport Icon from 'shared/components/Icon';\n\nimport { queryImageUploadUrl } from './api';\nimport {\n  StyledImageUploader,\n  Dropzone,\n  Message,\n  SpinnerContainer,\n  Image,\n  RemoveLinkContainer,\n  RemoveLink,\n} from './Styles';\n\nconst uploadImageToStorage = async (uploadUrl: string, file: File) =>\n  axios.put(uploadUrl, file, {\n    headers: { 'Content-Type': file.type },\n  });\n\ninterface Props {\n  name: string;\n  value: string | null;\n  onChange: (storageKey: string | null) => void;\n}\n\nconst ImageUploader: React.FC<Props> = ({ name, value, onChange }) => {\n  const { t } = useTranslation();\n  const [preview, setPreview] = useState<string | null>(null);\n  const [isUploading, setUploading] = useState(false);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: async ([file]) => {\n      if (!file) return;\n      setUploading(true);\n      setPreview(URL.createObjectURL(file));\n      try {\n        const { data } = await apolloClient.query({\n          query: queryImageUploadUrl,\n          variables: { filename: file.name },\n        });\n        await uploadImageToStorage(data.imageUploadUrl.uploadUrl, file);\n        onChange(data.imageUploadUrl.storageKey);\n      } catch (error) {\n        toast.error(error);\n      }\n      setUploading(false);\n    },\n  });\n\n  useEffect(() => {\n    return () => {\n      if (preview) {\n        URL.revokeObjectURL(preview);\n      }\n    };\n  }, [preview]);\n\n  return (\n    <StyledImageUploader data-cy-image-uploader={name}>\n      {isUploading && (\n        <SpinnerContainer>\n          <Spinner size={60} />\n        </SpinnerContainer>\n      )}\n      {preview || value ? (\n        <>\n          <Dropzone {...getRootProps()} paddingBottom={10}>\n            <input {...getInputProps()} />\n            <Image\n              src={preview || (value && getImageUrl(value, IMAGE_TYPE.imageUploader)) || ''}\n              alt={t('imageUploader.uploadedImage')}\n            />\n          </Dropzone>\n          <RemoveLinkContainer>\n            <RemoveLink\n              onClick={() => {\n                setPreview(null);\n                onChange(null);\n              }}\n            >\n              {t('imageUploader.removeImage')}\n            </RemoveLink>\n          </RemoveLinkContainer>\n        </>\n      ) : (\n        <Dropzone {...getRootProps()}>\n          <input {...getInputProps()} />\n          <Message>\n            <Icon type=\"upload\" top={1} />\n            {t('imageUploader.uploadImage')}\n          </Message>\n        </Dropzone>\n      )}\n    </StyledImageUploader>\n  );\n};\n\nexport { Image };\nexport default ImageUploader;\n","import React, { useRef } from 'react';\nimport Cleave from 'cleave.js/react';\nimport { useTranslation } from 'react-i18next';\n\nimport Input, { InputProps, InputRenderProps } from 'shared/components/Input';\n\nconst formatWithLocale = (locale: string, value: number | string) =>\n  value === '' ? '' : new Intl.NumberFormat(locale).format(Number(value));\n\n// As the Intl API does not provide any introspection capabilities, we have to use slightly hacky\n// ways of getting localized separators from it. In the future, using `formatToParts` might be\n// better, but it is not supported on IE11.\nconst getDecimalSeparator = (locale: string) => {\n  const numThatIncludesDecimalSeparator = formatWithLocale(locale, 1.5);\n\n  return numThatIncludesDecimalSeparator.replace(/\\d/g, '');\n};\n\nconst getNumeralGroupSeparator = (locale: string) => {\n  const numThatIncludesGroupSeparator = formatWithLocale(locale, 1000000000);\n\n  return numThatIncludesGroupSeparator.replace(/\\d/g, '')[0];\n};\n\ninterface CurrencyInputProps {\n  value: string;\n}\n\nconst CurrencyInput: React.FC<CurrencyInputProps & InputProps> = ({ value, ...props }) => {\n  const { i18n } = useTranslation();\n  const locale = i18n.language;\n  const formattedValue = useRef(formatWithLocale(locale, value));\n  const renderInput = ({ onChange, ...inputProps }: InputRenderProps) => (\n    <Cleave\n      {...inputProps}\n      ref={inputProps.ref as React.ComponentPropsWithRef<typeof Cleave>['ref']}\n      value={formattedValue.current}\n      onChange={event => {\n        formattedValue.current = event.target.value;\n\n        onChange(event.target.rawValue, event);\n      }}\n      options={{\n        numeral: true,\n        numeralThousandsGroupStyle: 'thousand',\n        numeralDecimalMark: getDecimalSeparator(locale),\n        delimiter: getNumeralGroupSeparator(locale),\n      }}\n    />\n  );\n\n  return <Input {...props} renderInput={renderInput} />;\n};\n\nexport default CurrencyInput;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\n\ninterface FieldWrapperProps {\n  hasLabel: boolean;\n}\n\nexport const FieldWrapper = styled.div<FieldWrapperProps>`\n  width: 100%;\n  position: relative;\n  margin-bottom: 25px;\n  ${props => (props.hasLabel ? 'padding-top: 7px;' : '')}\n`;\n\nexport const FieldLabel = styled.label`\n  z-index: 1;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 20px;\n  padding: 0 5px;\n  border-radius: 4px;\n  background: #fff;\n  color: ${COLOR.textDark};\n  ${font.size(12)}\n`;\n\nexport const FieldError = styled.div`\n  margin-top: 6px;\n  line-height: 1;\n  color: ${COLOR.danger};\n  ${font.medium}\n  ${font.size(12)}\n`;\n","import React from 'react';\nimport { useField } from 'formik';\n\nimport { uniqueId } from 'shared/utils/javascript';\nimport Input from 'shared/components/Input';\nimport { SelectSingle, SelectMulti } from 'shared/components/Select';\nimport Textarea from 'shared/components/Textarea';\nimport DatePicker from 'shared/components/DatePicker';\nimport LocationSearch from 'shared/components/LocationSearch';\nimport Checkbox from 'shared/components/Checkbox';\nimport RadioButtonGroup from 'shared/components/RadioButtonGroup';\nimport ImageUploader from 'shared/components/ImageUploader';\nimport CurrencyInput from 'shared/components/CurrencyInput';\n\nimport { FieldWrapper, FieldLabel, FieldError } from './Styles';\n\ninterface FieldProps {\n  name: string;\n  id?: string;\n  className?: string;\n  label?: string;\n  required?: boolean;\n}\n\ntype InjectedProps = 'value' | 'onChange';\n\nconst generateField = <Props extends {}>(FormComponent: React.ComponentType<Props>) => {\n  const FieldComponent: React.FC<FieldProps & Omit<Props, InjectedProps>> = ({\n    className,\n    id,\n    name,\n    label,\n    required,\n    ...props\n  }) => {\n    const [inputProps, { touched, error }, { setValue }] = useField(name);\n\n    const fieldId = id || uniqueId('field-');\n    const hasError = touched && error;\n\n    return (\n      <FieldWrapper className={className} hasLabel={!!label}>\n        {label && (\n          <FieldLabel htmlFor={fieldId}>\n            {label}\n            {required && ' *'}\n          </FieldLabel>\n        )}\n        <FormComponent\n          // Seems like we have to cast props as any, even though they should be a\n          // subset of Props\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          {...(props as any)}\n          {...inputProps}\n          id={fieldId}\n          invalid={hasError}\n          required={required}\n          onChange={setValue}\n        />\n        {hasError && <FieldError>{error}</FieldError>}\n      </FieldWrapper>\n    );\n  };\n\n  FieldComponent.displayName = `Field.${FormComponent.displayName || FormComponent.name}`;\n\n  return FieldComponent;\n};\n\nconst Field = {\n  Input: generateField(Input),\n  SelectSingle: generateField(SelectSingle),\n  SelectMulti: generateField(SelectMulti),\n  Textarea: generateField(Textarea),\n  DatePicker: generateField(DatePicker),\n  LocationSearch: generateField(LocationSearch),\n  Checkbox: generateField(Checkbox),\n  RadioButtonGroup: generateField(RadioButtonGroup),\n  ImageUploader: generateField(ImageUploader),\n  CurrencyInput: generateField(CurrencyInput),\n};\n\nexport { FieldWrapper };\nexport default Field;\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components/macro';\n\nimport { mixin } from 'shared/utils/styles';\n\nconst ExternalLinkStyled = styled.a`\n  ${mixin.link()}\n`;\n\nexport interface ExternalLinkProps {\n  to: string;\n  className?: string;\n  children: ReactNode;\n}\n\nconst prependProtocol = (url: string) =>\n  url.startsWith('http://') ||\n  url.startsWith('https://') ||\n  url.startsWith('tel:') ||\n  url.startsWith('mailto:')\n    ? url\n    : `http://${url}`;\n\nconst ExternalLink: React.FC<ExternalLinkProps> = ({ to, className, children }) => (\n  <ExternalLinkStyled\n    className={className}\n    href={prependProtocol(to)}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    {children}\n  </ExternalLinkStyled>\n);\n\nexport default ExternalLink;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport ExternalLink from 'shared/components/ExternalLink';\n\nexport const Text = styled.div`\n  line-height: 20px;\n  color: ${COLOR.textDark};\n  ${font.size(14)};\n`;\n\nexport const Name = styled(Text)`\n  margin-bottom: 15px;\n  color: ${COLOR.textDarkest};\n  ${font.medium}\n  ${font.size(17)}\n`;\n\nexport const Anchor = styled(ExternalLink)`\n  line-height: 20px;\n  ${font.size(14)}\n  ${mixin.link()}\n`;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\n\nimport { Text, Name, Anchor } from './Styles';\nimport { SubcontractorInfo_subcontractorInfo } from './__graphql__/SubcontractorInfo_subcontractorInfo';\n\nconst fragmentSubcontractorInfo = gql`\n  fragment SubcontractorInfo_subcontractorInfo on Subcontractor {\n    name\n    street\n    postalCode\n    city\n    countryCode\n    website\n  }\n`;\n\nexport interface SubcontractorInfoProps {\n  subcontractor: SubcontractorInfo_subcontractorInfo;\n}\n\nconst SubcontractorInfo = ({\n  subcontractor: { name, street, postalCode, city, countryCode, website },\n}: SubcontractorInfoProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      <Name>{name}</Name>\n      {street && <Text>{street}</Text>}\n      {(postalCode || city) && <Text>{`${postalCode || ''} ${city || ''}`}</Text>}\n      {countryCode && <Text>{t(`countries:${countryCode}`)}</Text>}\n      <br />\n      {website && (\n        <Text>\n          {`${t('companyInfo.website')}: `}\n          <Anchor to={website}>{website}</Anchor>\n        </Text>\n      )}\n    </div>\n  );\n};\n\nexport { fragmentSubcontractorInfo };\nexport default SubcontractorInfo;\n","import i18n from 'i18next';\n\ninterface Contact {\n  isPerson: boolean;\n  title?: string | null;\n  email?: string | null;\n  firstName?: string | null;\n  lastName?: string | null;\n}\n\nconst getContactName = (contact: Contact): string | null => {\n  if (contact.isPerson) {\n    return [contact.firstName, contact.lastName].filter(Boolean).join(' ') || null;\n  }\n\n  return contact.email || null;\n};\n\nconst getContactNameWithTitle = (contact: Contact): string | null => {\n  if (contact.isPerson && contact.title && contact.lastName) {\n    const title = i18n.t(`companyInfo.title.${contact.title}`);\n    const name = [contact.firstName, contact.lastName].filter(Boolean).join(' ');\n\n    return [title, name].filter(Boolean).join(' ') || null;\n  }\n\n  return getContactName(contact);\n};\n\nexport { getContactNameWithTitle };\nexport default getContactName;\n","import { BID_INVITE_STATUS, BID_REQUEST_STATUS } from '__graphql__/globalTypes';\nimport { IconProps } from 'shared/components/Icon';\n\nexport const bidInviteStatusIconKey: { [key in BID_INVITE_STATUS]: IconProps['type'] } = {\n  [BID_INVITE_STATUS.draft]: 'file-plus',\n  [BID_INVITE_STATUS.sent]: 'email',\n  [BID_INVITE_STATUS.failed]: 'bell-strikethrough',\n  [BID_INVITE_STATUS.opened]: 'email-open',\n  [BID_INVITE_STATUS.viewed]: 'eye',\n};\n\nexport const bidRequestStatusIconKey: { [key in BID_REQUEST_STATUS]: IconProps['type'] } = {\n  [BID_REQUEST_STATUS.pendingInvite]: 'file-plus',\n  [BID_REQUEST_STATUS.invited]: 'email',\n  [BID_REQUEST_STATUS.opened]: 'email-open',\n  [BID_REQUEST_STATUS.viewed]: 'eye',\n  [BID_REQUEST_STATUS.undecided]: 'watch',\n  [BID_REQUEST_STATUS.inviteDeclined]: 'thumbs-down',\n  [BID_REQUEST_STATUS.inviteAccepted]: 'thumbs-up',\n  [BID_REQUEST_STATUS.bidSubmitted]: 'checkmark',\n  [BID_REQUEST_STATUS.bidAwarded]: 'gavel',\n  [BID_REQUEST_STATUS.bidRejected]: 'close-fat',\n  [BID_REQUEST_STATUS.withdrawn]: 'close-fat',\n};\n","import styled, { css } from 'styled-components/macro';\n\nimport Icon from 'shared/components/Icon';\nimport ExternalLink from 'shared/components/ExternalLink';\nimport { COLOR, font } from 'shared/utils/styles';\nimport { BID_INVITE_STATUS } from '__graphql__/globalTypes';\nimport { bidInviteStatusIconKey } from 'shared/components/Icon/utils';\n\nexport const Text = styled.div`\n  line-height: 20px;\n  color: ${COLOR.textDark};\n  ${font.size(14)};\n`;\n\nexport const Anchor = styled(ExternalLink)`\n  line-height: 20px;\n  ${font.size(14)}\n`;\n\nexport const Contact = styled.div`\n  display: flex;\n\n  & + & {\n    margin-top: 20px;\n  }\n`;\n\nexport const Info = styled.div`\n  /* Center align top line of text with the Avatar */\n  margin-top: 2px;\n\n  margin-left: 10px;\n`;\n\nexport const IconAvatar = styled.div`\n  width: 24px;\n  height: 24px;\n  border-radius: 50%;\n  color: white;\n\n  /* One of the colors from Avatar */\n  background-color: #da7657;\n`;\n\nexport const Status = styled(Text)`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n`;\n\ninterface StatusIconProps {\n  status: BID_INVITE_STATUS;\n}\n\nexport const StatusIcon = styled(Icon).attrs((props: StatusIconProps) => ({\n  type: bidInviteStatusIconKey[props.status],\n  size: 15,\n}))<StatusIconProps>`\n  margin-right: 7px;\n  color: ${COLOR.textMedium};\n\n  ${props =>\n    props.status === BID_INVITE_STATUS.failed &&\n    css`\n      color: ${COLOR.danger};\n    `}\n`;\n\nexport const ResendIconWrapper = styled.div`\n  display: flex;\n  margin-top: 10px;\n`;\n\nexport const ResendIcon = styled(Icon).attrs({\n  type: 'email',\n})`\n  margin-right: 7px;\n  font-size: 15px;\n  color: ${COLOR.textMedium};\n`;\n","import gql from 'graphql-tag';\n\nexport const mutationSendInvitation = gql`\n  mutation SendInvitation($bidInviteId: ID!) {\n    sendInvitation(bidInviteId: $bidInviteId)\n  }\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { ConfirmationModal, ClickableText } from 'shared/components';\n\nimport { ResendIconWrapper, ResendIcon } from './Styles';\nimport { mutationSendInvitation } from './api';\n\ninterface Props {\n  bidInviteId: string;\n}\n\nconst ResendInvitationLink = ({ bidInviteId }: Props) => {\n  const { t } = useTranslation('bidPackages');\n  const [sendInvitation, { loading }] = useMutation(mutationSendInvitation, {\n    refetchQueries: () => ['BidPackageForShow', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <ConfirmationModal\n      title={t('resendInvitationConfirmTitle')}\n      message={null}\n      confirmText={t('resendInvitation')}\n      renderLink={modal => (\n        <ResendIconWrapper>\n          <ResendIcon />\n          <ClickableText onClick={modal.open}>{t('resendInvitation')}</ClickableText>\n        </ResendIconWrapper>\n      )}\n      isWorking={loading}\n      onConfirm={async modal => {\n        try {\n          await sendInvitation({ variables: { bidInviteId } });\n          modal.close();\n          toast.success(t('resendInvitationSuccess'));\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default ResendInvitationLink;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\n\nimport { CONTACT_TITLE } from 'shared/constants/contact';\nimport { BID_INVITE_STATUS } from '__graphql__/globalTypes';\nimport getContactName, { getContactNameWithTitle } from 'shared/utils/getContactName';\nimport Avatar from 'shared/components/Avatar';\nimport Icon from 'shared/components/Icon';\n\nimport ResendInvitationLink from './ResendInvitationLink';\nimport { Text, Anchor, Contact, Info, IconAvatar, Status, StatusIcon } from './Styles';\n\nconst NameAvatar: React.FC<{ name: string | null }> = ({ name }) => {\n  if (name) {\n    return <Avatar name={name} />;\n  }\n  return (\n    <IconAvatar>\n      <Icon type=\"email\" top={4} left={4} />\n    </IconAvatar>\n  );\n};\n\nconst fragmentContactsList = gql`\n  fragment ContactsList_bidRequest on BidRequest {\n    id\n    bidInvites {\n      id\n      status\n      contact {\n        id\n        isPerson\n        title\n        firstName\n        lastName\n        email\n        phone\n        mobilePhone\n        fax\n      }\n    }\n  }\n`;\n\nexport interface ContactsListProps {\n  bidInvites: {\n    id: string;\n    status: BID_INVITE_STATUS;\n    contact: {\n      id: string;\n      isPerson: boolean;\n      title?: CONTACT_TITLE | null;\n      firstName?: string | null;\n      lastName?: string | null;\n      email?: string | null;\n      phone?: string | null;\n      mobilePhone?: string | null;\n      fax?: string | null;\n    };\n  }[];\n  isProjectClosed?: boolean;\n  showResendLink?: boolean;\n}\n\nconst ContactsList: React.FC<ContactsListProps> = ({\n  bidInvites,\n  isProjectClosed,\n  showResendLink,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <div>\n      {bidInvites.map(bidInvite => {\n        const { id, email, phone, mobilePhone, fax } = bidInvite.contact;\n        const { status } = bidInvite;\n        const name = getContactName(bidInvite.contact);\n        const nameWithTitle = getContactNameWithTitle(bidInvite.contact);\n\n        return (\n          <Contact key={id}>\n            <NameAvatar name={name} />\n            <Info>\n              {nameWithTitle && <Text>{nameWithTitle}</Text>}\n              {email && (\n                <Text>\n                  {`${t('companyInfo.email')}: `}\n                  <Anchor to={`mailto:${email}`}>{email}</Anchor>\n                </Text>\n              )}\n              {phone && (\n                <Text>\n                  {`${t('companyInfo.phone')}: `}\n                  <Anchor to={`tel:${phone}`}>{phone}</Anchor>\n                </Text>\n              )}\n              {mobilePhone && (\n                <Text>\n                  {`${t('companyInfo.mobilePhone')}: `}\n                  <Anchor to={`tel:${mobilePhone}`}>{mobilePhone}</Anchor>\n                </Text>\n              )}\n              {fax && (\n                <Text>\n                  {`${t('companyInfo.fax')}: `}\n                  <Anchor to={`tel:${fax}`}>{fax}</Anchor>\n                </Text>\n              )}\n              <Status>\n                <StatusIcon status={status} />\n                {t(`bidInviteStatus.${status}`)}\n              </Status>\n              {showResendLink && status !== BID_INVITE_STATUS.draft && !isProjectClosed && (\n                <ResendInvitationLink bidInviteId={bidInvite.id} />\n              )}\n            </Info>\n          </Contact>\n        );\n      })}\n    </div>\n  );\n};\n\nexport { fragmentContactsList };\nexport default ContactsList;\n","import { BUTTON_VARIANT } from 'shared/constants';\nimport { COMPANY_SIZE } from '__graphql__/globalTypes';\n\nimport { COLOR } from './styles';\n\nexport const getColorFromButtonVariant = (type: BUTTON_VARIANT): COLOR =>\n  ({\n    [BUTTON_VARIANT.danger]: COLOR.danger,\n    [BUTTON_VARIANT.primary]: COLOR.primary,\n    [BUTTON_VARIANT.success]: COLOR.success,\n  }[type]);\n\nexport const getHumanReadableCompanySize = (value: COMPANY_SIZE): string =>\n  ({\n    [COMPANY_SIZE.size_1_10]: '1-10',\n    [COMPANY_SIZE.size_11_50]: '11-50',\n    [COMPANY_SIZE.size_51_200]: '51-200',\n    [COMPANY_SIZE.size_201_500]: '201-500',\n    [COMPANY_SIZE.size_501_1000]: '501-1000',\n    [COMPANY_SIZE.size_1001_5000]: '1001-5000',\n    [COMPANY_SIZE.size_5000plus]: '5000+',\n  }[value]);\n","import React, { ButtonHTMLAttributes, AnchorHTMLAttributes } from 'react';\nimport styled, { css } from 'styled-components/macro';\nimport { Link, LinkProps } from 'react-router-dom';\n\nimport Spinner from 'shared/components/Spinner';\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport { omit } from 'shared/utils/javascript';\n\ninterface StyledButtonBaseProps {\n  linkTo?: LinkProps['to'];\n}\n\ninterface StyledButtonProps {\n  icon?: string;\n  iconSize?: number;\n  hollow: boolean;\n  working: boolean;\n  iconOnly: boolean;\n  disabled: boolean;\n  buttonColor: COLOR;\n}\n\nconst StyledButtonBase: React.FC<StyledButtonBaseProps &\n  StyledButtonProps &\n  (ButtonHTMLAttributes<HTMLButtonElement> | AnchorHTMLAttributes<HTMLAnchorElement>)> = ({\n  linkTo,\n  ...props\n}) => {\n  const buttonProps = omit(props, [\n    'icon',\n    'iconSize',\n    'hollow',\n    'working',\n    'iconOnly',\n    'buttonColor',\n  ]) as ButtonHTMLAttributes<HTMLButtonElement>;\n\n  if (linkTo) {\n    const linkProps = buttonProps as AnchorHTMLAttributes<HTMLAnchorElement>;\n    return <Link to={linkTo} {...linkProps} />;\n  }\n\n  // In this specific case we do not want to use an explicit type, instead we\n  // rely on the consumer of this component to set it.\n  // eslint-disable-next-line react/button-has-type\n  return <button {...buttonProps} />;\n};\n\nexport const StyledButton = styled(StyledButtonBase)<StyledButtonProps>`\n  display: inline-block;\n  height: 36px;\n  line-height: 34px;\n  padding: 0 18px;\n  vertical-align: middle;\n  white-space: nowrap;\n  text-align: center;\n  border-radius: 4px;\n  transition: all 0.1s;\n  appearance: none !important;\n  ${mixin.clickable}\n  ${font.bold}\n  ${props => (!props.icon || !props.iconSize) && font.size(14)}\n  ${props => (props.hollow ? hollowStyles : filledStyles)}\n  ${props =>\n    props.disabled &&\n    css`\n      opacity: 0.6;\n      ${props.working ? '' : disabledStyles()}\n      cursor: default;\n      /* Disable clicks also on non-<button> Buttons, such as <Button linkTo={...}> */\n      pointer-events: none;\n    `}\n\n  i {\n    position: relative;\n    top: -1px;\n    right: 4px;\n    margin-right: 7px;\n    display: inline-block;\n    vertical-align: middle;\n  }\n  ${props => props.iconOnly && iconOnlyStyles}\n`;\n\nconst iconOnlyStyles = css`\n  padding: 0 12px;\n  i {\n    right: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  position: relative;\n  right: 8px;\n  display: inline-block;\n  vertical-align: middle;\n  line-height: 1;\n`;\n\nconst disabledStyles = () => css`\n  color: ${COLOR.backgroundDark};\n  background: ${COLOR.backgroundMedium};\n  border: 0;\n`;\n\nconst filledStyles = (props: StyledButtonProps) => css`\n  color: #fff;\n  background: ${props.buttonColor};\n  border: 1px solid ${props.buttonColor};\n  ${!props.disabled &&\n    css`\n      &:hover,\n      &:focus {\n        background: ${mixin.darken(props.buttonColor, 0.15)};\n        border: 1px solid ${mixin.darken(props.buttonColor, 0.15)};\n      }\n      &:active {\n        background: ${mixin.lighten(props.buttonColor, 0.1)};\n        border: 1px solid ${mixin.lighten(props.buttonColor, 0.1)};\n      }\n    `}\n`;\n\nconst hollowStyles = (props: StyledButtonProps) => css`\n  color: ${COLOR.textMediumBlue};\n  background: #fff;\n  border: 1px solid ${COLOR.borderBlue};\n  ${!props.disabled &&\n    css`\n      &:hover,\n      &:focus {\n        border: 1px solid ${mixin.darken(COLOR.borderBlue, 0.15)};\n      }\n      &:active {\n        border: 1px solid ${COLOR.borderBlue};\n      }\n    `}\n`;\n","import React, {\n  ReactNode,\n  ButtonHTMLAttributes,\n  SyntheticEvent,\n  AnchorHTMLAttributes,\n} from 'react';\n\nimport { COLOR } from 'shared/utils/styles';\nimport Icon, { IconProps } from 'shared/components/Icon';\nimport { BUTTON_VARIANT } from 'shared/constants';\nimport { getColorFromButtonVariant } from 'shared/utils/enumHelpers';\n\nimport { StyledButton, StyledSpinner } from './Styles';\n\ninterface ButtonProps {\n  className?: string;\n  children?: ReactNode;\n  type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];\n  hollow?: boolean;\n  variant?: BUTTON_VARIANT;\n  icon?: IconProps['type'];\n  iconSize?: IconProps['size'];\n  disabled?: boolean;\n  working?: boolean;\n  onClick?: (event: SyntheticEvent) => void;\n  linkTo?: string;\n  target?: AnchorHTMLAttributes<HTMLAnchorElement>['target'];\n}\n\nconst Button: React.FC<ButtonProps & ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  className,\n  children,\n  type = 'button',\n  hollow = false,\n  variant = BUTTON_VARIANT.primary,\n  icon,\n  iconSize,\n  disabled = false,\n  working = false,\n  onClick,\n  linkTo,\n  ...otherProps\n}) => {\n  const buttonColor = getColorFromButtonVariant(variant);\n  const spinnerColor = hollow ? COLOR.textMediumBlue : COLOR.white;\n  return (\n    <StyledButton\n      className={className}\n      type={type}\n      hollow={hollow}\n      buttonColor={buttonColor}\n      disabled={disabled || working}\n      working={working}\n      onClick={(event: SyntheticEvent) => {\n        if (!disabled && !working && onClick) {\n          onClick(event);\n        }\n      }}\n      icon={icon}\n      iconSize={iconSize}\n      iconOnly={!children}\n      linkTo={linkTo}\n      {...otherProps}\n    >\n      {working && <StyledSpinner size={26} color={spinnerColor} />}\n      {!working && icon && <Icon type={icon} size={iconSize} />}\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport Form from 'shared/components/Form';\nimport { COLOR, mediaQueries } from 'shared/utils/styles';\n\ninterface ContainerProps {\n  fullHeight: boolean;\n}\n\nconst ContainerBase: React.FC<ContainerProps> = ({ fullHeight, ...rest }) => (\n  <Form.Element {...rest} />\n);\n\nexport const Container = styled(ContainerBase)<ContainerProps>`\n  /* display: flex will cause issues here on IE11 if we don't set height, so\n  let's only use it when fullHeight === true */\n  ${props =>\n    props.fullHeight &&\n    css`\n      display: flex;\n      flex-direction: column;\n      height: 100vh;\n    `}\n`;\n\ninterface FormElementsProps {\n  scrollable: boolean;\n}\n\nexport const FormElements = styled.div<FormElementsProps>`\n  flex: 1;\n  overflow-y: ${props => (props.scrollable ? 'auto' : 'visible')};\n\n  @media ${mediaQueries.mobile} {\n    padding: 20px;\n    padding-top: 50px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 50px;\n  }\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 30px 50px;\n  border-top: 1px solid ${COLOR.borderLight};\n  background: ${COLOR.backgroundLight};\n`;\n","import React, { ReactNode, SyntheticEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from 'shared/components/Button';\n\nimport { Container, FormElements, Buttons } from './Styles';\n\ninterface ModalFormBodyProps {\n  close: () => void;\n  working: boolean;\n  submitText?: string;\n  onSubmit?: (event: SyntheticEvent) => void;\n  useFullPageHeight?: boolean;\n  scrollable?: boolean;\n  children: ReactNode;\n  submitOnEnter?: boolean;\n}\n\nconst ModalFormBody: React.FC<ModalFormBodyProps> = ({\n  close,\n  working,\n  scrollable = true,\n  useFullPageHeight = true,\n  submitText = 'save',\n  onSubmit,\n  children,\n  submitOnEnter,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <Container fullHeight={useFullPageHeight}>\n      <FormElements scrollable={scrollable}>{children}</FormElements>\n      <Buttons>\n        <Button hollow onClick={close}>\n          {t('cancel')}\n        </Button>\n        <Button\n          type={onSubmit && !submitOnEnter ? 'button' : 'submit'}\n          name={onSubmit && 'submit'}\n          onClick={onSubmit}\n          working={working}\n        >\n          {t(submitText)}\n        </Button>\n      </Buttons>\n    </Container>\n  );\n};\n\nexport default ModalFormBody;\n","import { GraphQLError } from 'graphql';\n\nimport { isEmpty } from 'shared/utils/javascript';\n\n// We check whether data is empty as well because of a bug in Apollo:\n// https://github.com/apollographql/react-apollo/issues/1314\nexport const isLoading = (queryObj: { loading: boolean; data: {} | undefined }) =>\n  queryObj.loading || isEmpty(queryObj.data);\n\ntype MaybeLoading<T> = { loading: boolean; data: undefined | T } | { loading: false; data: T };\nexport const isDoneLoading = <T>(\n  queryObj: MaybeLoading<T>,\n): queryObj is { loading: false; data: T } => !isLoading(queryObj);\n\nexport const doesErrorMatchCode = (\n  error: { graphQLErrors: readonly GraphQLError[] },\n  code: string,\n): boolean => error?.graphQLErrors.some(gqlError => gqlError.extensions?.code === code);\n","import { createContext } from 'react';\n\ninterface DropdownMenuContextValue {\n  closeModal: () => void;\n  isTriggered: boolean;\n}\n\nconst DropdownMenuContext = createContext<DropdownMenuContextValue>({\n  closeModal: () => {},\n  isTriggered: false,\n});\n\nexport default DropdownMenuContext;\n","import React, { useContext } from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport DropdownAction, { DropdownActionProps } from 'shared/components/DropdownAction';\nimport { COLOR, mediaQueries } from 'shared/utils/styles';\nimport { As } from 'shared/constants/styledComponents';\n\nimport DropdownMenuContext from './DropdownMenuContext';\n\ninterface ActionProps {\n  danger?: boolean;\n  as?: As;\n}\n\nconst ActionBase: React.FC<DropdownActionProps & ActionProps> = ({\n  onClick,\n  danger: _,\n  as,\n  ...props\n}) => {\n  const { closeModal, isTriggered } = useContext(DropdownMenuContext);\n\n  const handleClick: DropdownActionProps['onClick'] = (...args) => {\n    closeModal();\n    if (onClick) {\n      onClick(...args);\n    }\n  };\n\n  return (\n    <DropdownAction {...props} forwardedAs={as} isDisplayed={isTriggered} onClick={handleClick} />\n  );\n};\n\n// Cast `ActionBase` as `any` so that Typescript doesn't go crazy when receiving\n// props that don't belong to `ActionBase` in conjunction with the `as` prop\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Action = styled(ActionBase as any)<ActionProps>`\n  color: ${props => (props.danger ? COLOR.danger : COLOR.textDark)};\n\n  ${props =>\n    props.theme.isLarge &&\n    css`\n      @media ${mediaQueries.desktop} {\n        padding: 10px 20px;\n      }\n    `}\n`;\n\nexport default Action;\n","import styled from 'styled-components/macro';\n\nimport DropdownCard, { Card as DropdownCardInternal } from 'shared/components/DropdownCard';\nimport { mediaQueries } from 'shared/utils/styles';\n\nexport const StyledContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledDropdownCard = styled(DropdownCard)`\n  ${DropdownCardInternal} {\n    @media ${mediaQueries.desktop} {\n      width: ${props => (props.theme.isLarge ? '320px' : 'auto')};\n    }\n  }\n`;\n","import React, { useCallback, useState, useRef } from 'react';\nimport { ThemeProvider } from 'styled-components/macro';\n\nimport useClickOutside from 'shared/hooks/useClickOutside';\nimport Portal from 'shared/components/Portal';\nimport DropdownCardContent from 'shared/components/DropdownCardContent';\n\nimport Action from './Action';\nimport DropdownMenuContext from './DropdownMenuContext';\nimport { StyledContainer, StyledDropdownCard } from './Styles';\n\nconst getTheme = ({ isLarge }: { isLarge: boolean }) => (parentTheme: object) => ({\n  ...parentTheme,\n  isLarge,\n});\n\ninterface RenderTriggerProps {\n  isTriggered: boolean;\n  toggleTrigger: () => void;\n}\n\ninterface Props {\n  className?: string;\n  children: React.ReactNode;\n  isLarge?: boolean;\n  renderTrigger: (props: RenderTriggerProps) => React.ReactElement;\n}\n\nconst Container: React.FC<Props> = ({ className, children, isLarge = false, renderTrigger }) => {\n  const triggerRef = useRef<HTMLDivElement>(null);\n  const cardRef = useRef<HTMLDivElement>(null);\n  const refs = useRef([triggerRef, cardRef]);\n  const [isTriggered, setIsTriggered] = useState(false);\n  const toggleTrigger = () => setIsTriggered(!isTriggered);\n  const closeModal = () => setIsTriggered(false);\n  const handleClickOutside = useCallback(() => setIsTriggered(false), []);\n\n  useClickOutside({ refs: refs.current, onClickOutside: handleClickOutside });\n\n  return (\n    <DropdownMenuContext.Provider value={{ closeModal, isTriggered }}>\n      <div className={className}>\n        <StyledContainer>\n          <div ref={triggerRef}>{renderTrigger({ isTriggered, toggleTrigger })}</div>\n          <ThemeProvider theme={getTheme({ isLarge })}>\n            <Portal>\n              <StyledDropdownCard ref={cardRef} isOpen={isTriggered} triggerRef={triggerRef}>\n                <DropdownCardContent>{children}</DropdownCardContent>\n              </StyledDropdownCard>\n            </Portal>\n          </ThemeProvider>\n        </StyledContainer>\n      </div>\n    </DropdownMenuContext.Provider>\n  );\n};\n\nexport default {\n  Container,\n  Action,\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport Icon from 'shared/components/Icon';\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport Button from 'shared/components/Button';\nimport { COLOR, font, mixin, zIndexValues, mediaQueries } from 'shared/utils/styles';\n\nconst rowHeightMobile = 60;\nconst rowHeightDesktop = 43;\nconst iconWidth = 28;\nconst iconHorizontalMargin = 20;\nconst itemActionsTriggerSize = 24;\nexport const transitionTime = 200;\n\nexport const DocumentsTableContainer = styled.div`\n  position: relative;\n`;\n\ninterface StyledProgressProps {\n  paddingTop: number;\n}\n\nexport const StyledProgress = styled.div<StyledProgressProps>`\n  z-index: ${zIndexValues.documentsTableProgress};\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  padding: ${props => props.paddingTop}px 40px 0;\n  text-align: center;\n  background-color: rgba(255, 255, 255, 0.85);\n`;\n\ninterface ProgressLabelProps {\n  fontSize?: number;\n}\n\nexport const ProgressLabel = styled.div<ProgressLabelProps>`\n  padding-bottom: 6px;\n  word-wrap: break-word;\n  ${font.medium};\n  ${props => font.size(props.fontSize || 15)};\n`;\n\ninterface ProgressBarProps {\n  percentComplete: number;\n}\n\nexport const ProgressBar = styled.div<ProgressBarProps>`\n  display: inline-block;\n  margin-bottom: 6px;\n  width: 25%;\n  height: 20px;\n  border-radius: 4px;\n  box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.1);\n  background: linear-gradient(\n    to right,\n    ${COLOR.primary} 0%,\n    ${COLOR.primary} ${props => props.percentComplete || 0}%,\n    ${COLOR.backgroundLight} ${props => props.percentComplete || 0}%,\n    ${COLOR.backgroundLight} 100%\n  );\n`;\n\nexport const StyledTopControls = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin: 0 -5px;\n  padding-bottom: 10px;\n`;\n\nexport const TopControlsButton = styled(({ isLink, ...props }) =>\n  isLink ? <Button as=\"a\" {...props} /> : <Button {...props} />,\n)`\n  margin: 0 5px 10px 5px;\n  height: 28px;\n  line-height: 26px;\n  padding: 0 10px;\n  ${font.size(12)}\n  i {\n    margin-right: 2px;\n  }\n`;\n\nexport const TopControlsDropdownTrigger = styled(Button)`\n  height: 28px;\n  width: 28px;\n  margin: 0 5px 10px 5px;\n  padding: 0;\n  line-height: 28px;\n\n  i {\n    margin-right: 0;\n  }\n`;\n\nexport const StyledDocumentsTable = styled.div`\n  position: relative;\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  background: #fff;\n\n  /* Don't let content's square corners go over our rounded corners */\n  overflow: hidden;\n`;\n\ninterface MobileContentContainerProps {\n  currentlyVisibleRows: number;\n}\n\nexport const MobileContentContainer = styled.div<MobileContentContainerProps>`\n  height: ${props => props.currentlyVisibleRows * rowHeightMobile}px;\n  overflow: hidden;\n  transition: height ${transitionTime}ms;\n\n  /* Capture MobileRowsContainer */\n  position: relative;\n`;\n\nexport const NoResultsReadOnly = styled.div`\n  padding: 50px 0;\n  text-align: center;\n  color: ${COLOR.textMedium};\n  ${font.size(17)}\n  i {\n    margin-right: 13px;\n    font-size: 20px;\n  }\n`;\n\nexport const NoResultsUploadable = styled.div`\n  padding: 50px 0;\n  text-align: center;\n  color: ${COLOR.textMedium};\n  background: ${COLOR.backgroundLight};\n  ${font.size(16)}\n  &:focus {\n    outline: none;\n  }\n  i {\n    margin-right: 15px;\n    font-size: 20px;\n  }\n`;\n\nexport const RootDropzoneArea = styled.div`\n  padding: 20px 0;\n  text-align: center;\n  color: ${COLOR.textMedium};\n  background: ${COLOR.backgroundLight};\n  ${font.size(15)}\n  &:focus {\n    outline: none;\n  }\n  i {\n    margin-right: 10px;\n  }\n`;\n\nexport const StyledHeaders = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${COLOR.borderLight};\n`;\n\ninterface HeaderProps {\n  percentWidth: number;\n}\n\nexport const Header = styled.div<HeaderProps>`\n  padding: 14px 12px 14px 17px;\n  line-height: 1.2;\n  color: ${COLOR.textMedium};\n  width: ${props => props.percentWidth}%;\n  ${mixin.truncateText}\n  ${font.size(13)};\n`;\n\nexport const IconContainer = styled.div`\n  position: relative;\n  padding-left: ${iconWidth}px;\n  ${mixin.truncateText}\n`;\n\ninterface StyledIconProps {\n  nestingLevel: number;\n}\n\nexport const StyledIcon = styled(Icon)<StyledIconProps>`\n  @media ${mediaQueries.mobile} {\n    padding-left: 17px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    transform: translateX(${props => props.nestingLevel * 17}px);\n  }\n`;\n\nexport const DropArea = styled.div`\n  &:focus {\n    outline: none;\n  }\n`;\n\ninterface StyledDragHighlightZoneProps {\n  isHighlighted: boolean;\n}\n\nexport const StyledDragHighlightZone = styled.div<StyledDragHighlightZoneProps>`\n  ${props => (props.isHighlighted ? highlightStyles : '')};\n`;\n\nconst highlightStyles = `\n  background: ${mixin.rgba(COLOR.primary, 0.08)};\n  & > div {\n    background: none;\n  }\n`;\n\nexport interface RowProps {\n  index?: number;\n  isAtTopOfList?: boolean;\n  isFolderAndOpen?: boolean;\n  isShown?: boolean;\n  isAboveOthers?: boolean;\n}\n\nexport const Row = styled.div<RowProps>`\n  position: relative;\n  width: 100%;\n  border-top: 1px solid ${COLOR.borderLight};\n  color: ${COLOR.textDark};\n  background-color: white;\n  ${mixin.clickable}\n  ${font.size(13)}\n\n  ${StyledHeaders} + & {\n    border-top: 0;\n  }\n\n  @media ${mediaQueries.mobile} {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: ${rowHeightMobile}px;\n    opacity: 0;\n    transform: translateY(${props => (props.index || 0) * rowHeightMobile}px);\n    transition: transform ${transitionTime}ms, opacity ${transitionTime}ms;\n    pointer-events: none;\n\n    ${props =>\n      props.isAtTopOfList &&\n      css`\n        border-top: 0;\n      `}\n\n    ${props =>\n      props.isFolderAndOpen &&\n      css`\n        background: ${COLOR.backgroundLight};\n        ${font.bold};\n        ${font.size(15)};\n\n        ${ItemActions} {\n          display: none;\n        }\n      `}\n\n    ${props =>\n      props.isShown &&\n      css`\n        opacity: 1;\n        pointer-events: auto;\n      `}\n\n    ${props =>\n      props.isAboveOthers &&\n      !props.isFolderAndOpen &&\n      css`\n        z-index: ${zIndexValues.visibleMobileDocumentsTableRow};\n      `}\n\n    ${props =>\n      props.isAboveOthers &&\n      props.isFolderAndOpen &&\n      css`\n        z-index: ${zIndexValues.mainVisibleMobileDocumentsTableRow};\n      `}\n  }\n\n  @media ${mediaQueries.desktop} {\n    height: ${rowHeightDesktop}px;\n  }\n`;\n\nexport const MobileRowsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\ninterface StyledFolderProps {\n  nestingLevel: number;\n}\n\nexport const StyledFolder = styled.div<StyledFolderProps>`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding-left: ${props => props.nestingLevel * 17}px;\n  ${mixin.clickable};\n`;\n\nexport const FolderName = styled.div`\n  width: 100%;\n  padding-left: 17px;\n  ${mixin.truncateText}\n`;\n\nexport const StyledFile = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const FileColumns = styled.div`\n  display: flex;\n  width: calc(100% - 17px);\n\n  @media ${mediaQueries.mobile} {\n    flex-direction: column;\n    padding-right: ${iconWidth + iconHorizontalMargin * 2}px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    flex-direction: row;\n  }\n`;\n\ninterface FileColumnNameProps {\n  nestingLevel: number;\n}\n\nexport const FileColumnName = styled.a<FileColumnNameProps>`\n  padding-left: 17px;\n  user-select: none;\n  ${mixin.link()};\n  ${mixin.truncateText};\n\n  @media ${mediaQueries.desktop} {\n    width: 55%;\n    padding-right: ${props => props.nestingLevel * 17}px;\n    transform: translateX(${props => props.nestingLevel * 17}px);\n  }\n`;\n\nexport const FileColumnSize = styled.div`\n  width: 10%;\n  padding-left: 17px;\n  text-align: right;\n  pointer-events: none;\n  ${mixin.truncateText}\n\n  @media ${mediaQueries.mobile} {\n    display: none;\n  }\n`;\n\nexport const FileColumnLast = styled.div`\n  padding-left: 17px;\n  pointer-events: none;\n  ${mixin.truncateText}\n\n  @media ${mediaQueries.mobile} {\n    margin-top: 4px;\n    color: ${COLOR.textMedium};\n  }\n\n  @media ${mediaQueries.desktop} {\n    width: 30%;\n    padding-right: 60px;\n  }\n`;\n\nexport const ItemActions = styled(DropdownMenu.Container)`\n  position: absolute;\n  top: calc(50% - ${itemActionsTriggerSize / 2}px);\n  right: ${iconHorizontalMargin}px;\n  display: inline-block;\n`;\n\nexport const ItemActionsAction = DropdownMenu.Action;\n\nexport const ItemActionsTrigger = styled(Button)`\n  height: ${itemActionsTriggerSize}px;\n  width: ${itemActionsTriggerSize}px;\n  line-height: 22px;\n  padding: 0;\n`;\n","import React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { StyledProgress, ProgressLabel, ProgressBar } from './Styles';\n\ninterface Progress {\n  isUploading: boolean;\n  uploadedCount: number;\n  totalCount: number;\n  currentFileProgress: number;\n  currentFileName: string;\n}\n\ninterface Props {\n  progress: Progress;\n}\n\nconst ProgressBars: React.FC<Props> = ({ progress }) => {\n  const { t } = useTranslation();\n  const progressRef = useRef<HTMLDivElement>(null);\n\n  if (!progress.isUploading) {\n    return null;\n  }\n\n  const calcProgressPaddingTop = () =>\n    progressRef.current && progressRef.current.getBoundingClientRect().top < 50\n      ? Math.abs(progressRef.current.getBoundingClientRect().top) + 50\n      : 50;\n\n  return (\n    <StyledProgress ref={progressRef} paddingTop={calcProgressPaddingTop()}>\n      <ProgressLabel>{t('documentsTable.uploadProgress', progress)}</ProgressLabel>\n      <ProgressBar percentComplete={progress.currentFileProgress} />\n      <ProgressLabel fontSize={13}>\n        {progress.currentFileProgress}% {progress.currentFileName || ''}\n      </ProgressLabel>\n    </StyledProgress>\n  );\n};\n\nexport default ProgressBars;\n","import { createContext } from 'react';\n\nimport { DocumentsTable_documents } from './__graphql__/DocumentsTable_documents';\nimport Item from './classes/Item';\nimport { HandleFilesDrop } from './hooks/useFilesDropHandler';\nimport { MobileNavigation } from './hooks/useMobileNavigation';\nimport { MoveHandler } from './utils/getMoveHandler';\n\ninterface DocumentsTableContextProps {\n  documents: DocumentsTable_documents[];\n  isReadOnly: boolean;\n  downloadURL: (item: Item) => string;\n  handleFilesDrop: HandleFilesDrop;\n  handleFileOrFolderMove: MoveHandler;\n  refetch: () => Promise<unknown>;\n  mobileNavigation: MobileNavigation;\n}\n\nconst DocumentsTableContext = createContext<DocumentsTableContextProps>({\n  documents: [],\n  isReadOnly: false,\n  downloadURL: () => '',\n  handleFilesDrop: () => {},\n  handleFileOrFolderMove: () => {},\n  refetch: async () => {},\n  mobileNavigation: {\n    getIsOpen: () => false,\n    toggleFolder: () => {},\n    getIsCurrentlySelected: () => false,\n    currentlyVisibleRows: 0,\n    setCurrentlyVisibleRows: () => {},\n    rootId: '',\n  },\n});\n\nexport default DocumentsTableContext;\n","import { useEffect, useCallback } from 'react';\n\nimport { KEY_CODES, KEY_CODE_VALUES } from 'shared/constants';\n\nconst useKeyboardEventCallback = (\n  element: Node | Window,\n  keyCode: KEY_CODES,\n  callback: (event: KeyboardEvent) => void,\n  { condition = true },\n): void => {\n  const handleEvent = useCallback(\n    event => {\n      if (event.keyCode === KEY_CODE_VALUES[keyCode]) {\n        callback(event);\n      }\n    },\n    [keyCode, callback],\n  );\n\n  useEffect(() => {\n    if (condition) {\n      element.addEventListener('keydown', handleEvent);\n    }\n\n    return () => {\n      element.removeEventListener('keydown', handleEvent);\n    };\n  }, [condition, element, handleEvent]);\n};\n\nexport default useKeyboardEventCallback;\n","import { useCallback, useEffect, useContext, Ref, useRef } from 'react';\n\nimport { KEY_CODES } from 'shared/constants';\nimport ModalsContext from 'shared/contexts/modalsContext';\nimport useKeyboardEventCallback from 'shared/hooks/useKeyboardEventCallback';\n\nexport interface ModalStateData {\n  isOpen: boolean;\n  openModal: () => void;\n  closeModal: () => void;\n  isActive: boolean;\n}\n\nconst useModalState = (\n  isOpenProp: boolean | undefined,\n  ref: Ref<HTMLElement>,\n  onOpen: () => void = () => {},\n  onClose: () => void = () => {},\n): ModalStateData => {\n  const { getIsActive, setAsActive, setAsInactive, getIsOpen } = useContext(ModalsContext);\n  const isOpen = getIsOpen(ref);\n  const isActive = getIsActive(ref);\n  const upToDateSetAsInactive = useRef(setAsInactive);\n\n  upToDateSetAsInactive.current = setAsInactive;\n\n  const openModal = () => {\n    setAsActive(ref);\n    onOpen();\n  };\n\n  const closeModal = useCallback(() => {\n    if (isActive) {\n      setAsInactive(ref);\n      onClose();\n    }\n  }, [isActive, setAsInactive, ref, onClose]);\n\n  useEffect(() => {\n    if (isOpenProp) {\n      setAsActive(ref);\n    }\n    // Only run when the isOpenProp changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isOpenProp]);\n\n  useEffect(() => {\n    return () => {\n      upToDateSetAsInactive.current(ref);\n    };\n    // Run when unmounting\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useKeyboardEventCallback(window, KEY_CODES.escape, closeModal, { condition: isOpen });\n\n  return {\n    isOpen: isOpenProp === undefined ? isOpen : isOpenProp,\n    openModal,\n    closeModal,\n    isActive,\n  };\n};\n\nexport default useModalState;\n","import styled, { css } from 'styled-components/macro';\nimport { TransitionStatus } from 'react-transition-group/Transition';\n\nimport Icon from 'shared/components/Icon';\nimport { COLOR, mixin, zIndexValues, mediaQueries, sizes } from 'shared/utils/styles';\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport { isEnter, isExited } from 'shared/utils/transitionStates';\n\nexport const TRANSITION_DURATION = 200;\n\ninterface OverlayProps {\n  isActive: boolean;\n  transitionState: TransitionStatus;\n}\n\nexport const Overlay = styled.div<OverlayProps>`\n  z-index: ${props =>\n    props.isActive ? zIndexValues.modalOverlay : zIndexValues.modalOverlayInactive};\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  background: ${COLOR.overlay};\n  transition: opacity ${TRANSITION_DURATION}ms;\n  will-change: opacity;\n  ${props =>\n    isEnter(props.transitionState)\n      ? css`\n          opacity: 1;\n        `\n      : css`\n          opacity: 0;\n          pointer-events: none;\n        `}\n`;\n\ninterface LayoutProps {\n  isActive: boolean;\n  transitionState: TransitionStatus;\n  variant: MODAL_VARIANTS;\n}\n\nexport const Layout = styled.div<LayoutProps>`\n  z-index: ${props => (props.isActive ? zIndexValues.modal : zIndexValues.modalInactive)};\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  ${props => overlayStyles[props.variant]}\n  ${mixin.scrollableY}\n  ${props =>\n    isExited(props.transitionState) &&\n    css`\n      opacity: 0;\n      pointer-events: none;\n    `}\n`;\n\nconst overlayStyles = {\n  [MODAL_VARIANTS.center]: css<LayoutProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    @media ${mediaQueries.mobile} {\n      padding: 10px;\n    }\n\n    @media ${mediaQueries.desktop} {\n      padding: 50px;\n    }\n  `,\n  [MODAL_VARIANTS.aside]: css<LayoutProps>``,\n  [MODAL_VARIANTS.fullSize]: css<LayoutProps>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 25px;\n  `,\n  [MODAL_VARIANTS.aside]: css<LayoutProps>``,\n};\n\ninterface CardProps {\n  transitionState: TransitionStatus;\n  variant: MODAL_VARIANTS;\n}\n\nexport const Card = styled.div<CardProps>`\n  position: relative;\n  display: block;\n  width: 100%;\n  background: #fff;\n  transition: transform ${TRANSITION_DURATION}ms, opacity ${TRANSITION_DURATION}ms;\n  ${props => cardStyles[props.variant]}\n`;\n\nconst cardStyles = {\n  [MODAL_VARIANTS.center]: css<CardProps>`\n    max-width: 600px;\n    vertical-align: middle;\n    will-change: transform, opacity;\n    ${mixin.boxShadowMedium}\n    ${props =>\n      isEnter(props.transitionState)\n        ? css`\n            opacity: 1;\n            transform: translateY(0);\n          `\n        : css`\n            opacity: 0;\n            transform: translateY(50%);\n          `}\n  `,\n  [MODAL_VARIANTS.aside]: css<CardProps>`\n    min-height: 100vh;\n    max-width: 500px;\n    margin-left: auto;\n    box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.15);\n    will-change: transform;\n    ${props =>\n      isEnter(props.transitionState)\n        ? css`\n            transform: translateX(0);\n          `\n        : css`\n            transform: translateX(100%);\n          `}\n  `,\n  [MODAL_VARIANTS.fullSize]: css<CardProps>`\n    /* Same as Page component */\n    min-width: ${sizes.minViewportWidth}px;\n    max-width: 1440px;\n    padding: 50px;\n    @media (max-width: 1200px) {\n      padding: 25px 30px 50px;\n    }\n\n    height: calc(100vh - 50px);\n    vertical-align: middle;\n    will-change: transform, opacity;\n    ${mixin.boxShadowMedium};\n    ${mixin.scrollableY};\n    ${props =>\n      isEnter(props.transitionState)\n        ? css`\n            opacity: 1;\n            transform: translateY(0);\n          `\n        : css`\n            opacity: 0;\n            transform: translateY(50%);\n          `}\n  `,\n};\n\ninterface CloseIconProps {\n  variant: MODAL_VARIANTS;\n}\n\nexport const CloseIcon = styled(Icon)<CloseIconProps>`\n  position: absolute;\n  font-size: 25px;\n  color: ${COLOR.textDark};\n  z-index: ${zIndexValues.modalCloseIcon};\n  ${mixin.clickable}\n  ${props => closeIconStyles[props.variant]}\n`;\n\nconst closeIconStyles = {\n  [MODAL_VARIANTS.center]: css`\n    top: 8px;\n    right: 10px;\n    padding: 7px 7px 0;\n  `,\n  [MODAL_VARIANTS.aside]: css`\n    top: 10px;\n    width: 40px;\n    height: 40px;\n    padding-top: 8px;\n    border-radius: 40px;\n    text-align: center;\n    background: #fff;\n    opacity: 0.5;\n\n    @media ${mediaQueries.mobile} {\n      left: 10px;\n    }\n\n    @media ${mediaQueries.desktop} {\n      left: -50px;\n    }\n  `,\n  [MODAL_VARIANTS.fullSize]: css`\n    top: 8px;\n    right: 10px;\n    padding: 7px 7px 0;\n  `,\n};\n","import React, { ReactElement, ReactNode } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport { isEntered, isExiting, isExited } from 'shared/utils/transitionStates';\nimport Portal from 'shared/components/Portal';\n\nimport { Overlay, Layout, Card, CloseIcon, TRANSITION_DURATION } from './Styles';\n\nexport interface ModalContentProps {\n  className?: string;\n  isOpen: boolean;\n  openModal: () => void;\n  closeModal: () => void;\n  isActive: boolean;\n  variant?: MODAL_VARIANTS;\n  renderLink?: ({ open }: { open: () => void }) => ReactNode;\n  renderContent: ({\n    close,\n    isReadyToLoad,\n    isActive,\n  }: {\n    close: () => void;\n    isReadyToLoad: boolean;\n    isActive: boolean;\n  }) => ReactNode;\n  modalCardRef: React.Ref<HTMLDivElement>;\n}\n\nconst ModalContent = ({\n  className,\n  isOpen,\n  openModal,\n  closeModal,\n  isActive,\n  variant = MODAL_VARIANTS.center,\n  renderLink = () => null,\n  renderContent,\n  modalCardRef,\n}: ModalContentProps): ReactElement => (\n  <>\n    {renderLink({ open: openModal })}\n    <Portal>\n      <Transition in={isOpen} timeout={TRANSITION_DURATION}>\n        {state => (\n          <>\n            <Overlay transitionState={state} isActive={isActive || isExiting(state)} />\n            <Layout\n              data-testid=\"modal-layout\"\n              data-test-is-active={isActive}\n              variant={variant}\n              transitionState={state}\n              isActive={isActive || isExiting(state)}\n            >\n              <Card\n                ref={modalCardRef}\n                className={className}\n                variant={variant}\n                transitionState={state}\n              >\n                {!isExited(state) && (\n                  <CloseIcon\n                    data-cy-close-modal\n                    data-testid=\"modal-close-button\"\n                    type=\"close\"\n                    variant={variant}\n                    onClick={closeModal}\n                  />\n                )}\n                {!isExited(state) &&\n                  renderContent({\n                    close: closeModal,\n                    isReadyToLoad: isEntered(state) || isExiting(state),\n                    isActive,\n                  })}\n              </Card>\n            </Layout>\n          </>\n        )}\n      </Transition>\n    </Portal>\n  </>\n);\n\nexport default ModalContent;\n","import React, { useRef, ReactElement } from 'react';\n\nimport useModalState, { ModalStateData } from './useModalState';\nimport ModalContent, { ModalContentProps } from './ModalContent';\n\ninterface OwnModalProps {\n  className?: string;\n  isOpen?: boolean;\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\ntype ExpectedModalContentProps = Pick<\n  ModalContentProps,\n  Exclude<keyof ModalContentProps, keyof ModalStateData | 'modalCardRef'>\n>;\n\nexport type ModalProps = OwnModalProps & ExpectedModalContentProps;\n\nconst Modal = ({\n  className,\n  isOpen: isOpenProp,\n  onOpen = () => {},\n  onClose = () => {},\n  ...props\n}: ModalProps): ReactElement => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const modalStateData = useModalState(isOpenProp, modalRef, onOpen, onClose);\n\n  return (\n    <ModalContent className={className} modalCardRef={modalRef} {...modalStateData} {...props} />\n  );\n};\n\nexport { ModalContent, useModalState };\nexport default Modal;\n","import styled from 'styled-components/macro';\n\nimport { ModalContent } from 'shared/components/Modal';\nimport Button from 'shared/components/Button';\nimport { font } from 'shared/utils/styles';\n\nexport const StyledModalContent = styled(ModalContent)`\n  padding: 45px 50px 50px;\n`;\n\nexport const Title = styled.div`\n  padding-bottom: 25px;\n  ${font.bold}\n  ${font.size(24)}\n  line-height: 1.5;\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 5px 20px 0 0;\n`;\n","import React, { useRef, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FormikProps, FormikConfig } from 'formik';\n\nimport { MODAL_VARIANTS, BUTTON_VARIANT } from 'shared/constants';\nimport { useModalState, ModalProps } from 'shared/components/Modal';\nimport Form from 'shared/components/Form';\n\nimport { StyledModalContent, Title, StyledButton } from './Styles';\n\nexport interface InputModalProps<FormValues> {\n  className?: string;\n  title: string;\n  confirmText?: string;\n  cancelText?: string;\n  submitButtonVariant?: BUTTON_VARIANT;\n  onConfirm?: () => void;\n  onCancel?: () => void;\n  renderLink: ModalProps['renderLink'];\n  renderContent: (formData: FormikProps<FormValues>) => ReactNode;\n  getFormOptions: (\n    confirm: () => void,\n  ) => FormikConfig<FormValues> & { initialValues?: Required<FormValues> };\n  isWorking?: boolean;\n}\n\ntype ComponentReturnType<Props> = ReturnType<React.FC<Props>>;\n\nconst InputModal = <FormValues extends object>({\n  className = '',\n  title,\n  confirmText = 'confirm',\n  cancelText = 'cancel',\n  submitButtonVariant = BUTTON_VARIANT.primary,\n  onConfirm = () => {},\n  onCancel = () => {},\n  renderLink,\n  renderContent,\n  getFormOptions,\n  isWorking,\n}: InputModalProps<FormValues>): ComponentReturnType<InputModalProps<FormValues>> => {\n  const { t } = useTranslation();\n  const modalRef = useRef<HTMLDivElement>(null);\n  const { isOpen, openModal, closeModal, isActive } = useModalState(undefined, modalRef);\n\n  const handleCancel = () => {\n    closeModal();\n    onCancel();\n  };\n\n  const confirm = () => {\n    closeModal();\n    onConfirm();\n  };\n\n  const formOptions = getFormOptions(confirm);\n\n  return (\n    <StyledModalContent\n      className={className}\n      isOpen={isOpen}\n      openModal={openModal}\n      closeModal={handleCancel}\n      isActive={isActive}\n      variant={MODAL_VARIANTS.center}\n      renderLink={renderLink}\n      modalCardRef={modalRef}\n      renderContent={() => (\n        <>\n          <Title>{t(title)}</Title>\n          <Form<FormValues> {...formOptions}>\n            {formData => (\n              <>\n                <Form.Element>\n                  {renderContent(formData)}\n                  <div>\n                    <StyledButton hollow onClick={handleCancel} data-testid=\"cancel-button\">\n                      {t(cancelText)}\n                    </StyledButton>\n                    <StyledButton\n                      type=\"submit\"\n                      variant={submitButtonVariant}\n                      working={isWorking}\n                      data-cy-button-name=\"confirm\"\n                      data-testid=\"confirm-button\"\n                    >\n                      {t(confirmText)}\n                    </StyledButton>\n                  </div>\n                </Form.Element>\n              </>\n            )}\n          </Form>\n        </>\n      )}\n    />\n  );\n};\n\nexport default InputModal;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Form from 'shared/components/Form';\nimport Field from 'shared/components/Field';\n\nimport InputModal, { InputModalProps } from '../InputModal';\n\ninterface FormValues {\n  name?: string;\n}\n\ninterface Props {\n  name?: string;\n  formLabel: string;\n  renderLink: InputModalProps<FormValues>['renderLink'];\n  onSubmit: (name: string) => void;\n}\n\nconst NameFormModal: React.FC<Props> = ({ name, formLabel, renderLink, onSubmit }) => {\n  const { t } = useTranslation();\n\n  const getFormOptions: InputModalProps<FormValues>['getFormOptions'] = confirm => ({\n    initialValues: { name: name || '' },\n    validations: {\n      name: [Form.is.required(), Form.is.maxLength(50)],\n    },\n    onSubmit: values => {\n      onSubmit((values.name || '').trim());\n      confirm();\n    },\n  });\n\n  return (\n    <InputModal\n      getFormOptions={getFormOptions}\n      title={formLabel}\n      renderLink={renderLink}\n      renderContent={() => <Field.Input label={t('documentsTable.name')} name=\"name\" autoFocus />}\n    />\n  );\n};\n\nexport default NameFormModal;\n","import React, { useContext } from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport DocumentsTableContext from './DocumentsTableContext';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  className?: string;\n  targetFolder: Folder;\n  inputProps: React.InputHTMLAttributes<HTMLInputElement> & { webkitdirectory?: string };\n  children: React.ReactNode;\n}\n\nconst DropzoneLink: React.FC<Props> = ({ className, targetFolder, inputProps, children }) => {\n  const { handleFilesDrop } = useContext(DocumentsTableContext);\n\n  return (\n    <Dropzone onDrop={files => handleFilesDrop(files, targetFolder)}>\n      {({ getRootProps, getInputProps }) => (\n        <span className={className} {...getRootProps()}>\n          <input {...getInputProps()} {...inputProps} />\n          {children}\n        </span>\n      )}\n    </Dropzone>\n  );\n};\n\nexport default DropzoneLink;\n","import React, { useContext, FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\n\nimport DropdownMenu from '../DropdownMenu';\n\nimport DocumentsTableContext from './DocumentsTableContext';\nimport NameFormModal from './NameFormModal';\nimport DropzoneLink from './DropzoneLink';\nimport { StyledTopControls, TopControlsDropdownTrigger, TopControlsButton } from './Styles';\nimport Folder from './classes/Folder';\n\ninterface TopControlsProps {\n  rootFolder: Folder;\n  printPath?: string;\n}\n\nconst TopControls: FC<TopControlsProps> = ({ rootFolder, printPath }) => {\n  const { t } = useTranslation();\n  const { isMobile, isDesktop } = useContext(QueryMatchesContext);\n\n  const { handleFilesDrop, isReadOnly, refetch, downloadURL } = useContext(DocumentsTableContext);\n\n  return (\n    <StyledTopControls>\n      <div>\n        <TopControlsButton icon=\"refresh\" onClick={refetch} />\n        {!rootFolder.isEmpty() && (\n          <>\n            {printPath && (\n              <TopControlsButton isLink icon=\"printer\" href={printPath} target=\"_blank\" />\n            )}\n            <TopControlsButton\n              isLink\n              icon=\"download\"\n              data-cy-button-name=\"downloadAll\"\n              href={downloadURL(rootFolder)}\n            >\n              {t('documentsTable.downloadAll')}\n            </TopControlsButton>\n          </>\n        )}\n      </div>\n      {!isReadOnly && isMobile && (\n        <DropdownMenu.Container\n          renderTrigger={({ isTriggered, toggleTrigger }) => (\n            <TopControlsDropdownTrigger\n              hollow\n              icon={isTriggered ? 'chevron-up' : 'chevron-down'}\n              iconSize={18}\n              onClick={toggleTrigger}\n            />\n          )}\n        >\n          <DropdownMenu.Action\n            forwardedAs={DropzoneLink}\n            targetFolder={rootFolder}\n            inputProps={{}}\n            handleFilesDrop={handleFilesDrop}\n          >\n            {t('documentsTable.uploadFiles')}\n          </DropdownMenu.Action>\n          <DropdownMenu.Action\n            forwardedAs={DropzoneLink}\n            targetFolder={rootFolder}\n            inputProps={{ webkitdirectory: '' }}\n            handleFilesDrop={handleFilesDrop}\n          >\n            {t('documentsTable.uploadFolder')}\n          </DropdownMenu.Action>\n          <NameFormModal\n            formLabel=\"documentsTable.createFolder\"\n            onSubmit={newFolderName => rootFolder.createFolderAndSave(newFolderName)}\n            renderLink={modal => (\n              <DropdownMenu.Action onClick={modal.open}>\n                {t('documentsTable.createFolder')}\n              </DropdownMenu.Action>\n            )}\n          />\n        </DropdownMenu.Container>\n      )}\n      {!isReadOnly && isDesktop && (\n        <div>\n          <DropzoneLink targetFolder={rootFolder} inputProps={{}}>\n            <TopControlsButton icon=\"upload\">{t('documentsTable.uploadFiles')}</TopControlsButton>\n          </DropzoneLink>\n          <DropzoneLink targetFolder={rootFolder} inputProps={{ webkitdirectory: '' }}>\n            <TopControlsButton icon=\"upload\">{t('documentsTable.uploadFolder')}</TopControlsButton>\n          </DropzoneLink>\n          <NameFormModal\n            formLabel=\"documentsTable.createFolder\"\n            onSubmit={newFolderName => rootFolder.createFolderAndSave(newFolderName)}\n            renderLink={modal => (\n              <TopControlsButton\n                icon=\"plus\"\n                data-cy-button-name=\"createFolder\"\n                onClick={modal.open}\n              >\n                {t('documentsTable.createFolder')}\n              </TopControlsButton>\n            )}\n          />\n        </div>\n      )}\n    </StyledTopControls>\n  );\n};\n\nexport default TopControls;\n","import React, { useState, useRef } from 'react';\n\nimport { StyledDragHighlightZone } from './Styles';\n\ninterface Props {\n  onDrop: (event: React.DragEvent) => void;\n  children: React.ReactNode;\n}\n\nconst DragHighlightZone: React.FC<Props> = ({ onDrop, children }) => {\n  const [isHighlighted, setHighlighted] = useState(false);\n  const dragTargets = useRef<HTMLElement[]>([]);\n  const moveZone = useRef<HTMLDivElement>(null);\n\n  return (\n    <StyledDragHighlightZone\n      isHighlighted={isHighlighted}\n      onDragEnter={event => {\n        if (!dragTargets.current.includes(event.currentTarget)) {\n          dragTargets.current = [...dragTargets.current, event.currentTarget];\n        }\n        if (!isHighlighted) {\n          setHighlighted(true);\n        }\n      }}\n      onDragLeave={event => {\n        dragTargets.current = [\n          ...dragTargets.current.filter(\n            target =>\n              target !== event.currentTarget &&\n              moveZone.current &&\n              moveZone.current.contains(target),\n          ),\n        ];\n        if (dragTargets.current.length === 0 && isHighlighted) {\n          setHighlighted(false);\n        }\n      }}\n      onDrop={event => {\n        onDrop(event);\n        dragTargets.current = [];\n        setHighlighted(false);\n      }}\n      onDragOver={event => event.preventDefault()}\n      ref={moveZone}\n    >\n      {children}\n    </StyledDragHighlightZone>\n  );\n};\n\nexport default DragHighlightZone;\n","import React, { useContext } from 'react';\nimport Dropzone from 'react-dropzone';\n\nimport { omit } from 'shared/utils/javascript';\n\nimport DocumentsTableContext from './DocumentsTableContext';\nimport DragHighlightZone from './DragHighlightZone';\nimport { DropArea } from './Styles';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  targetFolder: Folder;\n  children: React.ReactNode;\n}\n\nconst DropzoneArea: React.FC<Props> = ({ targetFolder, children }) => {\n  const { handleFilesDrop, handleFileOrFolderMove } = useContext(DocumentsTableContext);\n\n  return (\n    <Dropzone onDrop={files => handleFilesDrop(files, targetFolder)}>\n      {({ getRootProps, getInputProps }) => (\n        <DropArea\n          {...omit(getRootProps(), ['onDragEnter', 'onDragLeave'])} // avoid performance issues\n          data-cy-droparea-root={targetFolder.isRoot()}\n          data-cy-droparea-folder-name={targetFolder.name}\n          onClick={event => event.stopPropagation()}\n        >\n          <input {...getInputProps()} />\n          <DragHighlightZone onDrop={event => handleFileOrFolderMove(event, targetFolder)}>\n            {children}\n          </DragHighlightZone>\n        </DropArea>\n      )}\n    </Dropzone>\n  );\n};\n\nexport default DropzoneArea;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Icon from 'shared/components/Icon';\n\nimport DocumentsTableContext from './DocumentsTableContext';\nimport DropzoneArea from './DropzoneArea';\nimport { NoResultsReadOnly, NoResultsUploadable } from './Styles';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  rootFolder: Folder;\n}\n\nconst NoResultsMessage: React.FC<Props> = ({ rootFolder }) => {\n  const { t } = useTranslation();\n\n  const { isReadOnly } = useContext(DocumentsTableContext);\n\n  return isReadOnly ? (\n    <NoResultsReadOnly>\n      <Icon top={2} type=\"file\" />\n      {t('documentsTable.noResults')}\n    </NoResultsReadOnly>\n  ) : (\n    <DropzoneArea targetFolder={rootFolder}>\n      <NoResultsUploadable>\n        <Icon top={2} type=\"upload\" />\n        {t('documentsTable.dragToEmptyTable')}\n      </NoResultsUploadable>\n    </DropzoneArea>\n  );\n};\n\nexport default NoResultsMessage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { StyledHeaders, Header } from './Styles';\n\nconst Headers = () => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledHeaders>\n      <Header percentWidth={55}>{t('document.name')}</Header>\n      <Header percentWidth={10}>{t('document.size')}</Header>\n      <Header percentWidth={30}>{t('document.lastChanged')}</Header>\n    </StyledHeaders>\n  );\n};\n\nexport default Headers;\n","import React, { useContext } from 'react';\n\nimport DocumentsTableContext from './DocumentsTableContext';\nimport DropzoneArea from './DropzoneArea';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  folder: Folder;\n  children: React.ReactNode;\n}\n\nconst FolderDropzone: React.FC<Props> = ({ folder, children }) => {\n  const { isReadOnly } = useContext(DocumentsTableContext);\n\n  if (isReadOnly) {\n    return <>{children}</>;\n  }\n\n  return <DropzoneArea targetFolder={folder}>{children}</DropzoneArea>;\n};\n\nexport default FolderDropzone;\n","export const formatFileSize = (bytes: number, decimalPoint = 1): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1000;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / k ** i).toFixed(decimalPoint))} ${sizes[i]}`;\n};\n","import React from 'react';\n\nconst addItemIdToMoveEvent = (event: React.DragEvent, movedItemId: string) => {\n  // setData's format argument must be 'text' for IE 11; see https://stackoverflow.com/questions/26213011/html5-dragdrop-issue-in-internet-explorer-datatransfer-property-access-not-pos\n  if (event.dataTransfer) {\n    event.dataTransfer.setData('text', JSON.stringify({ movedItemId }));\n  }\n};\n\nexport default addItemIdToMoveEvent;\n","import styled from 'styled-components/macro';\n\nimport { ModalContent } from 'shared/components/Modal';\nimport Button from 'shared/components/Button';\nimport { font } from 'shared/utils/styles';\n\nexport const StyledModalContent = styled(ModalContent)`\n  padding: 45px 50px 50px;\n`;\n\nexport const Title = styled.div`\n  padding-bottom: 25px;\n  ${font.bold}\n  ${font.size(24)}\n  line-height: 1.5;\n`;\n\nexport const Message = styled.p`\n  padding-bottom: 25px;\n  white-space: pre-wrap;\n  ${font.size(16)}\n`;\n\nexport const StyledButton = styled(Button)`\n  margin: 5px 20px 0 0;\n`;\n","import React, { useState, useCallback, useRef, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { MODAL_VARIANTS, KEY_CODES, BUTTON_VARIANT } from 'shared/constants';\nimport { useModalState, ModalProps } from 'shared/components/Modal';\nimport useKeyboardEventCallback from 'shared/hooks/useKeyboardEventCallback';\n\nimport { StyledModalContent, Title, Message, StyledButton } from './Styles';\n\nexport interface ConfirmationModalConfirmHandlerParam {\n  close: () => void;\n}\n\ntype HandleConfirm = (modal: ConfirmationModalConfirmHandlerParam) => void;\n\nexport interface ConfirmationModalProps {\n  className?: string;\n  title?: string;\n  message?: string | ReactNode;\n  confirmText?: string;\n  cancelText?: string;\n  confirmationButtonVariant?: BUTTON_VARIANT;\n  onConfirm: HandleConfirm;\n  onCancel?: () => void;\n  renderLink: ModalProps['renderLink'];\n  renderContent?: () => ReactNode;\n  isWorking?: boolean;\n}\n\nconst ConfirmationModal: React.FC<ConfirmationModalProps> = ({\n  className = '',\n  title = 'warning',\n  message = 'confirmMessage',\n  confirmText = 'confirm',\n  cancelText = 'cancel',\n  confirmationButtonVariant = BUTTON_VARIANT.primary,\n  onConfirm,\n  onCancel = () => {},\n  renderLink,\n  isWorking: isWorkingProp = undefined,\n  renderContent = () => null,\n}) => {\n  const { t } = useTranslation();\n  const modalRef = useRef<HTMLDivElement>(null);\n  const [isWorkingState, setIsWorkingState] = useState(false);\n  const isWorking = isWorkingProp === undefined ? isWorkingState : isWorkingProp;\n  const { isOpen, openModal, closeModal, isActive } = useModalState(undefined, modalRef);\n\n  const handleCancel = useCallback(() => {\n    setIsWorkingState(false);\n    closeModal();\n    onCancel();\n  }, [closeModal, onCancel]);\n\n  const handleConfirm = useCallback(() => {\n    setIsWorkingState(true);\n    onConfirm({\n      close: () => {\n        if (modalRef.current) {\n          setIsWorkingState(false);\n          closeModal();\n        }\n      },\n    });\n  }, [onConfirm, closeModal]);\n\n  const handleEnter = () => {\n    if (isActive && !isWorking) {\n      handleConfirm();\n    }\n  };\n\n  useKeyboardEventCallback(document, KEY_CODES.enter, handleEnter, { condition: isOpen });\n\n  return (\n    <StyledModalContent\n      className={className}\n      isOpen={isOpen}\n      openModal={openModal}\n      closeModal={handleCancel}\n      isActive={isActive}\n      variant={MODAL_VARIANTS.center}\n      renderLink={renderLink}\n      modalCardRef={modalRef}\n      renderContent={() => (\n        <>\n          <Title>{t(title)}</Title>\n          {message && <Message>{t(message as string)}</Message>}\n          {renderContent()}\n          <StyledButton hollow onClick={handleCancel} data-testid=\"cancel-button\">\n            {t(cancelText)}\n          </StyledButton>\n          <StyledButton\n            variant={confirmationButtonVariant}\n            working={isWorking}\n            onClick={handleConfirm}\n            data-cy-button-name=\"confirm\"\n            data-testid=\"confirm-button\"\n          >\n            {t(confirmText)}\n          </StyledButton>\n        </>\n      )}\n    />\n  );\n};\n\nexport default ConfirmationModal;\n","import { Item as SerializedItem } from '../types/parsedFileTree';\n\n// eslint-disable-next-line import/no-cycle\nimport Folder from './Folder';\n\nabstract class Item {\n  abstract ancestor: Folder | undefined;\n\n  abstract id: string;\n\n  abstract name: string;\n\n  abstract saveCallback: ((rootFolder: SerializedItem) => void) | undefined;\n\n  save = () => {\n    if (this.saveCallback) {\n      this.saveCallback(this.serializable());\n    }\n  };\n\n  moveTo(folder: Folder) {\n    if (this.ancestor) {\n      this.ancestor.removeChild(this);\n    }\n    folder.addChild(this);\n    this.save();\n  }\n\n  updateName(newName: string) {\n    this.name = newName;\n    this.save();\n  }\n\n  delete() {\n    if (this.ancestor) {\n      this.ancestor.removeChild(this);\n    }\n    this.save();\n  }\n\n  getPath(): string {\n    if (!this.ancestor) {\n      return '';\n    }\n    const ancestorPath = this.ancestor.getPath();\n    return ancestorPath ? [ancestorPath, this.name].join('/') : this.name;\n  }\n\n  abstract serializable(): SerializedItem;\n\n  abstract findItembyId(id: string): Item | null;\n}\n\nexport default Item;\n","import { Item as SerializedItem } from '../types/parsedFileTree';\n\nimport Item from './Item';\nimport Folder from './Folder';\n\ninterface FileArgs {\n  name: string;\n  id: string;\n  ancestor?: Folder;\n  saveCallback?: (rootFolder: SerializedItem) => void;\n}\n\nclass File extends Item {\n  ancestor: Folder | undefined;\n\n  id: string;\n\n  name: string;\n\n  saveCallback: ((rootFolder: SerializedItem) => void) | undefined;\n\n  constructor({ ancestor, id, name, saveCallback }: FileArgs) {\n    super();\n    this.ancestor = ancestor;\n    this.id = id;\n    this.name = name;\n    this.saveCallback = saveCallback;\n  }\n\n  serializable(): SerializedItem {\n    return {\n      id: this.id,\n      type: 'file',\n      name: this.name,\n    };\n  }\n\n  findItembyId(id: string) {\n    if (this.id === id) return this;\n    return null;\n  }\n}\n\nexport default File;\n","import uuidv4 from 'uuid/v4';\n\nimport { ParsedFileTree, Item as SerializedItem } from '../types/parsedFileTree';\nimport { CreatedDocument } from '../types/createdDocument';\nimport { DocumentsTable_documents } from '../__graphql__/DocumentsTable_documents';\n\nimport Item from './Item';\nimport File from './File';\n\ninterface FolderArgs {\n  name: string;\n  contents?: ParsedFileTree;\n  id: string;\n  ancestor?: Folder;\n  saveCallback?: (rootFolder: SerializedItem) => void;\n}\n\nclass Folder extends Item {\n  ancestor: Folder | undefined;\n\n  id: string;\n\n  name: string;\n\n  saveCallback: ((rootFolder: SerializedItem) => void) | undefined;\n\n  children: Item[];\n\n  constructor({\n    name,\n    id,\n    contents = [],\n    ancestor = undefined,\n    saveCallback = undefined,\n  }: FolderArgs) {\n    super();\n    this.ancestor = ancestor;\n    this.id = id;\n    this.name = name;\n    this.children = contents.map(item => {\n      if (item.type === 'folder') {\n        return new Folder({\n          ancestor: this,\n          id: item.id,\n          name: item.name,\n          contents: item.contents,\n          saveCallback: this.save,\n        });\n      }\n      return new File({ ancestor: this, id: item.id, name: item.name, saveCallback: this.save });\n    });\n    this.saveCallback = saveCallback;\n  }\n\n  serializable(): SerializedItem {\n    return {\n      id: this.id,\n      type: 'folder',\n      name: this.name,\n      contents: this.children.map(item => item.serializable()),\n    };\n  }\n\n  getChildFolders() {\n    return this.children\n      .filter(item => item instanceof Folder)\n      .sort((a, b) => a.name.localeCompare(b.name)) as Folder[];\n  }\n\n  getFiles(): File[] {\n    return this.children.filter(item => item instanceof File) as File[];\n  }\n\n  getFilesWithDocs(documents: DocumentsTable_documents[]): Array<[File, DocumentsTable_documents]> {\n    return this.getFiles()\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .map(file => {\n        const doc = documents.find(({ id }) => id === file.id);\n        return [file, doc];\n      })\n      .filter(([, doc]) => doc) as Array<[File, DocumentsTable_documents]>;\n  }\n\n  addChild(item: Item) {\n    this.children.push(item);\n  }\n\n  removeChild(item: Item) {\n    this.children = this.children.filter(childItem => childItem.id !== item.id);\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  isRoot() {\n    return !this.ancestor;\n  }\n\n  addDocuments(createdDocuments: CreatedDocument[]) {\n    createdDocuments.forEach(({ documentId, sourceDirectoryPathArray, filename }) => {\n      const wasUploadedFileInFolder = sourceDirectoryPathArray.length > 0;\n      const file = new File({\n        ancestor: this,\n        id: documentId,\n        name: filename,\n        saveCallback: this.save,\n      });\n\n      if (wasUploadedFileInFolder) {\n        this.getOrCreateFolderAtPath(sourceDirectoryPathArray).addChild(file);\n      } else {\n        this.addChild(file);\n      }\n    });\n    this.save();\n  }\n\n  createFolderAndSave(name: string) {\n    this.createFolder(name);\n    this.save();\n  }\n\n  createFolder(name: string) {\n    const folder = new Folder({ name, id: uuidv4(), ancestor: this, saveCallback: this.save });\n    this.addChild(folder);\n    return folder;\n  }\n\n  moveTo(folder: Folder) {\n    const isMovingToDescendant = this.findItembyId(folder.id);\n    if (isMovingToDescendant) return;\n    super.moveTo(folder);\n  }\n\n  findItembyId(id: string): Item | null {\n    if (this.id === id) return this;\n    for (const item of this.children) {\n      const result = item.findItembyId(id);\n      if (result) return result;\n    }\n    return null;\n  }\n\n  getOrCreateFolderAtPath(pathArray: string[]) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let currentFolder: Folder = this;\n\n    pathArray.forEach(folderName => {\n      const existingFolder = currentFolder.getChildFolders().find(item => item.name === folderName);\n      if (existingFolder) {\n        currentFolder = existingFolder;\n      } else {\n        currentFolder = currentFolder.createFolder(folderName);\n      }\n    });\n    return currentFolder;\n  }\n}\n\nexport default Folder;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport ConfirmationModal from 'shared/components/ConfirmationModal';\n\nimport NameFormModal from './NameFormModal';\nimport DropzoneLink from './DropzoneLink';\nimport DocumentsTableContext from './DocumentsTableContext';\nimport { ItemActions, ItemActionsAction, ItemActionsTrigger } from './Styles';\nimport Item from './classes/Item';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  item: Item;\n}\n\nconst ItemControls: React.FC<Props> = ({ item }) => {\n  const { t } = useTranslation();\n\n  const { isReadOnly, downloadURL } = useContext(DocumentsTableContext);\n\n  return (\n    <ItemActions\n      renderTrigger={({ isTriggered, toggleTrigger }) => (\n        <ItemActionsTrigger\n          hollow\n          data-cy-dropdown-trigger\n          icon={isTriggered ? 'chevron-up' : 'chevron-down'}\n          iconSize={18}\n          onClick={toggleTrigger}\n        />\n      )}\n    >\n      <ItemActionsAction forwardedAs=\"a\" data-cy-button-name=\"download\" href={downloadURL(item)}>\n        {t('documentsTable.download')}\n      </ItemActionsAction>\n      {!isReadOnly && (\n        <>\n          <NameFormModal\n            name={item.name}\n            formLabel={t(\n              `documentsTable.${item instanceof Folder ? 'renameFolder' : 'renameFile'}`,\n            )}\n            onSubmit={newName => {\n              item.updateName(newName);\n            }}\n            renderLink={modal => (\n              <ItemActionsAction data-cy-button-name=\"rename\" onClick={modal.open}>\n                {t('documentsTable.rename')}\n              </ItemActionsAction>\n            )}\n          />\n          <ConfirmationModal\n            title=\"confirmDeleteMessage\"\n            message=\"confirmDeleteDescription\"\n            confirmText=\"delete\"\n            onConfirm={() => {\n              item.delete();\n              toast.success(t('documentsTable.documentsRemoved'));\n            }}\n            renderLink={modal => (\n              <ItemActionsAction data-cy-button-name=\"delete\" onClick={modal.open}>\n                {t('documentsTable.delete')}\n              </ItemActionsAction>\n            )}\n          />\n          {item instanceof Folder && (\n            <>\n              <DropzoneLink targetFolder={item} inputProps={{}}>\n                <ItemActionsAction>{t('documentsTable.uploadFiles')}</ItemActionsAction>\n              </DropzoneLink>\n              <DropzoneLink targetFolder={item} inputProps={{ webkitdirectory: '' }}>\n                <ItemActionsAction>{t('documentsTable.uploadFolder')}</ItemActionsAction>\n              </DropzoneLink>\n              <NameFormModal\n                formLabel=\"documentsTable.createFolder\"\n                onSubmit={newFolderName => item.createFolderAndSave(newFolderName)}\n                renderLink={modal => (\n                  <ItemActionsAction data-cy-button-name=\"createSubfolder\" onClick={modal.open}>\n                    {t('documentsTable.createFolder')}\n                  </ItemActionsAction>\n                )}\n              />\n            </>\n          )}\n        </>\n      )}\n    </ItemActions>\n  );\n};\n\nexport default ItemControls;\n","import React, { useContext } from 'react';\n\nimport { formatDateTime } from 'shared/utils/dateTime';\nimport { formatFileSize } from 'shared/utils/files';\n\nimport addItemIdToMoveEvent from './utils/addItemIdToMoveEvent';\nimport ItemControls from './ItemControls';\nimport DocumentsTableContext from './DocumentsTableContext';\nimport {\n  StyledIcon,\n  Row,\n  StyledFile,\n  FileColumnName,\n  FileColumnSize,\n  FileColumnLast,\n  FileColumns,\n  RowProps,\n} from './Styles';\nimport Folder from './classes/Folder';\nimport FileClass from './classes/File';\nimport { DocumentsTable_documents } from './__graphql__/DocumentsTable_documents';\n\ninterface MainProps {\n  nestingLevel: number;\n  folder: Folder;\n  file: FileClass;\n  document: DocumentsTable_documents;\n}\n\ntype Props = MainProps & RowProps;\n\nconst File: React.FC<Props> = ({ nestingLevel, file, folder, document, ...rowProps }) => {\n  const { isReadOnly, downloadURL } = useContext(DocumentsTableContext);\n\n  return (\n    <Row data-cy-folder={folder.name} data-cy-filename={file.name} {...rowProps}>\n      <StyledFile\n        draggable={!isReadOnly}\n        onDragStart={event => addItemIdToMoveEvent(event, file.id)}\n      >\n        <StyledIcon type=\"file\" nestingLevel={nestingLevel} />\n        <FileColumns>\n          <FileColumnName data-cy-file-link href={downloadURL(file)} nestingLevel={nestingLevel}>\n            {file.name}\n          </FileColumnName>\n          <FileColumnSize>{formatFileSize(document.size)}</FileColumnSize>\n          <FileColumnLast>{formatDateTime(document.updatedAt)}</FileColumnLast>\n        </FileColumns>\n      </StyledFile>\n      <ItemControls item={file} />\n    </Row>\n  );\n};\n\nexport default File;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\n\nimport DocumentsTableContext from './DocumentsTableContext';\nimport addItemIdToMoveEvent from './utils/addItemIdToMoveEvent';\nimport ItemControls from './ItemControls';\nimport { StyledIcon, Row, RowProps, StyledFolder, FolderName } from './Styles';\nimport Folder from './classes/Folder';\n\ninterface MainProps {\n  nestingLevel: number;\n  folder: Folder;\n  isFolderOpen: boolean;\n  toggleFolder: () => void;\n}\n\ntype Props = MainProps & RowProps;\n\nconst FolderRow: React.FC<Props> = ({\n  nestingLevel,\n  folder,\n  isFolderOpen,\n  toggleFolder,\n  ...rowProps\n}) => {\n  const { t } = useTranslation();\n  const { isMobile } = useContext(QueryMatchesContext);\n  const { isReadOnly } = useContext(DocumentsTableContext);\n\n  let icon: 'arrow-left' | 'folder-minus' | 'folder-plus';\n\n  if (isFolderOpen) {\n    icon = isMobile ? 'arrow-left' : 'folder-minus';\n  } else {\n    icon = 'folder-plus';\n  }\n\n  return (\n    <Row data-cy-folder-name={folder.name} data-cy-nesting-level={nestingLevel} {...rowProps}>\n      <StyledFolder\n        nestingLevel={nestingLevel}\n        onClick={toggleFolder}\n        draggable={!isReadOnly}\n        onDragStart={event => addItemIdToMoveEvent(event, folder.id)}\n      >\n        <StyledIcon nestingLevel={0} type={icon} />\n        <FolderName>{`${folder.name} ${\n          folder.isEmpty() ? t('documentsTable.empty') : ''\n        }`}</FolderName>\n      </StyledFolder>\n      <ItemControls item={folder} />\n    </Row>\n  );\n};\n\nexport default FolderRow;\n","import Desktop from './FolderWithContents.desktop';\nimport Mobile from './FolderWithContents.mobile';\n\nexport default {\n  Desktop,\n  Mobile,\n};\n","import React, { useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Icon from 'shared/components/Icon';\n\nimport FolderDropzone from './FolderDropzone';\nimport File from './File';\nimport FolderRow from './FolderRow';\nimport DocumentsTableContext from './DocumentsTableContext';\nimport { RootDropzoneArea } from './Styles';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  folder: Folder;\n  nestingLevel: number;\n}\n\nconst FolderWithContents: React.FC<Props> = ({ folder, nestingLevel }) => {\n  const { t } = useTranslation();\n  const [open, setOpen] = useState(nestingLevel === 0);\n  const { documents } = useContext(DocumentsTableContext);\n\n  const files = folder.getFilesWithDocs(documents);\n  const folders = folder.getChildFolders();\n\n  return (\n    <>\n      <FolderDropzone folder={folder}>\n        {folder.isRoot() ? (\n          <RootDropzoneArea>\n            <Icon top={1} type=\"upload\" />\n            {t('documentsTable.dragToRoot')}\n          </RootDropzoneArea>\n        ) : (\n          <FolderRow\n            nestingLevel={nestingLevel}\n            folder={folder}\n            isFolderOpen={open}\n            toggleFolder={() => setOpen(!open)}\n          />\n        )}\n        {open &&\n          files.map(([file, document]) => (\n            <File\n              key={document.id}\n              nestingLevel={nestingLevel + 1}\n              folder={folder}\n              file={file}\n              document={document}\n            />\n          ))}\n      </FolderDropzone>\n      {open &&\n        folders.map(item => (\n          <FolderWithContents key={item.id} folder={item} nestingLevel={nestingLevel + 1} />\n        ))}\n    </>\n  );\n};\n\nexport default FolderWithContents;\n","import React, { useContext, useEffect } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport { isEnter, isExited } from 'shared/utils/transitionStates';\n\nimport File from './File';\nimport FolderRow from './FolderRow';\nimport DocumentsTableContext from './DocumentsTableContext';\nimport { MobileRowsContainer, transitionTime } from './Styles';\nimport Folder from './classes/Folder';\n\ninterface Props {\n  folder: Folder;\n  index: number;\n  isParentCurrentlySelected: boolean;\n}\n\nconst FolderWithContents: React.FC<Props> = ({ folder, index, isParentCurrentlySelected }) => {\n  const {\n    documents,\n    mobileNavigation: {\n      getIsOpen,\n      toggleFolder,\n      getIsCurrentlySelected,\n      setCurrentlyVisibleRows,\n      rootId,\n    },\n  } = useContext(DocumentsTableContext);\n  const isRoot = folder.isRoot();\n  const folderId = isRoot ? rootId : folder.id;\n  const isOpen = getIsOpen(folderId);\n  const isCurrentlySelected = getIsCurrentlySelected(folderId);\n\n  const files = folder.getFilesWithDocs(documents);\n  const folders = folder.getChildFolders();\n\n  useEffect(() => {\n    if (isCurrentlySelected) {\n      setCurrentlyVisibleRows(files.length + folders.length + (isRoot ? 0 : 1));\n    }\n  }, [isCurrentlySelected, setCurrentlyVisibleRows, files.length, folders.length, isRoot]);\n\n  return (\n    <>\n      {!isRoot && (\n        <FolderRow\n          nestingLevel={0}\n          folder={folder}\n          isFolderOpen={isOpen}\n          toggleFolder={() => toggleFolder(folderId)}\n          index={isOpen ? 0 : index}\n          isFolderAndOpen={isOpen}\n          isAtTopOfList={isOpen ? true : index === 0}\n          isShown={isCurrentlySelected || isParentCurrentlySelected}\n          isAboveOthers={isCurrentlySelected || isParentCurrentlySelected}\n        />\n      )}\n      <Transition timeout={transitionTime} in={isOpen}>\n        {state => (\n          <MobileRowsContainer>\n            {files.map(([file, document], i) => (\n              <File\n                key={document.id}\n                nestingLevel={0}\n                folder={folder}\n                file={file}\n                document={document}\n                index={i + (isRoot ? 0 : 1)}\n                isFolderAndOpen={false}\n                isAtTopOfList={isRoot ? i === 0 : false}\n                isShown={isCurrentlySelected && isEnter(state)}\n                isAboveOthers={isCurrentlySelected && !isExited(state)}\n              />\n            ))}\n            {folders.map((item, i) => (\n              <FolderWithContents\n                key={item.id}\n                folder={item}\n                index={files.length + (isRoot ? 0 : 1) + i}\n                isParentCurrentlySelected={isCurrentlySelected}\n              />\n            ))}\n          </MobileRowsContainer>\n        )}\n      </Transition>\n    </>\n  );\n};\n\nexport default FolderWithContents;\n","import gql from 'graphql-tag';\nimport axios from 'axios';\nimport { FileWithPath } from 'react-dropzone';\n\nimport apolloClient from 'apolloClient';\n\nimport { UpdateDocument_updateDocument } from './__graphql__/UpdateDocument';\n\nconst mutationCreateDocument = gql`\n  mutation CreateDocument($input: CreateDocumentInput!) {\n    createDocument(input: $input) {\n      id\n      uploadUrl\n    }\n  }\n`;\n\nconst mutationUpdateDocument = gql`\n  mutation UpdateDocument($id: ID!, $input: UpdateDocumentInput!) {\n    updateDocument(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n\nconst createDocument = async (file: File) => {\n  const response = await apolloClient.mutate({\n    mutation: mutationCreateDocument,\n    variables: {\n      input: { filename: encodeURIComponent(file.name), size: file.size },\n    },\n  });\n  return response.data.createDocument;\n};\n\nconst uploadDocumentToStorage = async (\n  file: File,\n  uploadUrl: string,\n  onFileProgress: (complete: number, fileName: string) => void,\n) =>\n  axios.put(uploadUrl, file, {\n    headers: {\n      'Content-Type': file.type,\n      'Content-Disposition': `attachment; filename=\"${encodeURIComponent(\n        file.name,\n      )}\"; filename*=UTF-8''${encodeURIComponent(file.name)}`,\n    },\n    onUploadProgress: progressEvent => {\n      const percentComplete = progressEvent.total\n        ? Math.round((progressEvent.loaded * 100) / progressEvent.total)\n        : 0;\n\n      onFileProgress(percentComplete, file.name);\n    },\n  });\n\nconst updateDocument = async (documentId: string) =>\n  apolloClient.mutate({\n    mutation: mutationUpdateDocument,\n    variables: {\n      id: documentId,\n      input: { uploaded: true },\n    },\n  });\n\nexport const createDocumentsFromFiles = async ({\n  files,\n  onFileUploaded,\n  onFileProgress,\n}: {\n  files: File[];\n  onFileUploaded: (\n    count: number,\n    document: UpdateDocument_updateDocument,\n    file: FileWithPath,\n  ) => void;\n  onFileProgress: (currentFileProgress: number, currentFileName: string) => void;\n}) => {\n  let completedCount = 0;\n\n  for (const file of files) {\n    const { data } = await createDocumentFromFile(file, onFileProgress);\n    completedCount += 1;\n    onFileUploaded(completedCount, data.updateDocument, file);\n  }\n};\n\nconst createDocumentFromFile = async (\n  file: File,\n  onFileProgress: (complete: number, fileName: string) => void,\n) => {\n  const data = await createDocument(file);\n  await uploadDocumentToStorage(file, data.uploadUrl, onFileProgress);\n  return updateDocument(data.id);\n};\n","import { useState } from 'react';\n\ninterface ProgressState {\n  isUploading: boolean;\n  uploadedCount: number;\n  totalCount: number;\n  currentFileProgress: number;\n  currentFileName: string;\n}\n\nconst defaultUploadProgressState: ProgressState = {\n  isUploading: false,\n  uploadedCount: 0,\n  totalCount: 0,\n  currentFileProgress: 0,\n  currentFileName: '',\n};\n\nconst useProgressState: () => [\n  ProgressState,\n  (newFields: Partial<ProgressState>) => void,\n  () => void,\n] = () => {\n  const [progress, setProgress] = useState(defaultUploadProgressState);\n\n  const updateProgress = (newFields: Partial<ProgressState>) =>\n    setProgress(previousFields => ({\n      ...previousFields,\n      ...newFields,\n    }));\n\n  const resetProgress = () => setProgress(defaultUploadProgressState);\n\n  return [progress, updateProgress, resetProgress];\n};\n\nexport default useProgressState;\n","import { useTranslation } from 'react-i18next';\nimport { FileWithPath } from 'react-dropzone';\n\nimport toast from 'shared/utils/toast';\nimport { createDocumentsFromFiles } from 'services/document';\nimport { UpdateDocument_updateDocument } from 'services/__graphql__/UpdateDocument';\n\nimport Folder from '../classes/Folder';\nimport { CreatedDocument } from '../types/createdDocument';\n\nimport useProgressState from './useProgressState';\n\nexport type HandleFilesDrop = (files: File[], targetFolder: Folder) => void;\n\nconst useFilesDropHandler = () => {\n  const { t } = useTranslation();\n\n  const [progress, updateProgress, resetProgress] = useProgressState();\n\n  const handleFilesDrop: HandleFilesDrop = async (files, targetFolder) => {\n    const createdDocuments: CreatedDocument[] = [];\n\n    if (files.length === 0) {\n      toast.warning(t('documentsTable.emptyFolderUpload'));\n      return;\n    }\n\n    updateProgress({ isUploading: true, totalCount: files.length });\n    try {\n      await createDocumentsFromFiles({\n        files,\n        onFileUploaded: (\n          uploadedCount: number,\n          doc: UpdateDocument_updateDocument,\n          file: FileWithPath,\n        ) => {\n          createdDocuments.push({\n            documentId: doc.id,\n            sourceDirectoryPathArray: (file.path || '')\n              .split('/')\n              .slice(0, -1) // removing file name\n              .filter(part => part !== ''),\n            filename: file.name,\n          });\n          updateProgress({ uploadedCount });\n        },\n        onFileProgress: (currentFileProgress: number, currentFileName: string) => {\n          updateProgress({ currentFileProgress, currentFileName });\n        },\n      });\n      targetFolder.addDocuments(createdDocuments);\n      toast.success(t('documentsTable.documentsUploaded'));\n    } catch (error) {\n      toast.error(error);\n    }\n    resetProgress();\n  };\n\n  return { handleFilesDrop, progress };\n};\n\nexport default useFilesDropHandler;\n","import { useState } from 'react';\n\nimport useStack from 'shared/hooks/useStack';\n\nimport Folder from '../classes/Folder';\nimport { DocumentsTable_documents } from '../__graphql__/DocumentsTable_documents';\n\ninterface Args {\n  rootFolder: Folder;\n  documents: DocumentsTable_documents[];\n}\n\nexport interface MobileNavigation {\n  getIsOpen: (value: string) => boolean;\n  toggleFolder: (value: string) => void;\n  getIsCurrentlySelected: (folderId: string) => boolean;\n  currentlyVisibleRows: number;\n  setCurrentlyVisibleRows: (currentVisibleRows: number) => void;\n  rootId: string;\n}\n\nconst useMobileNavigation = ({ rootFolder, documents }: Args): MobileNavigation => {\n  const rootId = 'root';\n  const { peek, toggle, contains } = useStack(rootId);\n  const [currentlyVisibleRows, setCurrentlyVisibleRows] = useState<number>(() => {\n    const rootFiles = rootFolder.getFilesWithDocs(documents);\n    const rootFolders = rootFolder.getChildFolders();\n\n    return rootFiles.length + rootFolders.length;\n  });\n\n  const getIsCurrentlySelected = (folderId: string) => peek() === folderId;\n\n  return {\n    getIsOpen: contains,\n    toggleFolder: toggle,\n    getIsCurrentlySelected,\n    currentlyVisibleRows,\n    setCurrentlyVisibleRows,\n    rootId,\n  };\n};\n\nexport default useMobileNavigation;\n","import React from 'react';\n\nimport Folder from '../classes/Folder';\n\ninterface Args {\n  rootFolder: Folder;\n}\n\nexport type MoveHandler = (event: React.DragEvent, targetFolder: Folder) => void;\n\nconst getMoveHandler = ({ rootFolder }: Args): MoveHandler => (event, targetFolder) => {\n  event.preventDefault();\n\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (!event.dataTransfer || !event.dataTransfer.getData) return;\n  const movedItemJSON = event.dataTransfer.getData('text');\n\n  const isNotMoveEvent = !movedItemJSON;\n  if (isNotMoveEvent) return;\n\n  let parsedJSON;\n\n  try {\n    parsedJSON = JSON.parse(movedItemJSON);\n  } catch {\n    return;\n  }\n\n  const { movedItemId } = parsedJSON;\n\n  const item = rootFolder.findItembyId(movedItemId);\n  if (item) {\n    item.moveTo(targetFolder);\n  }\n};\n\nexport default getMoveHandler;\n","import queryString from 'query-string';\n\nimport Item from '../classes/Item';\nimport Folder from '../classes/Folder';\n\ninterface Args {\n  name: string;\n  fileTreeIds: string[];\n}\n\nconst getDownloadURLBuilder = ({ name, fileTreeIds }: Args) => (item: Item) => {\n  const filename = item instanceof Folder && item.isRoot() ? name : item.name;\n  const path = item.getPath();\n\n  if (fileTreeIds.length > 1) {\n    const queryParams = {\n      fileTreeIds,\n      filename,\n      path,\n    };\n\n    return queryString.stringifyUrl({\n      url: `${process.env.REACT_APP_API_BASE}/downloadCombined`,\n      query: queryParams,\n    });\n  }\n\n  const queryParams = {\n    fileTreeId: fileTreeIds[0],\n    filename,\n    path,\n  };\n\n  return queryString.stringifyUrl({\n    url: `${process.env.REACT_APP_API_BASE}/download`,\n    query: queryParams,\n  });\n};\n\nexport default getDownloadURLBuilder;\n","import React, { useEffect } from 'react';\n\nconst PrintDialog: React.FC<{}> = () => {\n  useEffect(() => {\n    if (document.fonts) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      document.fonts.ready.then(() => {\n        window.print();\n      });\n    }\n  }, []);\n\n  return null;\n};\n\nexport default PrintDialog;\n","import styled from 'styled-components/macro';\n\nexport const DocumentsPrintContainer = styled.div`\n  /* Keeps IE from printing an extra blank page */\n  height: 100%;\n  margin-top: 20px;\n  margin-left: 30px;\n  margin-right: 30px;\n\n  @media print {\n    margin-top: 0;\n    margin-left: 0.5cm;\n    margin-right: 0.5cm;\n    @page {\n      /* Forces landscape for Chrome and Opera; other browsers entirely depend on user input. */\n      size: landscape;\n    }\n    break-after: avoid;\n  }\n`;\n\nexport const Heading = styled.h3`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Table = styled.table`\n  border-spacing: 0;\n  width: 100%;\n  break-before: auto;\n  break-after: avoid;\n  break-inside: auto;\n`;\n\nexport const TableHeader = styled.th`\n  padding: 7px;\n  text-align: left;\n`;\n\nexport const FileNameColumn = styled.col`\n  width: 62%;\n`;\n\nexport const SizeColumn = styled.col`\n  width: 13%;\n`;\n\nexport const LastChangedColumn = styled.col`\n  width: 25%;\n`;\n\nexport const Row = styled.tr`\n  break-inside: avoid;\n  border: 1px solid grey;\n`;\n\nexport const Cell = styled.td`\n  border-top: 1px solid grey;\n  padding: 7px;\n  max-width: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  break-inside: avoid;\n`;\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Folder from 'shared/components/DocumentsTable/classes/Folder';\nimport File from 'shared/components/DocumentsTable/classes/File';\nimport { formatFileSize } from 'shared/utils/files';\nimport { formatDateTime } from 'shared/utils/dateTime';\nimport PrintDialog from 'shared/components/PrintDialog';\n\nimport {\n  DocumentsPrintContainer,\n  Heading,\n  Table,\n  Row,\n  Cell,\n  TableHeader,\n  FileNameColumn,\n  SizeColumn,\n  LastChangedColumn,\n} from './PrintDocuments.Styles';\nimport { DocumentsTable_documents } from './__graphql__/DocumentsTable_documents';\n\ninterface PrintDocumentsProps {\n  rootFolder: Folder;\n  documents: DocumentsTable_documents[];\n  title: string;\n}\n\nconst buildDocumentRows = ({\n  folder,\n  documents,\n}: {\n  folder: Folder;\n  documents: DocumentsTable_documents[];\n}): Array<{\n  fullPathName: string;\n  document: DocumentsTable_documents;\n}> => {\n  const files: Array<[File, DocumentsTable_documents]> = folder.getFilesWithDocs(documents);\n  const folders: Folder[] = folder.getChildFolders();\n  const rows = files.map(([file, document]) => ({ fullPathName: file.getPath(), document }));\n  return rows.concat(\n    ...folders.map(childFolder => buildDocumentRows({ folder: childFolder, documents })),\n  );\n};\n\nconst PrintDocuments: FC<PrintDocumentsProps> = ({ rootFolder, documents, title }) => {\n  const { t } = useTranslation('documentsPrint');\n\n  const documentRows = buildDocumentRows({ folder: rootFolder, documents });\n\n  return (\n    <DocumentsPrintContainer>\n      <PrintDialog />\n      <Heading>{t('title', { title })}</Heading>\n      <Table>\n        <colgroup>\n          <FileNameColumn />\n          <SizeColumn />\n          <LastChangedColumn />\n        </colgroup>\n        <thead>\n          <tr>\n            <TableHeader>{t('document.name')}</TableHeader>\n            <TableHeader>{t('document.size')}</TableHeader>\n            <TableHeader>{t('document.lastChanged')}</TableHeader>\n          </tr>\n        </thead>\n        <tbody>\n          {documentRows.map(({ fullPathName, document }, index) => {\n            return (\n              <Row key={index}>\n                <Cell>{fullPathName}</Cell>\n                <Cell>{formatFileSize(document.size)}</Cell>\n                <Cell>{formatDateTime(document.updatedAt)}</Cell>\n              </Row>\n            );\n          })}\n        </tbody>\n      </Table>\n    </DocumentsPrintContainer>\n  );\n};\n\nexport default PrintDocuments;\n","import React, { useContext } from 'react';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\n\nimport ProgressBars from './ProgressBars';\nimport TopControls from './TopControls';\nimport NoResultsMessage from './NoResultsMessage';\nimport Headers from './Headers';\nimport FolderWithContents from './FolderWithContents';\nimport DocumentsTableContext from './DocumentsTableContext';\nimport useFilesDropHandler from './hooks/useFilesDropHandler';\nimport useMobileNavigation from './hooks/useMobileNavigation';\nimport getMoveHandler from './utils/getMoveHandler';\nimport getDownloadURLBuilder from './utils/getDownloadURLBuilder';\nimport { DocumentsTableContainer, StyledDocumentsTable, MobileContentContainer } from './Styles';\nimport PrintDocuments from './PrintDocuments';\nimport Folder from './classes/Folder';\nimport { DocumentsTable_documents } from './__graphql__/DocumentsTable_documents';\n\ninterface Props {\n  name: string;\n  isReadOnly?: boolean;\n  fileTreeIds: string[];\n  rootFolder: Folder;\n  documents: DocumentsTable_documents[];\n  refetch: () => Promise<unknown>;\n  printPath?: string;\n  printDocuments?: boolean;\n}\n\nconst DocumentsTable: React.FC<Props> = ({\n  name,\n  isReadOnly = false,\n  fileTreeIds,\n  rootFolder,\n  documents,\n  refetch,\n  printPath,\n  printDocuments = false,\n}) => {\n  const { handleFilesDrop, progress } = useFilesDropHandler();\n  const handleFileOrFolderMove = getMoveHandler({ rootFolder });\n  const downloadURL = getDownloadURLBuilder({ name, fileTreeIds });\n  const { isMobile, isDesktop } = useContext(QueryMatchesContext);\n  const mobileNavigation = useMobileNavigation({ rootFolder, documents });\n\n  const context = {\n    documents,\n    isReadOnly,\n    downloadURL,\n    handleFilesDrop,\n    handleFileOrFolderMove,\n    refetch,\n    mobileNavigation,\n  };\n\n  if (printDocuments)\n    return <PrintDocuments documents={documents} rootFolder={rootFolder} title={name} />;\n\n  return (\n    <DocumentsTableContext.Provider value={context}>\n      <DocumentsTableContainer>\n        <ProgressBars progress={progress} />\n        <TopControls rootFolder={rootFolder} printPath={printPath} />\n        <StyledDocumentsTable>\n          {!rootFolder.isEmpty() && (\n            <>\n              {isMobile && (\n                <MobileContentContainer\n                  currentlyVisibleRows={mobileNavigation.currentlyVisibleRows}\n                >\n                  <FolderWithContents.Mobile\n                    index={0}\n                    folder={rootFolder}\n                    isParentCurrentlySelected={false}\n                  />\n                </MobileContentContainer>\n              )}\n              {isDesktop && (\n                <>\n                  <Headers />\n                  <FolderWithContents.Desktop folder={rootFolder} nestingLevel={0} />\n                </>\n              )}\n            </>\n          )}\n          {rootFolder.isEmpty() && <NoResultsMessage rootFolder={rootFolder} />}\n        </StyledDocumentsTable>\n      </DocumentsTableContainer>\n    </DocumentsTableContext.Provider>\n  );\n};\n\nexport default DocumentsTable;\n","import gql from 'graphql-tag';\n\nexport const fragmentDocumentsTableDocuments = gql`\n  fragment DocumentsTable_documents on Document {\n    id\n    filename\n    size\n    updatedAt\n  }\n`;\n\nexport const fragmentDocumentsTableFileTree = gql`\n  fragment DocumentsTable_fileTree on FileTree {\n    id\n    fileTree\n  }\n`;\n\nexport const queryFileTreeWithDocuments = gql`\n  query FileTreeWithDocuments($attachable: AttachableInput!) {\n    fileTreeWithDocuments(attachable: $attachable) {\n      documents {\n        ...DocumentsTable_documents\n      }\n      fileTree {\n        ...DocumentsTable_fileTree\n      }\n    }\n  }\n  ${fragmentDocumentsTableDocuments}\n  ${fragmentDocumentsTableFileTree}\n`;\n\nexport const queryCombinedFileTreeWithDocuments = gql`\n  query CombinedFileTreeWithDocuments($attachables: [AttachableInput!]!) {\n    combinedFileTreeWithDocuments(attachables: $attachables) {\n      documents {\n        ...DocumentsTable_documents\n      }\n      fileTrees {\n        ...DocumentsTable_fileTree\n      }\n    }\n  }\n  ${fragmentDocumentsTableDocuments}\n  ${fragmentDocumentsTableFileTree}\n`;\n\nexport const mutationUpdateFileTree = gql`\n  mutation UpdateFileTree($id: ID!, $fileTree: String!) {\n    updateFileTree(id: $id, fileTree: $fileTree) {\n      id\n    }\n  }\n`;\n","import React from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { cloneDeep } from 'shared/utils/javascript';\nimport toast from 'shared/utils/toast';\nimport { DOCUMENT_ENTITY } from '__graphql__/globalTypes';\n\nimport DocumentsTable from './DocumentsTable';\nimport { queryFileTreeWithDocuments, mutationUpdateFileTree } from './api';\nimport Folder from './classes/Folder';\nimport {\n  FileTreeWithDocuments,\n  FileTreeWithDocumentsVariables,\n} from './__graphql__/FileTreeWithDocuments';\nimport { UpdateFileTree, UpdateFileTreeVariables } from './__graphql__/UpdateFileTree';\nimport {\n  ParsedFileTree,\n  Item as SerializedItem,\n  Folder as SerializedFolder,\n} from './types/parsedFileTree';\n\ninterface Props {\n  attachableType: DOCUMENT_ENTITY;\n  attachableId: string;\n  attachableName: string;\n  isReadOnly?: boolean;\n  onDocumentsCountChange?: (count: number) => void;\n  printPath?: string;\n  printDocuments?: boolean;\n}\n\nconst DocumentsTableSingle: React.FC<Props> = ({\n  attachableType,\n  attachableId,\n  attachableName,\n  isReadOnly = false,\n  onDocumentsCountChange = () => {},\n  printPath,\n  printDocuments = false,\n}) => {\n  const { error, ...queryResults } = useQuery<\n    FileTreeWithDocuments,\n    FileTreeWithDocumentsVariables\n  >(queryFileTreeWithDocuments, {\n    variables: {\n      attachable: {\n        attachableType,\n        attachableId,\n      },\n    },\n    onCompleted: completedData => {\n      onDocumentsCountChange(completedData.fileTreeWithDocuments.documents.length);\n    },\n  });\n\n  const [updateFileTree] = useMutation<UpdateFileTree, UpdateFileTreeVariables>(\n    mutationUpdateFileTree,\n  );\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data, refetch } = queryResults;\n\n  const refetchWithCallback = async () => {\n    const { data: fetchedData } = await refetch();\n    onDocumentsCountChange(fetchedData.fileTreeWithDocuments.documents.length);\n  };\n\n  const parsedFileTree: ParsedFileTree = JSON.parse(data.fileTreeWithDocuments.fileTree.fileTree);\n\n  const persistFileTree = async (rootFolder: SerializedItem) => {\n    const updatedRootFolder = cloneDeep(rootFolder);\n    try {\n      await updateFileTree({\n        variables: {\n          id: data.fileTreeWithDocuments.fileTree.id,\n          fileTree: JSON.stringify((updatedRootFolder as SerializedFolder).contents),\n        },\n      });\n      await refetchWithCallback();\n    } catch (updateFileTreeError) {\n      toast.error(updateFileTreeError);\n    }\n  };\n\n  const rootFolder = new Folder({\n    id: '_root',\n    name: 'root',\n    contents: parsedFileTree,\n    saveCallback: persistFileTree,\n  });\n\n  return (\n    <DocumentsTable\n      name={attachableName}\n      fileTreeIds={[data.fileTreeWithDocuments.fileTree.id]}\n      rootFolder={rootFolder}\n      documents={data.fileTreeWithDocuments.documents}\n      isReadOnly={isReadOnly}\n      refetch={refetchWithCallback}\n      printPath={printPath}\n      printDocuments={printDocuments}\n    />\n  );\n};\n\nexport default DocumentsTableSingle;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { buildAttachableName } from 'shared/utils/documents';\nimport { DOCUMENT_ENTITY } from '__graphql__/globalTypes';\n\nimport DocumentsTable from './DocumentsTable';\nimport { queryCombinedFileTreeWithDocuments } from './api';\nimport Folder from './classes/Folder';\nimport {\n  CombinedFileTreeWithDocuments,\n  CombinedFileTreeWithDocumentsVariables,\n} from './__graphql__/CombinedFileTreeWithDocuments';\n\ninterface Attachable {\n  attachableType: DOCUMENT_ENTITY;\n  attachableId: string;\n  attachableName: string;\n}\n\ninterface Props {\n  attachables: Attachable[];\n}\n\nconst DocumentsTableCombined: React.FC<Props> = ({ attachables }) => {\n  const { error, ...queryResults } = useQuery<\n    CombinedFileTreeWithDocuments,\n    CombinedFileTreeWithDocumentsVariables\n  >(queryCombinedFileTreeWithDocuments, {\n    variables: {\n      attachables: attachables.map(({ attachableId, attachableType }) => ({\n        attachableId,\n        attachableType,\n      })),\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data, refetch } = queryResults;\n\n  const projectAttachable = attachables.find(({ attachableType: type }) => type === 'Project');\n  const projectName = projectAttachable ? projectAttachable.attachableName : undefined;\n  const bidPackageAttachable = attachables.find(\n    ({ attachableType: type }) => type === 'BidPackage',\n  );\n  const bidPackageName = bidPackageAttachable ? bidPackageAttachable.attachableName : undefined;\n\n  const name = buildAttachableName([projectName, bidPackageName]);\n\n  const parsedFileTree = data.combinedFileTreeWithDocuments.fileTrees.flatMap(fileTree => {\n    return JSON.parse(fileTree.fileTree);\n  });\n\n  const rootFolder = new Folder({ id: '_root', name: 'root', contents: parsedFileTree });\n\n  return (\n    <DocumentsTable\n      name={name}\n      fileTreeIds={data.combinedFileTreeWithDocuments.fileTrees.map(fileTree => fileTree.id)}\n      isReadOnly\n      rootFolder={rootFolder}\n      documents={data.combinedFileTreeWithDocuments.documents}\n      refetch={refetch}\n    />\n  );\n};\n\nexport default DocumentsTableCombined;\n","import styled from 'styled-components/macro';\n\nimport IconClickable from 'shared/components/IconClickable';\n\nexport const ClearQueryIcon = styled(IconClickable)`\n  position: absolute;\n  right: 12px;\n  top: 0;\n`;\n\nexport const SearchInputElement = styled.input`\n  padding-right: 40px !important;\n\n  &::-ms-clear {\n    display: none;\n  }\n`;\n","import React, { useState, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Input, { InputProps, InputRenderProps } from 'shared/components/Input';\n\nimport { ClearQueryIcon, SearchInputElement } from './Styles';\n\ninterface SearchInputProps {\n  className?: string;\n  onChange: (value: string) => void;\n}\n\nconst SearchInput: React.FC<SearchInputProps & Omit<InputProps, keyof SearchInputProps>> = ({\n  onChange,\n  className,\n  ...props\n}) => {\n  const { t } = useTranslation();\n  const [value, setValue] = useState<string | undefined>(undefined);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const resetInput = useCallback(() => {\n    setValue('');\n    onChange('');\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  }, [onChange]);\n\n  const onChangeHandler = useCallback(\n    changedValue => {\n      setValue(changedValue);\n      onChange(changedValue);\n    },\n    [setValue, onChange],\n  );\n\n  const renderSearchInputContent = (inputProps: InputRenderProps) => (\n    <>\n      <SearchInputElement\n        {...inputProps}\n        onChange={event => inputProps.onChange(event.target.value, event)}\n        ref={inputRef}\n      />\n      {value && <ClearQueryIcon type=\"close\" onClick={resetInput} />}\n    </>\n  );\n\n  return (\n    <Input\n      className={className}\n      placeholder={t('search')}\n      icon=\"search\"\n      name=\"searchInput\"\n      onChange={onChangeHandler}\n      {...props}\n      renderInput={renderSearchInputContent}\n    />\n  );\n};\n\nexport default SearchInput;\n","import styled from 'styled-components/macro';\nimport { Link } from 'react-router-dom';\n\nimport SearchInput from 'shared/components/SearchInput';\nimport Icon from 'shared/components/Icon';\nimport { COLOR, font, zIndexValues } from 'shared/utils/styles';\n\nexport const ContentWithScroll = styled.div`\n  flex: 1;\n  height: 100%;\n  overflow: auto;\n`;\n\nexport const DropdownMenuWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  padding-left: 12px;\n`;\n\nexport const HeadingLarge = styled.h1`\n  padding-bottom: 32px;\n  ${font.bold}\n  ${font.size(41)}\n`;\n\nexport const HeadingMedium = styled.h3`\n  padding-bottom: 30px;\n  ${font.bold}\n  ${font.size(32)}\n`;\n\nexport const SectionTitle = styled.div`\n  padding: 40px 0 20px;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  color: ${COLOR.textLightBlue};\n  ${font.bold}\n  ${font.size(12)}\n`;\n\nexport const SectionHint = styled.div`\n  padding: 10px 15px;\n  margin-bottom: 20px;\n  background-color: ${COLOR.backgroundLight};\n  color: ${COLOR.textMediumBlue};\n  ${font.size(13)}\n  line-height: 1.5;\n`;\n\nexport const SpaceBetween = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const TableSearch = styled(SearchInput)`\n  max-width: 300px;\n  margin-bottom: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  /* Don't take entire parent width if placed in flex container: */\n  align-self: flex-start;\n\n  display: inline-block;\n  z-index: ${zIndexValues.topbar + 1};\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  color: ${COLOR.textLightBlue};\n  ${font.bold}\n  ${font.size(11)}\n  i {\n    margin-right: 8px;\n    font-size: 18px;\n    vertical-align: middle;\n  }\n`;\n\nexport const DisabledIcon = styled(Icon)`\n  opacity: 0.2;\n  cursor: default !important;\n`;\n\ninterface ProjectClosedMessageProps {\n  addBottomMargin?: boolean;\n}\n\nexport const ProjectClosedMessage = styled.div<ProjectClosedMessageProps>`\n  padding: 20px 25px 20px 25px;\n  text-align: center;\n  background-color: ${COLOR.backgroundLight};\n  color: ${COLOR.textLight};\n  border-radius: 5px;\n  margin-bottom: ${props => (props.addBottomMargin ? '20px' : '0px')};\n  margin-left: 15px;\n  margin-right: 15px;\n`;\n","import gql from 'graphql-tag';\n\nimport { fragmentSubcontractorInfo } from 'shared/components/SubcontractorInfo';\nimport { fragmentContactsList } from 'shared/components/ContactsList';\n\nexport const fragmentBidFormModal = gql`\n  fragment BidFormModal_bid on Bid {\n    id\n    totalAmount\n    submittedAt\n    message\n  }\n  fragment BidFormModal_bidRequest on BidRequest {\n    subcontractor {\n      id\n      ...SubcontractorInfo_subcontractorInfo\n    }\n    ...ContactsList_bidRequest\n  }\n  ${fragmentSubcontractorInfo}\n  ${fragmentContactsList}\n`;\n\nexport const draftBid = gql`\n  query DraftBid($bidRequestId: ID!) {\n    draftBid(bidRequestId: $bidRequestId) {\n      id\n      message\n      totalAmount\n    }\n  }\n`;\n\nexport const subcontractorDraftBid = gql`\n  query SubcontractorDraftBid($bidRequestId: ID!) {\n    subcontractorDraftBid(bidRequestId: $bidRequestId) {\n      id\n      message\n      totalAmount\n    }\n  }\n`;\n\nexport const mutationSubmitBid = gql`\n  mutation SubmitBid($bidRequestId: ID!, $input: BidInput!) {\n    submitBid(bidRequestId: $bidRequestId, input: $input) {\n      id\n    }\n  }\n`;\n\nexport const mutationSubcontractorSubmitBid = gql`\n  mutation SubcontractorSubmitBid($bidRequestId: ID!, $input: BidInput!) {\n    subcontractorSubmitBid(bidRequestId: $bidRequestId, input: $input) {\n      id\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\n\nimport Modal from 'shared/components/Modal';\nimport { SectionTitle } from 'shared/components/Styles';\n\nexport const StyledBidFormModal = styled(Modal)`\n  max-width: 800px;\n`;\n\nexport const SubcontractorSection = styled.div`\n  display: flex;\n`;\n\nexport const ContactsListSection = styled.div`\n  margin-left: 40px;\n\n  /* Same as subcontractor name height + subcontractor name margin bottom: */\n  margin-top: 35px;\n`;\n\nexport const PullUp = styled.div`\n  margin-top: -30px;\n`;\n\nexport const Spacer = styled.div`\n  height: 50px;\n`;\n\nexport const StyledSectionTitle = styled(SectionTitle)`\n  padding: 10px 0 20px;\n`;\n","import React, { useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport toast from 'shared/utils/toast';\nimport { buildAttachableName } from 'shared/utils/documents';\nimport Form from 'shared/components/Form';\nimport Field from 'shared/components/Field';\nimport SubcontractorInfo, { SubcontractorInfoProps } from 'shared/components/SubcontractorInfo';\nimport ContactsList from 'shared/components/ContactsList';\nimport ModalFormBody from 'shared/components/ModalFormBody';\nimport { DocumentsTableSingle } from 'shared/components/DocumentsTable';\nimport { SectionTitle, HeadingMedium } from 'shared/components/Styles';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { DOCUMENT_ENTITY } from '__graphql__/globalTypes';\n\nimport {\n  draftBid,\n  subcontractorDraftBid,\n  mutationSubmitBid,\n  mutationSubcontractorSubmitBid,\n} from './api';\nimport { StyledSectionTitle, SubcontractorSection, ContactsListSection, PullUp } from './Styles';\nimport { BidFormModal_bidRequest } from './__graphql__/BidFormModal_bidRequest';\nimport { SubmitBid, SubmitBidVariables } from './__graphql__/SubmitBid';\nimport {\n  SubcontractorSubmitBid,\n  SubcontractorSubmitBidVariables,\n} from './__graphql__/SubcontractorSubmitBid';\nimport { DraftBid, DraftBidVariables } from './__graphql__/DraftBid';\nimport {\n  SubcontractorDraftBid,\n  SubcontractorDraftBidVariables,\n} from './__graphql__/SubcontractorDraftBid';\n\ninterface Props {\n  subcontractor?: SubcontractorInfoProps['subcontractor'];\n  bidRequest: BidFormModal_bidRequest;\n  isUserSubcontractor: boolean;\n  refetchQueries?: () => string[];\n  closeModal: () => void;\n}\n\ninterface FormValues {\n  message: string;\n  totalAmount: string;\n}\n\nconst BidFormModalForm: React.FC<Props> = ({\n  subcontractor,\n  bidRequest,\n  isUserSubcontractor,\n  refetchQueries = [],\n  closeModal,\n}) => {\n  const { t } = useTranslation();\n  const documentsCount = useRef(0);\n\n  const { error, ...results } = useQuery<\n    DraftBid & SubcontractorDraftBid,\n    DraftBidVariables & SubcontractorDraftBidVariables\n  >(isUserSubcontractor ? subcontractorDraftBid : draftBid, {\n    variables: { bidRequestId: bidRequest.id },\n  });\n\n  const [submitBid, { loading: mutating }] = useMutation<\n    SubmitBid & SubcontractorSubmitBid,\n    SubmitBidVariables & SubcontractorSubmitBidVariables\n  >(isUserSubcontractor ? mutationSubcontractorSubmitBid : mutationSubmitBid, {\n    refetchQueries,\n    awaitRefetchQueries: true,\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(results)) return <PageLoader />;\n\n  const { data } = results;\n  const bid = data[isUserSubcontractor ? 'subcontractorDraftBid' : 'draftBid'];\n\n  const attachableName = subcontractor\n    ? buildAttachableName([t<string>('documentsTable.bidDocuments'), subcontractor.name])\n    : t('documentsTable.bidDocuments');\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        message: bid.message || '',\n        totalAmount: String(bid.totalAmount || ''),\n      }}\n      validations={{\n        message: Form.is.maxLength(60000),\n        totalAmount: [Form.is.required(), Form.is.min(1)],\n      }}\n      onSubmit={values => {\n        if (documentsCount.current === 0) {\n          toast.error(t('bidFormModal.documentsError'));\n          return;\n        }\n        submitBid({\n          variables: {\n            bidRequestId: bidRequest.id,\n            input: {\n              ...values,\n              totalAmount: parseFloat(values.totalAmount),\n            },\n          },\n        }).then(() => {\n          toast.success(t('bidFormModal.bidAdded'));\n          closeModal();\n        }, toast.error);\n      }}\n    >\n      <ModalFormBody close={closeModal} working={mutating} submitText=\"submit\">\n        <HeadingMedium>{t('bidFormModal.addBid')}</HeadingMedium>\n        {subcontractor ? (\n          <SubcontractorSection>\n            <SubcontractorInfo subcontractor={subcontractor} />\n            <ContactsListSection>\n              <ContactsList bidInvites={bidRequest.bidInvites} />\n            </ContactsListSection>\n          </SubcontractorSection>\n        ) : (\n          <PullUp />\n        )}\n        <SectionTitle>{t('bidFormModal.enterDetails')}</SectionTitle>\n        <Field.Textarea name=\"message\" label={t('bid.message')} />\n        <Field.CurrencyInput\n          required\n          name=\"totalAmount\"\n          placeholder={t('bidFormModal.totalAmountPlaceholder')}\n          label={t('bid.totalAmount')}\n          icon=\"euro\"\n        />\n        <Form.RequiredFieldsNote />\n        <StyledSectionTitle>{t('bidFormModal.uploadDocuments')}</StyledSectionTitle>\n        <DocumentsTableSingle\n          attachableType={DOCUMENT_ENTITY.Bid}\n          attachableId={bid.id}\n          attachableName={attachableName}\n          onDocumentsCountChange={count => (documentsCount.current = count)}\n        />\n      </ModalFormBody>\n    </Form>\n  );\n};\n\nexport default BidFormModalForm;\n","import React from 'react';\n\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport { ModalContentProps } from 'shared/components/Modal/ModalContent';\nimport { SubcontractorInfoProps } from 'shared/components/SubcontractorInfo';\n\nimport BidFormModalForm from './Form';\nimport { StyledBidFormModal } from './Styles';\nimport { BidFormModal_bidRequest } from './__graphql__/BidFormModal_bidRequest';\n\ninterface Props {\n  bidRequest: BidFormModal_bidRequest;\n  subcontractor?: SubcontractorInfoProps['subcontractor'];\n  isUserSubcontractor: boolean;\n  refetchQueries: () => string[];\n  renderLink: ModalContentProps['renderLink'];\n}\n\nconst BidFormModal: React.FC<Props> = ({\n  bidRequest,\n  subcontractor,\n  isUserSubcontractor,\n  refetchQueries,\n  renderLink,\n}) => {\n  return (\n    <StyledBidFormModal\n      variant={MODAL_VARIANTS.aside}\n      renderLink={renderLink}\n      renderContent={modal => (\n        <BidFormModalForm\n          subcontractor={subcontractor}\n          bidRequest={bidRequest}\n          isUserSubcontractor={isUserSubcontractor}\n          refetchQueries={refetchQueries}\n          closeModal={modal.close}\n        />\n      )}\n    />\n  );\n};\n\nexport { fragmentBidFormModal } from './api';\nexport default BidFormModal;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst formatCurrency = (locale: string, value: number) => {\n  if (!value && value !== 0) return value;\n\n  const currencyCode = 'EUR';\n  const formattedValue = new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency: currencyCode,\n  })\n    .format(value)\n    .replace('€', '')\n    .trim();\n  const nonBreakingSpace = '\\u00A0';\n\n  return formattedValue + nonBreakingSpace + currencyCode;\n};\n\ninterface CurrencyFormatterProps {\n  value: number;\n}\n\nconst CurrencyFormatter: React.FC<CurrencyFormatterProps> = ({ value }) => {\n  const { i18n } = useTranslation();\n\n  return <>{formatCurrency(i18n.language, value)}</>;\n};\n\nexport { formatCurrency };\nexport default CurrencyFormatter;\n","import styled from 'styled-components/macro';\n\nimport Modal from 'shared/components/Modal';\nimport { COLOR, font, mediaQueries } from 'shared/utils/styles';\n\nexport const StyledBidModal = styled(Modal)`\n  max-width: 800px;\n\n  @media ${mediaQueries.mobile} {\n    padding: 20px;\n    padding-top: 50px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 50px;\n  }\n`;\n\nexport const SubcontractorSection = styled.div`\n  display: flex;\n`;\n\nexport const ContactsListSection = styled.div`\n  margin-left: 40px;\n\n  /* Same as subcontractor name height + subcontractor name margin bottom: */\n  margin-top: 35px;\n`;\n\nexport const PullUp = styled.div`\n  margin-top: -30px;\n`;\n\nexport const Details = styled.div`\n  border: 1px solid ${COLOR.borderLight};\n  border-radius: 4px;\n\n  @media ${mediaQueries.desktop} {\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const DetailsSection = styled.div`\n  @media ${mediaQueries.mobile} {\n    margin: 20px 10px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 25px 30px;\n    &:nth-of-type(1) {\n      width: 50%;\n    }\n    &:nth-of-type(2) {\n      width: 50%;\n      border-left: 1px solid ${COLOR.borderLight};\n    }\n    &:nth-of-type(3) {\n      width: 100%;\n      border-top: 1px solid ${COLOR.borderLight};\n    }\n  }\n`;\n\nexport const DetailsTitle = styled.div`\n  padding-bottom: 15px;\n  color: ${COLOR.textMedium};\n  ${font.size(13)};\n`;\n\nexport const DetailsTotalAmount = styled.div`\n  color: ${COLOR.success};\n  ${font.size(17)}\n  ${font.medium}\n`;\n\nexport const DetailsDateTime = styled.div`\n  ${font.size(13)}\n`;\n\nexport const DetailsMessage = styled.p`\n  white-space: pre-wrap;\n  ${font.size(13)}\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport gql from 'graphql-tag';\n\nimport { formatDateTime } from 'shared/utils/dateTime';\nimport { buildAttachableName } from 'shared/utils/documents';\nimport CurrencyFormatter from 'shared/components/CurrencyFormatter';\nimport { DocumentsTableSingle } from 'shared/components/DocumentsTable';\nimport SubcontractorInfo, {\n  fragmentSubcontractorInfo,\n  SubcontractorInfoProps,\n} from 'shared/components/SubcontractorInfo';\nimport ContactsList, {\n  fragmentContactsList,\n  ContactsListProps,\n} from 'shared/components/ContactsList';\nimport { HeadingMedium, SectionTitle } from 'shared/components/Styles';\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport { DOCUMENT_ENTITY } from '__graphql__/globalTypes';\n\nimport { ModalProps } from '../Modal';\n\nimport {\n  StyledBidModal,\n  SubcontractorSection,\n  ContactsListSection,\n  PullUp,\n  Details,\n  DetailsSection,\n  DetailsTitle,\n  DetailsTotalAmount,\n  DetailsDateTime,\n  DetailsMessage,\n} from './Styles';\n\nexport const fragmentBidModal = gql`\n  fragment BidModal_bid on Bid {\n    id\n    totalAmount\n    submittedAt\n    message\n  }\n  fragment BidModal_bidRequest on BidRequest {\n    id\n    ...ContactsList_bidRequest\n    subcontractor {\n      id\n      ...SubcontractorInfo_subcontractorInfo\n    }\n  }\n  ${fragmentSubcontractorInfo}\n  ${fragmentContactsList}\n`;\n\nexport interface BidModalProps {\n  bid: {\n    id: string;\n    totalAmount: number;\n    submittedAt: string;\n    message: string | null;\n  };\n  subcontractor?: SubcontractorInfoProps['subcontractor'];\n  bidInvites: ContactsListProps['bidInvites'];\n  renderLink: ModalProps['renderLink'];\n}\n\nconst BidModal = ({ bid, subcontractor, bidInvites, renderLink }: BidModalProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <StyledBidModal\n      variant={MODAL_VARIANTS.aside}\n      renderLink={renderLink}\n      renderContent={() => (\n        <>\n          <HeadingMedium>{t('bidModal.bidSummary')}</HeadingMedium>\n          {subcontractor ? (\n            <SubcontractorSection>\n              <SubcontractorInfo subcontractor={subcontractor} />\n              <ContactsListSection>\n                <ContactsList bidInvites={bidInvites} />\n              </ContactsListSection>\n            </SubcontractorSection>\n          ) : (\n            <PullUp />\n          )}\n          <SectionTitle>{t('bidModal.details')}</SectionTitle>\n          <Details>\n            <DetailsSection>\n              <DetailsTitle>{t('bid.totalAmount')}</DetailsTitle>\n              <DetailsTotalAmount data-cy-bid-modal-amount>\n                <CurrencyFormatter value={bid.totalAmount} />\n              </DetailsTotalAmount>\n            </DetailsSection>\n            <DetailsSection>\n              <DetailsTitle>{t('bid.submittedOn')}</DetailsTitle>\n              <DetailsDateTime data-cy-bid-modal-submitted-on>\n                {formatDateTime(bid.submittedAt)}\n              </DetailsDateTime>\n            </DetailsSection>\n            <DetailsSection>\n              <DetailsTitle>{t('bid.message')}</DetailsTitle>\n              <DetailsMessage data-cy-bid-modal-message>{bid.message || '-'}</DetailsMessage>\n            </DetailsSection>\n          </Details>\n          <SectionTitle>{t('bidModal.documents')}</SectionTitle>\n          <DocumentsTableSingle\n            attachableType={DOCUMENT_ENTITY.Bid}\n            attachableId={bid.id}\n            attachableName={buildAttachableName([\n              String(t('documentsTable.bidDocuments')),\n              subcontractor?.name,\n            ])}\n            isReadOnly\n          />\n        </>\n      )}\n    />\n  );\n};\n\nexport default BidModal;\n","import styled, { css } from 'styled-components/macro';\nimport * as CSS from 'csstype';\n\nimport Spinner from 'shared/components/Spinner';\nimport Icon from 'shared/components/Icon';\nimport { COLOR, font, mixin, mediaQueries } from 'shared/utils/styles';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  background: #fff;\n`;\n\nexport const TableElement = styled.table`\n  width: 100%;\n  table-layout: fixed;\n  border-spacing: 0;\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        display: block;\n      }\n    `}\n`;\n\ninterface HeaderProps {\n  textAlign?: CSS.TextAlignProperty;\n  fixedWidth?: number;\n  percentWidth?: number;\n}\n\nexport const Header = styled.th<HeaderProps>`\n  position: sticky;\n  left: 0;\n  top: 0;\n  padding: 0;\n  z-index: 1;\n  background: #fff;\n  line-height: 1.2;\n  color: ${COLOR.textMedium};\n  border-bottom: 1px solid ${COLOR.borderLight};\n  text-align: ${props => props.textAlign || 'left'};\n\n  /*\n    Fix for Edge, where border-bottom can be covered by the background on sticky elements:\n    https://stackoverflow.com/questions/41882616/why-border-is-not-visible-with-position-sticky-when-background-color-exists\n  */\n  background-clip: padding-box;\n\n  ${mixin.truncateText}\n  ${font.size(13)};\n  ${font.regular}\n  ${props =>\n    props.fixedWidth &&\n    css`\n      width: ${props.fixedWidth}px;\n    `}\n  ${props =>\n    props.percentWidth &&\n    css`\n      width: ${props.percentWidth}%;\n    `}\n  &:first-child {\n    padding-left: 5px;\n    border-top-left-radius: 4px;\n  }\n  &:last-child {\n    border-top-right-radius: 4px;\n  }\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        display: none;\n      }\n    `}\n`;\n\ninterface HeaderTextProps {\n  hasSort: boolean;\n}\n\nexport const HeaderText = styled.div<HeaderTextProps>`\n  display: inline-block;\n  padding: 14px 10px 14px 12px;\n  ${props => props.hasSort && headerTextSortStyles};\n`;\n\nconst headerTextSortStyles = `\n  position: relative;\n  padding-right: 15px;\n  ${mixin.clickable}\n`;\n\nexport const SortIcon = styled(Icon)`\n  position: absolute;\n  top: 15px;\n  right: 0;\n  font-size: 13px;\n  color: ${COLOR.textLight};\n`;\n\nexport const TableBody = styled.tbody`\n  position: relative;\n  opacity: 1;\n  transition: opacity 0.15s;\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        display: block;\n      }\n    `}\n`;\n\ninterface StyledRowProps {\n  isHighlighted: boolean;\n}\n\nexport const StyledRow = styled.tr<StyledRowProps>`\n  ${props => props.isHighlighted && `background: ${COLOR.backgroundLight};`}\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        display: block;\n        border-top: 1px solid ${COLOR.borderLight};\n\n        ${TableBody} &:first-child {\n          border-top: 0;\n        }\n      }\n    `}\n`;\n\ninterface CellProps {\n  textAlign?: CSS.TextAlignProperty;\n}\n\nexport const Cell = styled.td<CellProps>`\n  position: relative;\n  padding: 0;\n  border-top: 1px solid ${COLOR.borderLight};\n  line-height: 1.2;\n  color: ${COLOR.textDark};\n  ${font.size(14)};\n\n  &:first-child {\n    padding-left: 5px;\n  }\n\n  ${props =>\n    props.textAlign &&\n    css`\n      text-align: ${props.textAlign};\n      div {\n        margin: auto;\n      }\n    `}\n\n  ${/* sc-selector */ StyledRow}:first-child & {\n    border-top: 0;\n  }\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        display: block;\n        margin: 20px 0;\n        border-top: 0;\n\n        &:first-child {\n          padding-left: 0;\n        }\n      }\n    `}\n`;\n\nexport const CellMobileLabel = styled.div`\n  padding: 0 10px 0 12px;\n  color: ${COLOR.textMedium};\n`;\n\nexport const CellIcon = styled.div`\n  i {\n    position: absolute;\n    top: 18px;\n    left: 10px;\n    font-size: 18px;\n    color: ${COLOR.textDark};\n    ${mixin.clickable};\n  }\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        width: 24px;\n        height: 24px;\n\n        i {\n          top: 0px;\n          left: 10px;\n        }\n      }\n    `}\n`;\n\nexport const CellText = styled.div`\n  padding: 20px 10px 20px 12px;\n  ${mixin.truncateText}\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        padding: 10px 10px 0 12px;\n      }\n    `}\n`;\n\nexport const CellLink = styled.span`\n  display: block;\n  width: 100%;\n  padding: 20px 10px 20px 12px;\n  text-align: left;\n  ${mixin.link()}\n  ${mixin.truncateText}\n\n${props =>\n  props.theme.isResponsive &&\n  css`\n    @media ${mediaQueries.mobile} {\n      padding: 10px 10px 0 12px;\n    }\n  `}\n`;\n\nexport const StyledSpinner = styled(Spinner)`\n  position: absolute;\n  top: 7px;\n  right: 16px;\n`;\n","import React from 'react';\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from 'react-router-dom';\n\nimport Clickable, { ClickableProps } from 'shared/components/Clickable';\n\nimport { CellText, CellIcon, CellLink } from './Styles';\n\ntype LinkProps = ClickRedirectLink | RoutingLink;\n\ninterface ClickRedirectLink {\n  onClick: ClickableProps['onClick'];\n}\n\ninterface RoutingLink {\n  to: RouterLinkProps['to'];\n  children?: React.ReactNode;\n}\n\nconst isClickLink = (linkProps: LinkProps): linkProps is ClickRedirectLink =>\n  !!(linkProps as ClickRedirectLink).onClick;\n\nconst Link = (linkProps: LinkProps) => {\n  return isClickLink(linkProps) ? (\n    <CellLink as={Clickable} {...linkProps} />\n  ) : (\n    <CellLink as={RouterLink} {...linkProps} />\n  );\n};\n\nconst Cell = {\n  Text: CellText,\n  Icon: CellIcon,\n  Link,\n};\n\nexport default Cell;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport { IconProps } from 'shared/components/Icon';\n\nexport const StyledPagination = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 10px 0;\n  color: ${COLOR.textMedium};\n  ${font.size(14)}\n`;\n\nexport const Arrow = styled.div<IconProps>`\n  vertical-align: middle;\n  display: inline-block;\n  margin: 0 3px;\n  height: 34px;\n  width: 34px;\n  line-height: 32px;\n  text-align: center;\n  border: 1px solid ${COLOR.borderLight};\n  border-radius: 4px;\n  background: #fff;\n  ${mixin.clickable}\n`;\n\nexport const Text = styled.div`\n  padding: 20px;\n  ${font.size(13)}\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Icon from 'shared/components/Icon';\nimport { DisabledIcon } from 'shared/components/Styles';\n\nimport { StyledPagination, Arrow, Text } from './Styles';\n\n// Elasticsearch does not support pagination past 10,000 records\n// so we need to limit pagination\nconst maxRecords = 10000;\n\ninterface PaginationProps {\n  className?: string;\n  currentOffset: number;\n  itemsPerPage: number;\n  totalRecords: number;\n  onChange: (offset: number) => void;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({\n  className,\n  currentOffset,\n  itemsPerPage,\n  totalRecords,\n  onChange,\n}) => {\n  const { t } = useTranslation();\n  const accessibleRecords = totalRecords > maxRecords ? maxRecords : totalRecords;\n  const currentPage = Math.floor(currentOffset / itemsPerPage) + 1;\n  const totalPages = Math.ceil(accessibleRecords / itemsPerPage);\n\n  const startIndex = totalRecords ? (currentPage - 1) * itemsPerPage + 1 : 0;\n  const endIndex = Math.min(currentPage * itemsPerPage, totalRecords);\n\n  const handleChange = (page: number): void => {\n    const newOffset = (page - 1) * itemsPerPage;\n    onChange(newOffset);\n  };\n\n  return (\n    <StyledPagination className={className} data-cy-pagination>\n      <Text>\n        {totalRecords > maxRecords\n          ? t('showingManyResults', { count: maxRecords, startIndex, endIndex })\n          : t('showingResults', { count: totalRecords, startIndex, endIndex })}\n      </Text>\n      {currentPage > 1 ? (\n        <Arrow\n          as={Icon}\n          type=\"arrow-left\"\n          onClick={() => handleChange(currentPage - 1)}\n          data-cy-pagination-prev-page\n        />\n      ) : (\n        <Arrow as={DisabledIcon} type=\"arrow-left\" data-cy-pagination-prev-page />\n      )}\n      {currentPage < totalPages ? (\n        <Arrow\n          as={Icon}\n          type=\"arrow-right\"\n          onClick={() => handleChange(currentPage + 1)}\n          data-cy-pagination-next-page\n        />\n      ) : (\n        <Arrow as={DisabledIcon} type=\"arrow-right\" data-cy-pagination-next-page />\n      )}\n    </StyledPagination>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport DefaultButton from 'shared/components/Button';\n\nconst EmptyContent = styled.div`\n  padding: 30px 0;\n  text-align: center;\n  color: ${COLOR.textLightBlue};\n  ${font.size(18)};\n`;\n\nconst CallToAction = styled.div`\n  padding: 15px 30px;\n  color: ${COLOR.textDark};\n  ${font.bold}\n  ${font.size(21)}\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Explanation = styled.div`\n  padding: 15px 30px;\n  color: ${COLOR.textLight};\n  ${font.size(14)}\n  line-height: 1.5;\n`;\n\nconst Button = styled(DefaultButton).attrs(() => ({ hollow: true }))``;\n\ntype EmptyContentWithSubcomponents = typeof EmptyContent & {\n  CallToAction: typeof CallToAction;\n  Explanation: typeof Explanation;\n  Button: typeof Button;\n};\n\n(EmptyContent as EmptyContentWithSubcomponents).CallToAction = CallToAction;\n(EmptyContent as EmptyContentWithSubcomponents).Explanation = Explanation;\n(EmptyContent as EmptyContentWithSubcomponents).Button = Button;\n\nexport default EmptyContent as EmptyContentWithSubcomponents;\n","import { useState } from 'react';\n\nimport { SortDirection } from 'shared/constants';\n\nimport {\n  QueryVariables,\n  SortVariables,\n  Refetch,\n  GetSortVariables,\n  GetSortIcon,\n  ChangeSort,\n} from './types';\n\ninterface UseSortArgs {\n  refetch: Refetch;\n  variables: QueryVariables;\n}\n\nconst useSort = ({ refetch, variables }: UseSortArgs) => {\n  const [sort, setSort] = useState<Partial<SortVariables>>(variables);\n\n  const getSortVariables: GetSortVariables = sortField => {\n    const { sortBy, sortDirection } = sort;\n\n    if (sortField === sortBy && sortDirection === SortDirection.asc) {\n      return { sortBy, sortDirection: SortDirection.desc };\n    }\n\n    return { sortBy: sortField, sortDirection: SortDirection.asc };\n  };\n\n  const getSortIcon: GetSortIcon = sortField => {\n    const { sortBy, sortDirection } = sort;\n\n    if (sortField === sortBy) {\n      return sortDirection === SortDirection.asc ? 'sort-down' : 'sort-up';\n    }\n    return 'sort';\n  };\n\n  const changeSort: ChangeSort = (sortField?) => {\n    if (sortField) {\n      const sortVariables = getSortVariables(sortField);\n\n      setSort(sortVariables);\n      refetch({ offset: 0, ...sortVariables });\n    }\n  };\n\n  return { getSortIcon, changeSort };\n};\n\nexport default useSort;\n","import React, { ReactElement } from 'react';\n\nimport { Header, HeaderText, SortIcon } from './Styles';\nimport { GetSortIcon, ChangeSort, Column } from './types';\n\ninterface HeadersProps {\n  columns: Column[];\n  getSortIcon: GetSortIcon;\n  changeSort: ChangeSort;\n}\n\nconst Headers = ({ columns, getSortIcon, changeSort }: HeadersProps): ReactElement => {\n  return (\n    <thead>\n      <tr>\n        {columns.map((column, i) => (\n          <Header\n            key={i}\n            percentWidth={column.percentWidth}\n            fixedWidth={column.fixedWidth}\n            textAlign={column.textAlign}\n            style={column.style}\n          >\n            {column.label && (\n              <HeaderText hasSort={!!column.sortField} onClick={() => changeSort(column.sortField)}>\n                {column.label}\n                {column.sortField && <SortIcon type={getSortIcon(column.sortField)} />}\n              </HeaderText>\n            )}\n          </Header>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n\nexport default Headers;\n","import React, { useContext, ReactElement } from 'react';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\n\nimport { TableBody, StyledRow, Cell, CellMobileLabel } from './Styles';\nimport { Column, RowType } from './types';\n\ninterface RowsProps {\n  columns: Column[];\n  rows: RowType[];\n  highlightedRowId?: string;\n  isResponsive?: boolean;\n}\n\nconst Rows = ({ rows, highlightedRowId = '', columns, isResponsive }: RowsProps): ReactElement => {\n  const { isMobile } = useContext(QueryMatchesContext);\n  return (\n    <TableBody>\n      {rows.map(cells => (\n        <StyledRow\n          key={cells.props.rowId}\n          isHighlighted={Boolean(highlightedRowId === cells.props.rowId)}\n          data-cy-row-key={cells.props.rowId}\n        >\n          {React.Children.toArray(cells.props.children)\n            .filter(Boolean)\n            .map((cell, j) => (\n              <Cell\n                key={j}\n                data-cy-cell-name={columns[j].testIdentifier}\n                textAlign={columns[j].textAlign}\n              >\n                {isResponsive && isMobile && columns[j].label && (\n                  <CellMobileLabel>{columns[j].label}:</CellMobileLabel>\n                )}\n                {cell}\n              </Cell>\n            ))}\n        </StyledRow>\n      ))}\n    </TableBody>\n  );\n};\n\nexport default Rows;\n","import React, { ReactNode } from 'react';\n\nexport interface RowProps {\n  rowId: string;\n  children: ReactNode;\n}\n\nconst Row: React.FC<RowProps> = ({ children }) => {\n  return <>{children}</>;\n};\n\nexport default Row;\n","import React, { useEffect, ReactNode, ReactElement } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ThemeProvider } from 'styled-components/macro';\n\nimport { TABLE_ITEMS_PER_PAGE } from 'shared/constants';\nimport Pagination from 'shared/components/Pagination';\nimport EmptyContent from 'shared/components/EmptyContent';\n\nimport { QueryVariables, Refetch, Column, RowType } from './types';\nimport { TableElement, Wrapper } from './Styles';\nimport useSort from './useSort';\nimport Headers from './Headers';\nimport Rows from './Rows';\nimport Row from './Row';\n\nexport interface TableProps {\n  columns: Column[];\n  rows: RowType[];\n  highlightedRowId?: string;\n  totalRecords?: number;\n  refetch?: Refetch;\n  variables?: QueryVariables;\n  contentIfEmpty?: () => ReactNode;\n  isResponsive?: boolean;\n}\n\nconst Table = ({\n  columns,\n  rows,\n  highlightedRowId,\n  totalRecords,\n  refetch = () => {},\n  variables = {},\n  contentIfEmpty,\n  isResponsive,\n  ...props\n}: TableProps): ReactElement | null => {\n  const { t } = useTranslation();\n\n  const { getSortIcon, changeSort } = useSort({ refetch, variables });\n\n  const getTheme = (parentTheme: {}) => ({ ...parentTheme, isResponsive });\n\n  const isFiltered = variables.query && variables.query.length > 0;\n  const isEmpty = rows.length === 0;\n  const currentOffset = variables.offset || 0;\n  const itemsPerPage = variables.limit || TABLE_ITEMS_PER_PAGE;\n\n  useEffect(() => {\n    if (isEmpty && currentOffset !== 0) {\n      refetch({ offset: currentOffset - itemsPerPage });\n    }\n  }, [isEmpty, currentOffset, itemsPerPage, refetch]);\n\n  if (isEmpty && currentOffset !== 0) {\n    return null;\n  }\n\n  if (isEmpty) {\n    return (\n      <Wrapper {...props}>\n        <EmptyContent>\n          {contentIfEmpty && !isFiltered ? contentIfEmpty() : t('noResults')}\n        </EmptyContent>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={getTheme}>\n        <Wrapper {...props}>\n          <TableElement>\n            <Headers columns={columns} getSortIcon={getSortIcon} changeSort={changeSort} />\n            <Rows\n              rows={rows}\n              highlightedRowId={highlightedRowId}\n              columns={columns}\n              isResponsive={isResponsive}\n            />\n          </TableElement>\n        </Wrapper>\n      </ThemeProvider>\n      {!!totalRecords && (\n        <Pagination\n          totalRecords={totalRecords}\n          currentOffset={currentOffset}\n          itemsPerPage={itemsPerPage}\n          onChange={offset => refetch({ offset })}\n        />\n      )}\n    </>\n  );\n};\n\nTable.Row = Row;\n\nexport default Table;\n","export const TABLE_ITEMS_PER_PAGE = 10;\n","import styled, { css } from 'styled-components/macro';\n\nimport { mixin, mediaQueries } from 'shared/utils/styles';\nimport Clickable from 'shared/components/Clickable';\n\nexport const TotalAmountCell = styled(Clickable)`\n  padding: 20px 10px 20px 12px;\n  ${mixin.truncateText}\n  ${mixin.link()}\n\n  ${props =>\n    props.theme.isResponsive &&\n    css`\n      @media ${mediaQueries.mobile} {\n        padding: 10px 10px 0 12px;\n      }\n    `}\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport gql from 'graphql-tag';\n\nimport { formatDate } from 'shared/utils/dateTime';\nimport BidModal, { fragmentBidModal, BidModalProps } from 'shared/components/BidModal';\nimport Cell from 'shared/components/Table/Cell';\nimport CurrencyFormatter from 'shared/components/CurrencyFormatter';\nimport Table from 'shared/components/Table';\nimport Row from 'shared/components/Table/Row';\n\nimport { TotalAmountCell } from './Styles';\n\nconst fragmentBidsList = gql`\n  fragment BidsList_bidsList on BidRequest {\n    currentBidId\n    ...BidModal_bidRequest\n    bids {\n      id\n      totalAmount\n      submittedAt\n      ...BidModal_bid\n    }\n  }\n  ${fragmentBidModal}\n`;\n\ninterface Bid {\n  id: string;\n  totalAmount: number;\n  submittedAt: string;\n}\n\ninterface BidsListProps {\n  isResponsive?: boolean;\n  bids: Array<BidModalProps['bid'] & Bid>;\n  subcontractor: BidModalProps['subcontractor'];\n  currentBidId: string | null;\n  bidInvites: BidModalProps['bidInvites'];\n}\n\nconst BidsList: React.FC<BidsListProps> = ({\n  bids,\n  currentBidId,\n  subcontractor,\n  bidInvites,\n  isResponsive = false,\n}) => {\n  const { t } = useTranslation();\n  const currentBid = bids.find(({ id }) => id === currentBidId);\n  const previousBids = bids.filter(({ id }) => id !== currentBidId);\n  const sortedBids = previousBids.sort(\n    (a, b) => new Date(b.submittedAt).getTime() - new Date(a.submittedAt).getTime(),\n  );\n  if (currentBid) {\n    sortedBids.unshift(currentBid);\n  }\n\n  const bidRows = sortedBids.map(bid => (\n    <Row rowId={bid.id}>\n      <BidModal\n        bid={bid}\n        subcontractor={subcontractor}\n        bidInvites={bidInvites}\n        renderLink={modal => (\n          <TotalAmountCell data-cy-button-name=\"totalAmount\" onClick={modal.open}>\n            <CurrencyFormatter value={bid.totalAmount} />\n            {bid.id === currentBidId ? ` ${t('bidList.latest')}` : ''}\n          </TotalAmountCell>\n        )}\n      />\n      <Cell.Text>{formatDate(bid.submittedAt)}</Cell.Text>\n    </Row>\n  ));\n  return (\n    <Table\n      data-cy-bids-list\n      isResponsive={isResponsive}\n      columns={[{ label: t('bid.totalAmount'), percentWidth: 58 }, { label: t('bid.submittedOn') }]}\n      rows={bidRows}\n    />\n  );\n};\n\nexport { fragmentBidsList };\nexport default BidsList;\n","import styled from 'styled-components/macro';\n\nimport { mixin } from 'shared/utils/styles';\nimport Clickable from 'shared/components/Clickable';\n\nexport default styled(Clickable)`\n  ${mixin.link()}\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\nimport { DocumentNode } from 'graphql';\n\nimport toast from 'shared/utils/toast';\nimport IconClickable from 'shared/components/IconClickable';\nimport ConfirmationModal, { ConfirmationModalProps } from 'shared/components/ConfirmationModal';\nimport { BUTTON_VARIANT } from 'shared/constants';\n\ninterface DeletionModalProps {\n  id?: string;\n  mutation: DocumentNode;\n  refetchQueries?: () => string[];\n  renderLink?: ConfirmationModalProps['renderLink'];\n  titleKey?: string;\n  messageKey?: string;\n  confirmTextKey?: string;\n  successKey?: string;\n}\n\nconst DeletionModal: React.FC<DeletionModalProps> = ({\n  id,\n  mutation,\n  refetchQueries,\n  renderLink = modal => <IconClickable onClick={modal.open} type=\"delete\" />,\n  titleKey = 'confirmDeleteMessage',\n  messageKey = 'confirmDeleteDescription',\n  confirmTextKey = 'delete',\n  successKey = 'itemDeleted',\n}) => {\n  const { t } = useTranslation();\n\n  const [mutate, { loading: mutating }] = useMutation(mutation, {\n    refetchQueries,\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <ConfirmationModal\n      confirmationButtonVariant={BUTTON_VARIANT.danger}\n      title={titleKey}\n      message={messageKey}\n      confirmText={confirmTextKey}\n      renderLink={renderLink}\n      isWorking={mutating}\n      onConfirm={async () => {\n        try {\n          await mutate({ variables: { id } });\n          toast.success(t(successKey));\n          // Closing the modal is not necessary (or possible) here\n          // because by the time this function runs, the modal has\n          // already been unmounted from the DOM.\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default DeletionModal;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\n\nimport { truncate } from 'shared/utils/javascript';\n\ninterface HtmlHeadTagsProps {\n  title: string;\n}\n\nconst HtmlHeadTags: React.FC<HtmlHeadTagsProps> = ({ title }) => {\n  const { t } = useTranslation('pageTitles');\n\n  return (\n    <Helmet>\n      <title>{`${truncate(t(title), { length: 100 })} | Cosuno`}</title>\n    </Helmet>\n  );\n};\n\nexport default HtmlHeadTags;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Icon, { IconProps } from 'shared/components/Icon';\n\ninterface IconLinkProps {\n  className?: string;\n  to: string;\n  replace?: boolean;\n}\n\nconst IconLink: React.FC<IconLinkProps & IconProps> = ({ className, to, replace, ...props }) => (\n  <Link className={className} to={to} replace={replace}>\n    <Icon {...props} />\n  </Link>\n);\n\nexport default IconLink;\n","import React from 'react';\n\nimport { COLOR } from 'shared/utils/styles';\n\n// SVG viewBox parameters to determine aspect ratio\nconst viewBoxWidth = 121;\nconst viewBoxHeight = 29;\n\nconst calculateHeight = (width: number) => width * (viewBoxHeight / viewBoxWidth);\n\ninterface LogoProps {\n  className?: string;\n  width?: number;\n  color?: COLOR;\n}\n\nconst Logo: React.FC<LogoProps> = ({ className, width = viewBoxWidth, color = COLOR.primary }) => (\n  <span className={className}>\n    <svg\n      data-cy-app-logo\n      viewBox={`0 0 ${viewBoxWidth} ${viewBoxHeight}`}\n      width={width}\n      height={calculateHeight(width)}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g fill={color} fillRule=\"evenodd\">\n        <path d=\"m8.05251639 8.88709677c-.1941849.308268-.30652632.67327269-.30652632 1.06451613v1.2741936h-3.4677577c-1.1045695 0-2 .8954305-2 2v11.4354838c0 1.1045695.8954305 2 2 2h11.03633363c1.1045695 0 2-.8954305 2-2v-11.4354838c0-1.1045695-.8954305-2-2-2h-3.4677577v-1.2741936c0-.39124344-.1123414-.75624813-.3065263-1.06451613h5.0525164c1.6568543 0 3 1.34314573 3 3.00000003v14.1129032c0 1.6568542-1.3431457 3-3 3h-13.5927984c-1.65685425 0-3-1.3431458-3-3v-14.1129032c0-1.6568543 1.34314575-3.00000003 3-3.00000003z\" />\n        <path d=\"m20.2368057 20.1129032c.2186766-.320629.3465285-.7081468.3465285-1.1255259v-.3723703c0-.300331-.0661982-.5852006-.1847993-.8408135h3.8011374c1.1045695 0 2-.8954305 2-2v-11.43548382c0-1.1045695-.8954305-2-2-2h-11.2641569c-1.1045695 0-2 .8954305-2 2v11.43548382c0 1.1045695.8954305 2 2 2h3.5733141c-.1186011.2556129-.1847993.5404825-.1847993.8408135v.3723703c0 .4173791.127852.8048969.3465286 1.1255259h-5.0132758c-1.6568542 0-2.99999998-1.3431457-2.99999998-3v-14.1129032c0-1.65685425 1.34314578-3 2.99999998-3h13.5927984c1.6568543 0 3 1.34314575 3 3v14.1129032c0 1.6568543-1.3431457 3-3 3z\" />\n        <path\n          d=\"m45.9747293 23.1064516c-1.5947707 0-3.0338397-.3624964-4.3172504-1.0875-1.2834106-.7250036-2.2896199-1.7228431-3.0186579-2.9935484s-1.0935515-2.7012017-1.0935515-4.2915322c0-1.5903306.3645135-3.020827 1.0935515-4.2915323.729038-1.27070527 1.7390443-2.26854475 3.0300491-2.99354838 1.2910048-.72500362 2.7338709-1.0875 4.3286415-1.0875 1.2454399 0 2.3845447.21437958 3.4173486.64314516 1.0328038.42876559 1.9137115 1.0641087 2.6427495 1.90604839l-1.480851 1.47338713c-1.1998751-1.29409252-2.6958994-1.94112906-4.4881178-1.94112906-1.1846868 0-2.2554453.27284673-3.2123076.81854838-.9568624.54570166-1.7048746 1.29797908-2.2440589 2.25685488-.5391844.9588757-.8087725 2.0307736-.8087725 3.2157258 0 1.1849521.2695881 2.25685.8087725 3.2157258.5391843.9588757 1.2871965 1.7111532 2.2440589 2.2568548.9568623.5457017 2.0276208.8185484 3.2123076.8185484 1.7770301 0 3.2730544-.6548322 4.4881178-1.9645161l1.480851 1.4733871c-.729038.8419397-1.6137427 1.4811806-2.6541407 1.9177419s-2.1832998.6548387-3.4287397.6548387zm13.3231029-.0467742c-1.1998751 0-2.2782276-.2728467-3.23509-.8185484-.9568624-.5457016-1.7048745-1.297979-2.2440589-2.2568548-.5391843-.9588758-.8087725-2.0463649-.8087725-3.2625s.2695882-2.3036242.8087725-3.2625c.5391844-.9588758 1.2871965-1.7072554 2.2440589-2.2451613s2.0352149-.8068548 3.23509-.8068548c1.199875 0 2.2744306.2689489 3.2236988.8068548s1.6934834 1.2862855 2.2326677 2.2451613c.5391844.9588758.8087725 2.0463649.8087725 3.2625s-.2695881 2.3036242-.8087725 3.2625c-.5391843.9588758-1.2833995 1.7111532-2.2326677 2.2568548-.9492682.5457017-2.0238238.8185484-3.2236988.8185484zm0-1.9645161c.7746029 0 1.4694568-.1831971 2.0845826-.5495968s1.0973469-.8809106 1.4466776-1.5435484c.3493307-.6626377.5239934-1.4227107.5239934-2.2802419s-.1746627-1.6176042-.5239934-2.2802419c-.3493307-.6626378-.8315518-1.1732509-1.4466776-1.5318549-.6151258-.3586039-1.3099797-.5379032-2.0845826-.5379032s-1.4694568.1792993-2.0845826.5379032c-.6151258.358604-1.1011439.8692171-1.4580687 1.5318549-.3569249.6626377-.5353847 1.4227107-.5353847 2.2802419s.1784598 1.6176042.5353847 2.2802419c.3569248.6626378.8429429 1.1771487 1.4580687 1.5435484s1.3099797.5495968 2.0845826.5495968zm12.3890276 1.9645161c-.9872389 0-1.9364929-.1364233-2.8477904-.4092742-.9112975-.2728508-1.6251365-.6197559-2.1415385-1.0407258l.911293-1.7774193c.5315902.3897869 1.1770829.7016117 1.9364975.9354838.7594146.2338722 1.5264118.3508065 2.3010147.3508065 1.9137248 0 2.8705728-.5612847 2.8705728-1.683871 0-.3741954-.1290986-.670429-.3872995-.8887097-.258201-.2182806-.5809473-.3780908-.9682488-.4794354-.3873014-.1013446-.9378687-.2143811-1.6517184-.3391129-.9720507-.1559148-1.7656271-.3352141-2.3807529-.5379033s-1.142911-.5456965-1.5833715-1.0290322c-.4404604-.4833358-.6606874-1.1615548-.6606874-2.0346774 0-1.1225863.455642-2.0229805 1.3669395-2.7012097s2.1339366-1.0173387 3.6679541-1.0173387c.8049794 0 1.6099468.101343 2.4149263.3040322s1.4656602.4755359 1.9820622.8185484l-.9340753 1.7774194c-.987239-.654842-2.1491259-.9822581-3.4856955-.9822581-.9264858 0-1.6327308.1559124-2.1187561.4677419-.4860254.3118296-.7290344.7249975-.7290344 1.2395162 0 .4053783.1366926.7249988.4100818.9588709.2733893.2338722.6113237.4053758 1.0138134.5145162.4024898.1091403.9682451.2338702 1.6972831.3741935.9720507.1715062 1.758033.3547033 2.3579706.5495968.5999375.1948934 1.1125346.5262073 1.5378068.9939516s.6379051 1.1225764.6379051 1.9645161c0 1.1225863-.467033 2.0151849-1.4011129 2.6778226-.93408.6626377-2.2060803.9939516-3.8160393.9939516zm18.8364253-12.5354839v12.3951613h-2.0731915v-1.8709677c-.4404604.6392505-1.0214039 1.1342724-1.7428477 1.4850806-.7214439.3508082-1.5074262.5262097-2.3579705.5262097-1.609959 0-2.8781623-.4560438-3.8046481-1.3681451-.9264858-.9121014-1.3897218-2.256846-1.3897218-4.0342742v-7.1330646h2.1871031v6.8758065c0 1.2005436.2809792 2.1087335.842946 2.7245968s1.3669342.9237903 2.4149263.9237903c1.1543102 0 2.065594-.3585986 2.7338789-1.0758065.6682848-.7172078 1.0024222-1.7306386 1.0024222-3.0403225v-6.4080646zm10.2474889-.1169354c1.534018 0 2.75286.4560438 3.656563 1.3681451.903704.9121014 1.355549 2.2490504 1.355549 4.0108871v7.1330645h-2.187104v-6.8758064c0-1.2005436-.280979-2.1048357-.842946-2.7129032-.561966-.6080676-1.366934-.9120968-2.414926-.9120968-1.1846866 0-2.1187525.3547007-2.8022257 1.0641129-.6834731.7094121-1.0252045 1.7267407-1.0252045 3.0520161v6.3846774h-2.1871031v-12.3951613h2.0959738v1.8709678c.4404604-.6392505 1.0365919-1.1303746 1.7884124-1.4733871.7518204-.3430125 1.606149-.5145161 2.5630111-.5145161zm13.938226 12.6524193c-1.199875 0-2.278228-.2728467-3.23509-.8185484-.956862-.5457016-1.704875-1.297979-2.244059-2.2568548s-.808772-2.0463649-.808772-3.2625.269588-2.3036242.808772-3.2625 1.287197-1.7072554 2.244059-2.2451613 2.035215-.8068548 3.23509-.8068548 2.274431.2689489 3.223699.8068548 1.693483 1.2862855 2.232667 2.2451613c.539185.9588758.808773 2.0463649.808773 3.2625s-.269588 2.3036242-.808773 3.2625c-.539184.9588758-1.283399 1.7111532-2.232667 2.2568548-.949268.5457017-2.023824.8185484-3.223699.8185484zm0-1.9645161c.774603 0 1.469457-.1831971 2.084583-.5495968.615125-.3663997 1.097346-.8809106 1.446677-1.5435484.349331-.6626377.523994-1.4227107.523994-2.2802419s-.174663-1.6176042-.523994-2.2802419c-.349331-.6626378-.831552-1.1732509-1.446677-1.5318549-.615126-.3586039-1.30998-.5379032-2.084583-.5379032s-1.469457.1792993-2.084583.5379032c-.615125.358604-1.101144.8692171-1.458068 1.5318549-.356925.6626377-.535385 1.4227107-.535385 2.2802419s.17846 1.6176042.535385 2.2802419c.356924.6626378.842943 1.1771487 1.458068 1.5435484.615126.3663997 1.30998.5495968 2.084583.5495968z\"\n          fillRule=\"nonzero\"\n        />\n      </g>\n    </svg>\n  </span>\n);\n\nexport default Logo;\n","import { useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport { queryStringToObject } from 'shared/utils/url';\n\nconst useQueryParamInitialAction = <T>(paramName: string, callback: (param: T) => void): void => {\n  const location = useLocation();\n  const history = useHistory();\n\n  useEffect(() => {\n    const params = queryStringToObject<{ [key: string]: T }>(location.search);\n    const paramValue = params[paramName];\n\n    if (paramValue) {\n      callback(paramValue);\n      history.replace(location.pathname);\n    }\n    // We only need this to trigger once, when the component mounts\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n\nexport default useQueryParamInitialAction;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\n\ninterface FormattedMessageTimeProps {\n  date: string;\n  shortFormat?: boolean;\n}\n\nconst FormattedMessageTime: React.FC<FormattedMessageTimeProps> = ({\n  date,\n  shortFormat = false,\n}) => {\n  const { t } = useTranslation('datesAndTime');\n\n  const yesterday = t('yesterday');\n\n  const format = shortFormat\n    ? {\n        sameDay: 'LT',\n        lastDay: `[${yesterday}]`,\n        lastWeek: 'L',\n        sameElse: 'L',\n      }\n    : {\n        sameDay: 'LT',\n        lastDay: `[${yesterday}], LT`,\n        lastWeek: 'L, LT',\n        sameElse: 'L, LT',\n      };\n\n  // Have to return a fragment due to React typings not being able to handle\n  // string components:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18912\n  return <>{moment(date).calendar(undefined, format)}</>;\n};\n\nexport default FormattedMessageTime;\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport { COLOR, mixin, mediaQueries } from 'shared/utils/styles';\nimport Clickable from 'shared/components/Clickable';\n\nexport const ThreadsListWrapper = styled.div`\n  flex-shrink: 0;\n  width: 375px;\n\n  /* For when we need to display this element with a fixed height, as in the bid\n  package view */\n  overflow: auto;\n\n  @media ${mediaQueries.mobile} {\n    max-width: 100%;\n  }\n\n  @media ${mediaQueries.desktop} {\n    border-right: 1px solid ${COLOR.borderLight};\n\n    /* If the list of threads is longer than the thread details, the border at\n    the bottom of the last thread list item will touch the messages content\n    border. Since there's not really a way for us to detect when this happens,\n    we just add some whitespace between the last thread list item and the bottom\n    of the messages content. */\n    padding-bottom: 100px;\n  }\n`;\n\ninterface ThreadsListItemProps {\n  isSelected: boolean;\n}\n\n// Prettier conflicts with ESLint here\n// eslint-disable-next-line no-unexpected-multiline\nexport const ThreadsListItem = styled(({ isSelected, ...props }) => <Clickable {...props} />)<\n  ThreadsListItemProps\n>`\n  display: block;\n  width: 100%;\n  padding: 15px;\n  border-bottom: 1px solid ${COLOR.borderLight};\n  text-align: left;\n\n  @media ${mediaQueries.mobile} {\n    &:last-child {\n      border-bottom: 0;\n    }\n  }\n\n  ${props =>\n    props.isSelected &&\n    css`\n      background-color: ${COLOR.backgroundMedium};\n\n      ${/* sc-selector */ Time},\n      ${/* sc-selector */ MessageSnippet} {\n        color: ${COLOR.textDark};\n      }\n    `}\n`;\n\nexport const ThreadHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n`;\n\nexport const OtherParticipant = styled.div`\n  ${mixin.link()};\n\n  ${/* sc-selector */ ThreadsListItem}:hover & {\n    text-decoration: underline;\n  }\n`;\n\nexport const Time = styled.div`\n  margin-left: 1em;\n  color: ${COLOR.textLight};\n  white-space: nowrap;\n`;\n\nexport const Subject = styled.div`\n  margin-bottom: 10px;\n`;\n\nexport const MessageSnippet = styled.div`\n  max-height: 2.4em;\n  color: ${COLOR.textLight};\n  line-height: 1.2em;\n  overflow: hidden;\n\n  /* Display ellipsis at the end of the second line in Webkit/Blink browsers */\n  /* stylelint-disable value-no-vendor-prefix, property-no-vendor-prefix */\n  -webkit-line-clamp: 2;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  /* stylelint-enable value-no-vendor-prefix, property-no-vendor-prefix */\n`;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\n\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport { ThreadsList_messageThread } from 'shared/components/Messages/__graphql__/ThreadsList_messageThread';\n\nimport FormattedMessageTime from './FormattedMessageTime';\nimport {\n  ThreadsListWrapper,\n  OtherParticipant,\n  Subject,\n  MessageSnippet,\n  ThreadHeader,\n  Time,\n  ThreadsListItem,\n} from './ThreadsList.styles';\n\nexport const fragmentThreadsList = gql`\n  fragment ThreadsList_messageThread on MessageThread {\n    id\n    subject\n    participatingSubcontractors {\n      id\n      name\n    }\n    participatingCompanyOffice {\n      id\n      name\n    }\n    lastMessage {\n      id\n      createdAt\n      messageText\n      recipientNames\n    }\n  }\n`;\n\nexport interface ThreadsListProps {\n  threads: ThreadsList_messageThread[];\n  onSelectThread: (id: string) => void;\n  activeUserType: COMPANY_TYPE;\n  selectedThreadId: string | null;\n}\n\nconst ThreadsList: React.FC<ThreadsListProps> = ({\n  threads,\n  onSelectThread,\n  activeUserType,\n  selectedThreadId,\n}) => {\n  const { t } = useTranslation('messages');\n\n  const getOtherParticipantNames = (thread: ThreadsList_messageThread): string => {\n    if (activeUserType === COMPANY_TYPE.principal) {\n      if (thread.lastMessage.recipientNames.length === 1) {\n        return thread.lastMessage.recipientNames[0];\n      }\n\n      return t('threadsList.threadParticipants', {\n        name: thread.lastMessage.recipientNames[0],\n        numberOfRemainingParticipants: thread.lastMessage.recipientNames.length - 1,\n      });\n    }\n\n    return thread.participatingCompanyOffice.name;\n  };\n\n  return (\n    <ThreadsListWrapper data-cy-threads-list>\n      {threads.map(thread => {\n        const otherParticipantNames = getOtherParticipantNames(thread);\n\n        return (\n          <ThreadsListItem\n            key={thread.id}\n            onClick={() => onSelectThread(thread.id)}\n            isSelected={thread.id === selectedThreadId}\n          >\n            <ThreadHeader>\n              <OtherParticipant>{otherParticipantNames}</OtherParticipant>\n              <Time data-cy-threads-list-time>\n                <FormattedMessageTime date={thread.lastMessage.createdAt} shortFormat />\n              </Time>\n            </ThreadHeader>\n            <Subject>{thread.subject}</Subject>\n            <MessageSnippet>{thread.lastMessage.messageText}</MessageSnippet>\n          </ThreadsListItem>\n        );\n      })}\n    </ThreadsListWrapper>\n  );\n};\n\nexport default ThreadsList;\n","import styled from 'styled-components/macro';\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\nimport gql from 'graphql-tag';\n\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\nimport Button from 'shared/components/Button';\nimport Form from 'shared/components/Form';\nimport Field from 'shared/components/Field';\nimport PageLoader from 'shared/components/PageLoader';\n\nimport { ButtonWrapper } from './ThreadReplyForm.styles';\nimport {\n  ReplyToMessageThread,\n  ReplyToMessageThreadVariables,\n} from './__graphql__/ReplyToMessageThread';\n\nconst mutationReplyToMessageThread = gql`\n  mutation ReplyToMessageThread(\n    $authorType: COMPANY_TYPE!\n    $messageThreadId: ID!\n    $messageText: String!\n  ) {\n    replyToMessageThread(\n      authorType: $authorType\n      messageThreadId: $messageThreadId\n      messageText: $messageText\n    ) {\n      id\n    }\n  }\n`;\n\nexport interface ThreadReplyFormProps {\n  activeUserType: COMPANY_TYPE;\n  messageThreadId: string;\n  refetchQueries: string[];\n}\n\ninterface FormValues {\n  messageThreadId: string;\n  messageText: string;\n}\n\nconst ThreadReplyForm: React.FC<ThreadReplyFormProps> = ({\n  activeUserType,\n  messageThreadId,\n  refetchQueries,\n}) => {\n  const { t } = useTranslation('messages');\n  const [replyToThread, replyToThreadMeta] = useMutation<\n    ReplyToMessageThread,\n    ReplyToMessageThreadVariables\n  >(mutationReplyToMessageThread, {\n    refetchQueries: () => ['MessageThreadInMessages', ...refetchQueries],\n  });\n\n  const isReplying = replyToThreadMeta.loading;\n\n  const replyToThreadAndHandleErrors = async (values: FormValues) => {\n    try {\n      await replyToThread({ variables: { ...values, authorType: activeUserType } });\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  return (\n    <Form<FormValues>\n      initialValues={{ messageText: '', messageThreadId }}\n      validations={{ messageText: Form.is.required() }}\n      onSubmit={async (values, form) => {\n        form.resetForm();\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        await replyToThreadAndHandleErrors(values);\n      }}\n    >\n      {() => (\n        <Form.Element>\n          {isReplying && <PageLoader />}\n          {!isReplying && (\n            <>\n              <Field.Textarea placeholder={t('newReply.placeholder')} name=\"messageText\" />\n              <ButtonWrapper>\n                <Button type=\"submit\" data-cy-button-name=\"sendReply\">\n                  {t('buttons.send')}\n                </Button>\n              </ButtonWrapper>\n            </>\n          )}\n        </Form.Element>\n      )}\n    </Form>\n  );\n};\n\nexport default ThreadReplyForm;\n","import styled from 'styled-components/macro';\n\nimport { font, COLOR, mediaQueries } from 'shared/utils/styles';\nimport Avatar from 'shared/components/Avatar';\n\nexport const avatarSize = 32;\n\nexport const ThreadDetailsWrapper = styled.div`\n  /* For when we need to display this element with a fixed height, as in the bid\n  package view */\n  height: 100%;\n  overflow: auto;\n`;\n\nexport const Subject = styled.div`\n  ${font.size(20)};\n\n  @media ${mediaQueries.mobile} {\n    display: flex;\n    align-items: center;\n    margin: 0 10px;\n    margin-bottom: 35px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    margin: 30px;\n    margin-bottom: 45px;\n  }\n`;\n\nexport const GoBackWrapper = styled.span`\n  margin-left: -5px;\n  margin-right: 5px;\n\n  i {\n    color: ${COLOR.textDarkest};\n  }\n`;\n\nexport const Message = styled.div`\n  display: flex;\n\n  & + & {\n    border-top: 1px solid ${COLOR.borderLightest};\n  }\n\n  @media ${mediaQueries.mobile} {\n    padding: 20px 10px;\n    padding-top: 0;\n\n    & + & {\n      padding-top: 20px;\n    }\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 30px;\n    padding-top: 0;\n\n    & + & {\n      padding-top: 30px;\n    }\n  }\n`;\n\nexport const StyledAvatar = styled(Avatar)`\n  flex-shrink: 0;\n  margin-right: 15px;\n`;\n\nexport const MessageContent = styled.div`\n  width: 100%;\n`;\n\nexport const MessageHeader = styled.div`\n  margin-bottom: 25px;\n\n  @media ${mediaQueries.mobile} {\n    margin-bottom: 15px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const MessageHeaderFirstRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Author = styled.div`\n  margin-bottom: 10px;\n\n  ${font.size(16)}\n`;\n\nexport const Time = styled.div`\n  margin-left: 1em;\n  color: ${COLOR.textLight};\n  white-space: nowrap;\n`;\n\nexport const Recipient = styled.div`\n  color: ${COLOR.textLight};\n`;\n\nexport const MessageText = styled.div`\n  white-space: pre-wrap;\n`;\n\nexport const ReplyWrapper = styled.div`\n  @media ${mediaQueries.mobile} {\n    margin-top: 10px;\n    padding: 0 10px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    margin-top: 15px;\n    margin-bottom: 40px;\n    padding: 0 30px;\n  }\n`;\n","import React, { useContext } from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport IconClickable from 'shared/components/IconClickable';\n\nimport FormattedMessageTime from './FormattedMessageTime';\nimport ThreadReplyForm from './ThreadReplyForm';\nimport {\n  Subject,\n  Message,\n  MessageHeader,\n  MessageHeaderFirstRow,\n  Author,\n  Time,\n  Recipient,\n  StyledAvatar,\n  MessageContent,\n  avatarSize,\n  ReplyWrapper,\n  ThreadDetailsWrapper,\n  MessageText,\n  GoBackWrapper,\n} from './ThreadDetails.styles';\nimport { MessageThreadInMessages } from './__graphql__/MessageThreadInMessages';\n\nconst queryMessageThread = gql`\n  query MessageThreadInMessages($messageThreadId: ID!) {\n    messageThread(messageThreadId: $messageThreadId) {\n      id\n      subject\n      participatingSubcontractors {\n        id\n        name\n      }\n      messages {\n        id\n        createdAt\n        authorType\n        authorName\n        recipientNames\n        messageText\n      }\n    }\n  }\n`;\n\nexport interface ThreadDetailsProps {\n  messageThreadId: string;\n  activeUserType: COMPANY_TYPE;\n  refetchQueries: string[];\n  unselectThread: () => void;\n}\n\nconst ThreadDetails: React.FC<ThreadDetailsProps> = ({\n  messageThreadId,\n  activeUserType,\n  refetchQueries,\n  unselectThread,\n}) => {\n  const { t } = useTranslation('messages');\n  const { isMobile } = useContext(QueryMatchesContext);\n\n  const query = useQuery<MessageThreadInMessages>(queryMessageThread, {\n    variables: { messageThreadId },\n  });\n\n  if (!isDoneLoading(query)) {\n    return <PageLoader />;\n  }\n\n  if (query.error) {\n    return <QueryErrors error={query.error} />;\n  }\n\n  const thread = query.data.messageThread;\n\n  return (\n    <ThreadDetailsWrapper data-cy-thread-details>\n      <Subject>\n        {isMobile && (\n          <GoBackWrapper>\n            <IconClickable onClick={unselectThread} type=\"arrow-left\" size={24} />\n          </GoBackWrapper>\n        )}\n        {thread.subject}\n      </Subject>\n      {thread.messages.map(message => {\n        const from = message.authorName;\n        const to =\n          message.authorType !== activeUserType\n            ? t('messageList.toMe')\n            : t('messageList.toAnother', {\n                names: message.recipientNames.join(', '),\n              });\n\n        return (\n          <Message key={message.id}>\n            <StyledAvatar name={from} size={avatarSize} />\n            <MessageContent>\n              <MessageHeader>\n                <MessageHeaderFirstRow>\n                  <Author>{from}</Author>\n                  <Time data-cy-thread-details-time>\n                    <FormattedMessageTime date={message.createdAt} />\n                  </Time>\n                </MessageHeaderFirstRow>\n                <Recipient>{to}</Recipient>\n              </MessageHeader>\n              <MessageText>{message.messageText}</MessageText>\n            </MessageContent>\n          </Message>\n        );\n      })}\n      <ReplyWrapper>\n        <ThreadReplyForm\n          activeUserType={activeUserType}\n          messageThreadId={messageThreadId}\n          refetchQueries={refetchQueries}\n        />\n      </ReplyWrapper>\n    </ThreadDetailsWrapper>\n  );\n};\n\nexport default ThreadDetails;\n","import styled from 'styled-components/macro';\n\nimport { font, mediaQueries, COLOR } from 'shared/utils/styles';\n\nexport const NewMessageWrapper = styled.div`\n  height: 100%;\n  overflow: auto;\n\n  @media ${mediaQueries.mobile} {\n    padding: 10px;\n    padding-top: 0;\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 30px;\n  }\n`;\n\nexport const SingleRecipient = styled.div`\n  margin-bottom: 30px;\n`;\n\nexport const Heading = styled.div`\n  margin-bottom: 30px;\n  ${font.size(18)}\n\n  @media ${mediaQueries.mobile} {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const GoBackWrapper = styled.span`\n  margin-left: -5px;\n  margin-right: 5px;\n\n  i {\n    color: ${COLOR.textDarkest};\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  @media ${mediaQueries.mobile} {\n    /* Actually, stretches the button from edge to edge */\n    flex-direction: column;\n  }\n`;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\nimport Form from 'shared/components/Form';\nimport Field from 'shared/components/Field';\nimport Button from 'shared/components/Button';\nimport IconClickable from 'shared/components/IconClickable';\n\nimport {\n  NewMessageWrapper,\n  SingleRecipient,\n  Heading,\n  ButtonWrapper,\n  GoBackWrapper,\n} from './NewMessage.styles';\nimport {\n  CreateMessageThread,\n  CreateMessageThreadVariables,\n} from './__graphql__/CreateMessageThread';\n\nconst mutationCreateMessageThread = gql`\n  mutation CreateMessageThread(\n    $authorType: COMPANY_TYPE!\n    $bidRequestIds: [ID!]!\n    $bidPackageId: ID!\n    $subject: String!\n    $messageText: String!\n  ) {\n    createMessageThread(\n      authorType: $authorType\n      bidRequestIds: $bidRequestIds\n      bidPackageId: $bidPackageId\n      subject: $subject\n      messageText: $messageText\n    ) {\n      id\n    }\n  }\n`;\n\nexport interface NewMessageProps {\n  potentialRecipients: {\n    bidRequestId: string;\n    name: string;\n  }[];\n  activeUserType: COMPANY_TYPE;\n  selectThread: (id: string) => void;\n  refetchQueries: string[];\n  goBack: () => void;\n  bidPackageId: string;\n}\n\ninterface FormValues {\n  bidRequestIds: string[];\n  bidPackageId: string;\n  subject: string;\n  messageText: string;\n}\n\nconst NewMessage: React.FC<NewMessageProps> = ({\n  potentialRecipients,\n  activeUserType,\n  selectThread,\n  refetchQueries,\n  goBack,\n  bidPackageId,\n}) => {\n  const { t } = useTranslation('messages');\n  const { isMobile } = useContext(QueryMatchesContext);\n\n  const [createThread] = useMutation<CreateMessageThread, CreateMessageThreadVariables>(\n    mutationCreateMessageThread,\n    {\n      refetchQueries: () => refetchQueries,\n    },\n  );\n\n  const selectOptions = potentialRecipients.map(({ bidRequestId, name }) => ({\n    value: bidRequestId,\n    label: name,\n  }));\n\n  const createThreadAndNotifyUser = async (values: FormValues, recipientNames: string[]) => {\n    try {\n      const { data } = await createThread({ variables: { ...values, authorType: activeUserType } });\n\n      if (data) {\n        toast.success(t('newMessage.successNotification', { names: recipientNames.join(', ') }));\n        selectThread(data.createMessageThread.id);\n      }\n    } catch (error) {\n      toast.error(error);\n    }\n  };\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        bidRequestIds:\n          potentialRecipients.length === 1 ? [potentialRecipients[0].bidRequestId] : [],\n        subject: '',\n        messageText: '',\n        bidPackageId,\n      }}\n      validations={{\n        bidRequestIds: Form.is.required(),\n        subject: Form.is.required(),\n        messageText: Form.is.required(),\n      }}\n      onSubmit={values => {\n        const recipientNames = potentialRecipients\n          .filter(recipient => values.bidRequestIds.includes(recipient.bidRequestId))\n          .map(recipient => recipient.name);\n\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        createThreadAndNotifyUser(values, recipientNames);\n      }}\n    >\n      {() => (\n        <NewMessageWrapper>\n          <Form.Element>\n            <Heading>\n              {isMobile && (\n                <GoBackWrapper>\n                  <IconClickable onClick={goBack} type=\"arrow-left\" size={24} />\n                </GoBackWrapper>\n              )}\n              {t('newMessage.heading')}\n            </Heading>\n            {activeUserType === COMPANY_TYPE.agent && (\n              <SingleRecipient>\n                {t('newMessage.toSingleRecipient', { name: potentialRecipients[0].name })}\n              </SingleRecipient>\n            )}\n            {activeUserType === COMPANY_TYPE.principal && (\n              <Field.SelectMulti\n                label={t('newMessage.fieldLabels.to')}\n                name=\"bidRequestIds\"\n                options={selectOptions}\n              />\n            )}\n            <Field.Input label={t('newMessage.fieldLabels.subject')} name=\"subject\" />\n            <Field.Textarea\n              label={t('newMessage.fieldLabels.message')}\n              name=\"messageText\"\n              minRows={8}\n            />\n            <ButtonWrapper>\n              <Button type=\"submit\" data-cy-button-name=\"sendNewMessage\">\n                {t('buttons.send')}\n              </Button>\n            </ButtonWrapper>\n          </Form.Element>\n        </NewMessageWrapper>\n      )}\n    </Form>\n  );\n};\n\nexport default NewMessage;\n","import styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font, mediaQueries } from 'shared/utils/styles';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport SearchInput from 'shared/components/SearchInput';\n\ninterface MessagesWrapperProps {\n  useBorder: boolean;\n}\n\nexport const MessagesWrapper = styled.div<MessagesWrapperProps>`\n  display: flex;\n\n  ${font.size(14)}\n\n  ${EmptyContent} {\n    width: 100%;\n  }\n\n  ${props =>\n    props.useBorder &&\n    css`\n      border: 1px solid ${COLOR.borderLight};\n    `}\n`;\n\nexport const ControlsArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 25px;\n\n  @media ${mediaQueries.mobile} {\n    flex-direction: column;\n  }\n`;\n\nexport const StyledSearchInput = styled(SearchInput)`\n  max-width: 300px;\n\n  @media ${mediaQueries.mobile} {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const DetailsArea = styled.div`\n  flex-grow: 1;\n`;\n","import React, { useState, useEffect, useContext } from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\nimport { QueryTuple } from '@apollo/react-hooks';\n\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport Button from 'shared/components/Button';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport useQueryParamInitialAction from 'shared/hooks/useQueryParamInitialAction';\n\nimport ThreadsList, { fragmentThreadsList, ThreadsListProps } from './ThreadsList';\nimport ThreadDetails from './ThreadDetails';\nimport NewMessage, { NewMessageProps } from './NewMessage';\nimport { MessagesWrapper, ControlsArea, StyledSearchInput, DetailsArea } from './index.styles';\n\nexport const fragmentMessages = gql`\n  fragment Messages_messageThread on MessageThread {\n    ...ThreadsList_messageThread\n  }\n\n  ${fragmentThreadsList}\n`;\n\ninterface Data {\n  // We don't know the name of the query that gets us message threads\n  [key: string]: { messageThreads: ThreadsListProps['threads'] };\n}\n\nexport interface MessagesProps {\n  threadsQuery: QueryTuple<Data, { query?: string }>;\n  threadsQueryName: string;\n  refetchQueries: string[];\n  potentialRecipients: NewMessageProps['potentialRecipients'];\n  activeUserType: COMPANY_TYPE;\n  bidPackageId: string;\n}\n\ntype State =\n  | {\n      name: 'newMessage';\n    }\n  | {\n      name: 'showThread';\n      selectedThreadId?: string;\n    };\n\nconst Messages: React.FC<MessagesProps> = ({\n  threadsQuery,\n  threadsQueryName,\n  refetchQueries,\n  activeUserType,\n  potentialRecipients,\n  bidPackageId,\n}) => {\n  const [queryThreads, threadsQueryMeta] = threadsQuery;\n\n  const { t } = useTranslation('messages');\n  const [state, setState] = useState<State>({ name: 'showThread' });\n  const [searchString, setSearchString] = useState<string>('');\n  const { isDesktop } = useContext(QueryMatchesContext);\n\n  const loadThreads = async () => {\n    if (threadsQueryMeta.called) {\n      const results = await threadsQueryMeta.refetch({ query: searchString });\n\n      if (results.data) {\n        const threads = results.data[threadsQueryName].messageThreads;\n\n        if (threads.length > 0 && isDesktop) {\n          selectThread(threads[0].id);\n        }\n      }\n    } else {\n      // Can't execute lazy query immediately after the initial render; says\n      // \"Cannot read property 'getCurrentResult' of undefined\"\n      setTimeout(() => queryThreads({ variables: { query: searchString } }));\n    }\n  };\n  const selectThread = (id: string) => {\n    setState({ name: 'showThread', selectedThreadId: id });\n  };\n  const openNewMessage = () => setState({ name: 'newMessage' });\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    loadThreads();\n    // Only run this code when the searchString variable changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchString]);\n\n  useQueryParamInitialAction('threadId', selectThread);\n\n  if (!isDoneLoading(threadsQueryMeta)) {\n    return <PageLoader />;\n  }\n\n  if (threadsQueryMeta.error) {\n    return <QueryErrors error={threadsQueryMeta.error} />;\n  }\n\n  const threads = threadsQueryMeta.data[threadsQueryName].messageThreads;\n\n  const displayThreadsList = isDesktop || (state.name === 'showThread' && !state.selectedThreadId);\n  const displayDetailsArea =\n    isDesktop ||\n    (state.name === 'showThread' && state.selectedThreadId) ||\n    state.name === 'newMessage';\n  const displayControlsArea = displayThreadsList;\n\n  const renderMainArea = () => {\n    if (threads.length > 0) {\n      return (\n        <>\n          {displayThreadsList && (\n            <ThreadsList\n              threads={threads}\n              onSelectThread={selectThread}\n              activeUserType={activeUserType}\n              selectedThreadId={\n                state.name === 'showThread' ? state.selectedThreadId || threads[0].id : null\n              }\n            />\n          )}\n          {displayDetailsArea && (\n            <DetailsArea>\n              {state.name === 'showThread' && (\n                <ThreadDetails\n                  messageThreadId={state.selectedThreadId || threads[0].id}\n                  activeUserType={activeUserType}\n                  unselectThread={() => setState({ name: 'showThread' })}\n                  refetchQueries={refetchQueries}\n                />\n              )}\n              {state.name === 'newMessage' && (\n                <NewMessage\n                  potentialRecipients={potentialRecipients}\n                  activeUserType={activeUserType}\n                  selectThread={selectThread}\n                  refetchQueries={refetchQueries}\n                  goBack={() => setState({ name: 'showThread' })}\n                  bidPackageId={bidPackageId}\n                />\n              )}\n            </DetailsArea>\n          )}\n        </>\n      );\n    }\n\n    if (state.name === 'newMessage') {\n      return (\n        <DetailsArea>\n          <NewMessage\n            potentialRecipients={potentialRecipients}\n            activeUserType={activeUserType}\n            selectThread={selectThread}\n            refetchQueries={refetchQueries}\n            goBack={() => setState({ name: 'showThread' })}\n            bidPackageId={bidPackageId}\n          />\n        </DetailsArea>\n      );\n    }\n\n    if (threadsQueryMeta.variables.query) {\n      return (\n        <EmptyContent>\n          <EmptyContent.CallToAction>\n            {t('noMatchingMessages.callToAction')}\n          </EmptyContent.CallToAction>\n          <Button hollow onClick={() => setSearchString('')} data-cy-button-name=\"resetSearch\">\n            {t('buttons.resetSearchQuery')}\n          </Button>\n        </EmptyContent>\n      );\n    }\n\n    return (\n      <EmptyContent>\n        <EmptyContent.CallToAction>{t('noMessages.callToAction')}</EmptyContent.CallToAction>\n        <EmptyContent.Explanation>{t('noMessages.explanation')}</EmptyContent.Explanation>{' '}\n        <Button hollow onClick={openNewMessage} data-cy-button-name=\"noContentNewMessage\">\n          {t('buttons.newMessage')}\n        </Button>\n      </EmptyContent>\n    );\n  };\n\n  return (\n    <>\n      {displayControlsArea && (\n        <ControlsArea>\n          <StyledSearchInput\n            value={searchString || ''}\n            onChange={setSearchString}\n            data-cy-input-name=\"messageSearch\"\n          />\n          <Button onClick={openNewMessage} data-cy-button-name=\"newMessage\">\n            {t('buttons.newMessage')}\n          </Button>\n        </ControlsArea>\n      )}\n      <MessagesWrapper useBorder={displayThreadsList}>{renderMainArea()}</MessagesWrapper>\n    </>\n  );\n};\n\nexport default Messages;\n","import styled from 'styled-components/macro';\n\nimport { font, COLOR, mixin, zIndexValues, mediaQueries, sizes } from 'shared/utils/styles';\nimport Clickable from 'shared/components/Clickable';\nimport ExternalLink from 'shared/components/ExternalLink';\n\nexport const Bar = styled.nav`\n  position: relative;\n  display: flex;\n  flex-direction: row-reverse;\n  width: 100%;\n  height: ${sizes.topbarHeight}px;\n  padding: 0 28px;\n\n  @media ${mediaQueries.desktop} {\n    z-index: ${zIndexValues.topbar};\n  }\n`;\n\nexport const UserDropdownTrigger = styled(Clickable)`\n  position: relative;\n  display: flex;\n  align-items: center;\n  height: ${sizes.topbarHeight}px;\n  margin-left: 30px;\n  color: ${COLOR.textDark};\n  ${mixin.clickable}\n  &:hover {\n    color: ${COLOR.accent};\n  }\n`;\n\nexport const Username = styled.div`\n  display: inline-block;\n  padding: 0 6px 0 10px;\n  text-transform: uppercase;\n  ${font.bold}\n  ${font.size(12)}\n`;\n\nexport const HelpLink = styled(ExternalLink)`\n  display: flex;\n  align-items: center;\n  height: ${sizes.topbarHeight}px;\n  color: ${COLOR.textDark};\n  text-transform: uppercase;\n  ${font.bold}\n  ${font.size(12)}\n  line-height: 1.15;\n\n  i {\n    margin-right: 7px;\n  }\n\n  &:visited,\n  :active {\n    color: ${COLOR.textDark};\n  }\n\n  &:hover {\n    text-decoration: none;\n    color: ${COLOR.accent};\n  }\n`;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\n\nimport AuthContext, { isAuthenticated } from 'shared/contexts/authContext';\n// Have to import the following components like that due to the cyclic dependency problem with Page\nimport Icon from 'shared/components/Icon';\nimport Avatar from 'shared/components/Avatar';\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport routes from 'shared/constants/routes';\nimport { USER_TYPE } from '__graphql__/globalTypes';\n\nimport { Bar, UserDropdownTrigger, Username, HelpLink } from './Styles';\n\nconst Topbar: React.FC<{}> = () => {\n  const { t } = useTranslation();\n  const authContext = useContext(AuthContext);\n\n  if (!isAuthenticated(authContext)) {\n    return null;\n  }\n  const { authState, logout } = authContext;\n  const { firstName, lastName, isAdmin, type: userType } = authState.user;\n\n  return (\n    <Bar data-cy-topbar>\n      <DropdownMenu.Container\n        isLarge\n        renderTrigger={({ isTriggered, toggleTrigger }) => (\n          <UserDropdownTrigger onClick={toggleTrigger}>\n            <Avatar name={firstName} />\n            <Username>{`${firstName} ${lastName}`}</Username>\n            <Icon type={isTriggered ? 'chevron-up' : 'chevron-down'} />\n          </UserDropdownTrigger>\n        )}\n      >\n        {isAdmin && (\n          <DropdownMenu.Action forwardedAs={NavLink} to={routes.admin()}>\n            {t('admin:adminPanel')}\n          </DropdownMenu.Action>\n        )}\n        <DropdownMenu.Action forwardedAs={NavLink} to={routes.profile()}>\n          {t('profile:myAccount')}\n        </DropdownMenu.Action>\n        {userType === USER_TYPE.employee && (\n          <DropdownMenu.Action forwardedAs={NavLink} to={routes.company()}>\n            {t('company:company')}\n          </DropdownMenu.Action>\n        )}\n        <DropdownMenu.Action data-cy-logout onClick={logout}>\n          {t('auth:signOut')}\n        </DropdownMenu.Action>\n      </DropdownMenu.Container>\n      <HelpLink to=\"https://help.cosuno.de\">\n        <Icon size={22} type=\"help\" />\n        <span>{t('help')}</span>\n      </HelpLink>\n    </Bar>\n  );\n};\n\nexport default Topbar;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport { HeadingMedium } from 'shared/components/Styles';\n\nexport const Wrapper = styled.div`\n  justify-content: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 90%;\n  position: absolute;\n  width: 100%;\n  left: 0;\n`;\n\nexport const Text = styled.p`\n  color: ${COLOR.textMediumBlue};\n  ${font.size(16)};\n  margin-bottom: 30px;\n  max-width: 500px;\n  text-align: center;\n`;\n\nexport const Heading = styled(HeadingMedium)`\n  padding-bottom: 12px;\n`;\n","import React, { ErrorInfo, PropsWithChildren } from 'react';\nimport { withTranslation, WithTranslation } from 'react-i18next';\nimport * as Sentry from '@sentry/browser';\n\nimport Button from 'shared/components/Button';\nimport { PageLoader } from 'shared/components';\n\nimport { Wrapper, Text, Heading } from './Styles';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  reloading: boolean;\n}\n\ntype ErrorBoundaryProps = PropsWithChildren<WithTranslation>;\n\nclass ErrorBoundaryWithoutTranslation extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  state = { hasError: false, reloading: false };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    Sentry.withScope(scope => {\n      scope.setExtras(errorInfo);\n      Sentry.captureException(error);\n    });\n  }\n\n  private readonly reload = () => {\n    // Show a PageLoader to give the user instant feedback when clicking \"reload\"\n    this.setState({ reloading: true });\n    window.location.reload(true);\n  };\n\n  render() {\n    const { children, t } = this.props;\n    const { hasError, reloading } = this.state;\n\n    const content = reloading ? (\n      <PageLoader />\n    ) : (\n      <>\n        <Heading>{t('heading')}</Heading>\n        <Text>{t('explanation')}</Text>\n        <Button icon=\"refresh\" onClick={this.reload}>\n          {t('reloadButton')}\n        </Button>\n      </>\n    );\n\n    if (hasError) {\n      return <Wrapper>{content}</Wrapper>;\n    }\n\n    return children;\n  }\n}\n\nexport const ErrorBoundary = withTranslation('errorBoundary')(ErrorBoundaryWithoutTranslation);\n","import styled, { css } from 'styled-components/macro';\n\nimport { sizes, mediaQueries } from 'shared/utils/styles';\n\ninterface PageContainerProps {\n  isResponsive: boolean;\n}\n\nexport const PageContainer = styled.div<PageContainerProps>`\n  ${props =>\n    props.isResponsive\n      ? css`\n          @media ${mediaQueries.desktop} {\n            min-width: ${sizes.minViewportWidth}px;\n          }\n        `\n      : css`\n          min-width: ${sizes.minViewportWidth}px;\n        `}\n`;\n\ninterface PageContentProps {\n  withBackLink?: boolean;\n}\n\nexport const PageContent = styled.div<PageContentProps>`\n  position: relative;\n  margin: 0 auto;\n  max-width: 1440px;\n  padding: 25px 50px 50px;\n\n  @media (max-width: 1200px) {\n    padding: 25px 30px 50px;\n  }\n\n  @media ${mediaQueries.mobile} {\n    padding: 15px 10px 25px;\n  }\n\n  ${props =>\n    props.withBackLink &&\n    css`\n      padding-top: 0;\n\n      @media (max-width: 1200px) {\n        padding-top: 0;\n      }\n\n      @media ${mediaQueries.mobile} {\n        padding-top: 0;\n      }\n    `}\n`;\n","import React from 'react';\n\nimport Topbar from 'shared/components/Topbar';\nimport { ErrorBoundary } from 'shared/components/ErrorBoundary';\nimport Icon from 'shared/components/Icon';\nimport { BackLink } from 'shared/components/Styles';\n\nimport { PageContainer, PageContent } from './Styles';\n\nexport interface PageProps {\n  withTopbar?: boolean;\n  children: React.ReactNode;\n  style?: object;\n  isResponsive?: boolean;\n  backLink?: {\n    to: string;\n    label: string;\n  };\n}\n\nconst Page: React.FC<PageProps> = ({\n  children,\n  withTopbar = true,\n  style = {},\n  isResponsive = false,\n  backLink,\n  ...props\n}) => (\n  <PageContainer style={style} isResponsive={isResponsive} {...props}>\n    <ErrorBoundary>\n      {withTopbar && <Topbar />}\n      <PageContent withBackLink={Boolean(backLink)}>\n        {backLink && (\n          <BackLink data-cy-back-link to={backLink.to}>\n            <Icon type=\"arrow-left\" />\n            <span>{backLink.label}</span>\n          </BackLink>\n        )}\n        {children}\n      </PageContent>\n    </ErrorBoundary>\n  </PageContainer>\n);\n\nexport { PageContainer, PageContent };\nexport default Page;\n","import styled from 'styled-components/macro';\n\nexport const SidebarContainer = styled.div`\n  display: flex;\n  height: 100%;\n  overflow: hidden;\n`;\n","import React, { ReactNode } from 'react';\n\nimport Page, { PageProps } from 'shared/components/Page';\nimport { ContentWithScroll } from 'shared/components/Styles';\n\nimport { SidebarContainer } from './Styles';\n\ninterface PageWithSidebarProps {\n  className?: string;\n  children: ReactNode;\n  renderSidebar: () => ReactNode;\n}\n\nconst PageWithSidebar: React.FC<PageWithSidebarProps & PageProps> = ({\n  className,\n  children,\n  renderSidebar,\n  ...pageProps\n}) => {\n  return (\n    <SidebarContainer className={className}>\n      {renderSidebar()}\n      <ContentWithScroll>\n        <Page {...pageProps}>{children}</Page>\n      </ContentWithScroll>\n    </SidebarContainer>\n  );\n};\n\nexport default PageWithSidebar;\n","import styled from 'styled-components/macro';\n\nimport { mixin } from 'shared/utils/styles';\nimport Avatar from 'shared/components/Avatar';\n\nexport const RowBadgeWrapper = styled.div`\n  padding: 16px 10px 16px 12px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const RowBadgeAvatar = styled(Avatar)`\n  flex-shrink: 0;\n  margin-right: 10px;\n`;\n\nexport const RowBadgeName = styled.div`\n  ${mixin.truncateText}\n`;\n","import React from 'react';\n\nimport { RowBadgeWrapper, RowBadgeAvatar, RowBadgeName } from './Styles';\n\ninterface Props {\n  displayName: string;\n}\n\nconst RowBadge: React.FC<Props> = ({ displayName }) => (\n  <RowBadgeWrapper>\n    <RowBadgeAvatar name={displayName} />\n    <RowBadgeName>{displayName}</RowBadgeName>\n  </RowBadgeWrapper>\n);\n\nexport default RowBadge;\n","import styled from 'styled-components/macro';\nimport { NavLink } from 'react-router-dom';\n\nimport { COLOR, font, mixin, mediaQueries } from 'shared/utils/styles';\n\nexport const Container = styled.div`\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  background: #fff;\n  overflow: hidden;\n  ${mixin.boxShadowMedium}\n`;\n\nexport const Links = styled.div`\n  flex-shrink: 0;\n  display: flex;\n  background: ${COLOR.backgroundLight};\n  overflow-x: auto;\n\n  &::after {\n    content: '';\n    display: block;\n    width: 100%;\n    border-bottom: 1px solid ${COLOR.borderLight};\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  padding: 15px 30px;\n  line-height: 1;\n  text-transform: uppercase;\n  border-left: 1px solid transparent;\n  border-right: 1px solid transparent;\n  border-bottom: 1px solid ${COLOR.borderLight};\n  color: ${COLOR.textLight};\n  white-space: nowrap;\n  ${font.bold}\n  ${font.size(12)}\n  &.active {\n    border-color: ${COLOR.borderLight};\n    border-bottom: 1px solid transparent;\n    background: #fff;\n    color: ${COLOR.textDark};\n    &:first-of-type {\n      border-left-color: transparent;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  @media ${mediaQueries.mobile} {\n    padding: 25px 10px 40px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding: 25px 30px 40px;\n  }\n`;\n","import React from 'react';\nimport {\n  Route as ReactRoute,\n  Redirect,\n  useRouteMatch,\n  useLocation,\n  RouteProps,\n} from 'react-router-dom';\n\nimport { Container, Links, StyledLink, Content } from './Styles';\n\nconst isAbsolute = (str: string) => str.startsWith('/');\nconst prepend = (currentUrl: string, url: string) =>\n  isAbsolute(url) ? url : `${currentUrl}/${url}`;\n\ninterface LinkProps {\n  to: string;\n  isDefault?: boolean;\n  children: React.ReactNode;\n}\n\nconst Link: React.FC<LinkProps> = ({ to, isDefault = false, children }) => {\n  const { isExact, url } = useRouteMatch();\n  const location = useLocation();\n\n  return (\n    <>\n      {isDefault && isExact && url !== prepend(url, to) && (\n        <Redirect\n          to={{\n            pathname: prepend(url, to),\n            search: location.search,\n          }}\n        />\n      )}\n      <StyledLink to={prepend(url, to)}>{children}</StyledLink>\n    </>\n  );\n};\n\ntype TabsRouteProps = RouteProps & { path: string };\n\nconst Route: React.FC<TabsRouteProps> = ({ path, ...routeProps }) => {\n  const { path: matchPath } = useRouteMatch();\n  return <ReactRoute path={prepend(matchPath, path)} {...routeProps} />;\n};\n\nexport default {\n  Container,\n  Links,\n  Link,\n  Route,\n  Content,\n};\n","import styled from 'styled-components/macro';\n\nimport { COLOR, mixin } from 'shared/utils/styles';\n\nexport const Wrapper = styled.div`\n  min-height: 100vh;\n  overflow: auto;\n  padding: 80px 25px;\n  background: ${COLOR.backgroundLight};\n`;\n\nexport const LogoContainer = styled.div`\n  margin: 0 auto;\n  max-width: 500px;\n  padding-bottom: 50px;\n  text-align: center;\n`;\n\nexport const ContentBox = styled.div`\n  margin: 10px auto;\n  max-width: 500px;\n  padding: 45px 50px 40px;\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n  background: #fff;\n  ${mixin.boxShadowMedium}\n`;\n\nexport const ContentBoxSmall = styled(ContentBox)`\n  padding: 10px 50px;\n`;\n","import React from 'react';\n\nimport Logo from 'shared/components/Logo';\nimport { ErrorBoundary } from 'shared/components/ErrorBoundary';\nimport HtmlHeadTags from 'shared/components/HtmlHeadTags';\n\nimport { LogoContainer, Wrapper } from './Styles';\n\ninterface Props {\n  title: string;\n  children: React.ReactNode;\n}\n\nconst UnauthenticatedPage: React.FC<Props> = ({ title, children }) => (\n  <Wrapper>\n    <ErrorBoundary>\n      <HtmlHeadTags title={title} />\n      <LogoContainer>\n        <Logo width={180} />\n      </LogoContainer>\n      {children}\n    </ErrorBoundary>\n  </Wrapper>\n);\n\nexport default UnauthenticatedPage;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\n\nimport Icon from '../Icon';\nimport ClickableText from '../ClickableText';\n\nexport const FieldRow = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n\n  & > * {\n    margin: 0 5px;\n    &:first-child {\n      margin-left: 0;\n    }\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const DeleteIcon = styled(Icon)`\n  padding: 10px 5px;\n  font-size: 18px;\n  color: ${COLOR.textDark};\n  ${mixin.clickable};\n`;\n\nexport const AddLink = styled(ClickableText)`\n  margin-bottom: 25px;\n  ${font.size(14)}\n`;\n","import React from 'react';\nimport { FieldArray } from 'formik';\nimport { useTranslation } from 'react-i18next';\n\nimport Form from 'shared/components/Form';\nimport Field from 'shared/components/Field';\nimport Icon from 'shared/components/Icon';\nimport InputModal, { InputModalProps } from 'shared/components/InputModal';\nimport { USER_TYPE } from '__graphql__/globalTypes';\n\nimport { FieldRow, DeleteIcon, AddLink } from './Styles';\n\ninterface Props {\n  loading: boolean;\n  renderLink: InputModalProps<FormValues>['renderLink'];\n  onSubmit: (values: FormValues, confirm: () => void) => void;\n}\n\ninterface FormValues {\n  users: Array<{ email: string; type: USER_TYPE }>;\n}\n\nconst getNewUser = () => ({ email: '', type: USER_TYPE.employee });\n\nconst UsersInviteModal: React.FC<Props> = ({ loading, renderLink, onSubmit }) => {\n  const { t } = useTranslation('company');\n\n  const getFormOptions = (confirm: () => void) => ({\n    initialValues: { users: [getNewUser()] },\n    onSubmit: (values: FormValues) => onSubmit(values, confirm),\n    validations: {\n      users: {\n        email: [Form.is.required(), Form.is.maxLength(200), Form.is.email()],\n        type: Form.is.required(),\n      },\n    },\n  });\n\n  return (\n    <InputModal<FormValues>\n      getFormOptions={getFormOptions}\n      isWorking={loading}\n      title=\"company:inviteUsers\"\n      confirmText=\"company:sendInvitations\"\n      cancelText=\"company:cancel\"\n      renderLink={renderLink}\n      renderContent={({ values }) => (\n        <FieldArray\n          name=\"users\"\n          render={({ remove, push }) => (\n            <>\n              {values.users.map((_user, i) => (\n                <FieldRow key={i}>\n                  <Field.Input\n                    name={`users.${i}.email`}\n                    type=\"email\"\n                    icon=\"email\"\n                    placeholder={t('exampleEmail')}\n                  />\n                  <Field.SelectSingle\n                    required\n                    name={`users.${i}.type`}\n                    options={[\n                      { label: t('user.employee'), value: 'employee' },\n                      { label: t('user.external'), value: 'external' },\n                    ]}\n                  />\n                  {values.users.length > 1 && (\n                    <DeleteIcon type=\"delete\" onClick={() => remove(i)} />\n                  )}\n                </FieldRow>\n              ))}\n              <AddLink onClick={() => push(getNewUser())}>\n                <Icon type=\"plus\" top={2} left={-2} />\n                {t('addAnother')}\n              </AddLink>\n            </>\n          )}\n        />\n      )}\n    />\n  );\n};\n\nexport default UsersInviteModal;\n","import gql from 'graphql-tag';\n\nimport { fragmentCurrentUserForAuthentication } from 'shared/hooks/useAuthentication';\n\nexport const mutationDeactivateUser = gql`\n  mutation DeactivateUser($id: ID!) {\n    deactivateUser(id: $id)\n  }\n`;\n\nexport const mutationReactivateUser = gql`\n  mutation ReactivateUser($id: ID!) {\n    reactivateUser(id: $id)\n  }\n`;\n\nexport const mutationResendUserInvite = gql`\n  mutation ResendUserInvite($id: ID!) {\n    resendUserInvite(id: $id)\n  }\n`;\n\nexport const mutationCancelInvite = gql`\n  mutation CancelInvite($id: ID!) {\n    cancelInvite(id: $id)\n  }\n`;\n\nexport const mutationRestoreInvite = gql`\n  mutation RestoreInvite($id: ID!) {\n    restoreInvite(id: $id)\n  }\n`;\n\nexport const mutationAdminLoginAsUser = gql`\n  mutation AdminLoginAsUser($id: ID!) {\n    adminLoginAsUser(id: $id) {\n      token\n      user {\n        ...CurrentUserForAuthentication\n      }\n    }\n  }\n  ${fragmentCurrentUserForAuthentication}\n`;\n\nexport const mutationUpdateUserType = gql`\n  mutation UpdateUserType($id: ID!, $type: USER_TYPE!) {\n    updateUserType(id: $id, type: $type)\n  }\n`;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport AuthContext from 'shared/contexts/authContext';\nimport toast from 'shared/utils/toast';\n\nimport { mutationAdminLoginAsUser } from './api';\n\ninterface Props {\n  userId: string;\n}\n\nconst LoginAsUser: React.FC<Props> = ({ userId }) => {\n  const { t } = useTranslation('company');\n  const { login, logout } = useContext(AuthContext);\n  const [loginAsUser] = useMutation(mutationAdminLoginAsUser);\n\n  return (\n    <DropdownMenu.Action\n      onClick={() => {\n        loginAsUser({ variables: { id: userId } }).then(\n          ({ data: { adminLoginAsUser } }) => {\n            logout();\n            login(adminLoginAsUser);\n          },\n          error => {\n            toast.error(error);\n          },\n        );\n      }}\n    >\n      {t('admin:loginAsUser')}\n    </DropdownMenu.Action>\n  );\n};\n\nexport default LoginAsUser;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport ConfirmationModal from 'shared/components/ConfirmationModal';\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport toast from 'shared/utils/toast';\n\nimport { mutationResendUserInvite } from './api';\n\ninterface Props {\n  userId: string;\n}\n\nconst ResendInvite: React.FC<Props> = ({ userId }) => {\n  const { t } = useTranslation('company');\n  const [resendInvite, { loading }] = useMutation(mutationResendUserInvite, {\n    refetchQueries: () => ['Users', 'AdminUsers'],\n  });\n\n  return (\n    <ConfirmationModal\n      title=\"company:resendInviteModalTitle\"\n      message={null}\n      isWorking={loading}\n      renderLink={modal => (\n        <DropdownMenu.Action onClick={modal.open}>{t('resendInvite')}</DropdownMenu.Action>\n      )}\n      onConfirm={async modal => {\n        try {\n          await resendInvite({ variables: { id: userId } });\n          toast.success(t('inviteSent'));\n          modal.close();\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default ResendInvite;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport toast from 'shared/utils/toast';\n\ninterface Props {\n  invitationLink: string;\n}\n\nconst CopyInviteLink: React.FC<Props> = ({ invitationLink }) => {\n  const { t } = useTranslation('company');\n\n  const copyInviteLinkToClipboard = async () => {\n    return navigator.clipboard.writeText(invitationLink).then(() => {\n      toast.success(t('copyInviteLinkSuccess'));\n    });\n  };\n\n  return (\n    <DropdownMenu.Action onClick={copyInviteLinkToClipboard}>\n      {t('copyInviteLink')}\n    </DropdownMenu.Action>\n  );\n};\n\nexport default CopyInviteLink;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport ConfirmationModal from 'shared/components/ConfirmationModal';\nimport toast from 'shared/utils/toast';\nimport { BUTTON_VARIANT } from 'shared/constants';\n\nimport { mutationCancelInvite } from './api';\n\ninterface Props {\n  userId: string;\n}\n\nconst CancelInvite: React.FC<Props> = ({ userId }) => {\n  const { t } = useTranslation('company');\n  const [cancelInvite, { loading }] = useMutation(mutationCancelInvite, {\n    refetchQueries: () => ['Users', 'AdminUsers'],\n  });\n\n  return (\n    <ConfirmationModal\n      title=\"company:cancelInviteMessage\"\n      message={null}\n      isWorking={loading}\n      confirmationButtonVariant={BUTTON_VARIANT.danger}\n      renderLink={modal => (\n        <DropdownMenu.Action danger onClick={modal.open}>\n          {t('cancelInvite')}\n        </DropdownMenu.Action>\n      )}\n      onConfirm={async modal => {\n        try {\n          await cancelInvite({ variables: { id: userId } });\n          toast.success(t('inviteCanceled'));\n          modal.close();\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default CancelInvite;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport ConfirmationModal from 'shared/components/ConfirmationModal';\nimport toast from 'shared/utils/toast';\n\nimport { mutationRestoreInvite } from './api';\n\ninterface Props {\n  userId: string;\n}\n\nconst RestoreInvite: React.FC<Props> = ({ userId }) => {\n  const { t } = useTranslation('company');\n  const [restoreInvite, { loading }] = useMutation(mutationRestoreInvite, {\n    refetchQueries: () => ['Users', 'AdminUsers'],\n  });\n\n  return (\n    <ConfirmationModal\n      title=\"company:restoreInviteMessage\"\n      message=\"company:restoreInviteDescription\"\n      isWorking={loading}\n      renderLink={modal => (\n        <DropdownMenu.Action onClick={modal.open}>{t('restoreInvite')}</DropdownMenu.Action>\n      )}\n      onConfirm={async modal => {\n        try {\n          await restoreInvite({ variables: { id: userId } });\n          toast.success(t('inviteRestored'));\n          modal.close();\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default RestoreInvite;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport DeletionModal from 'shared/components/DeletionModal';\n\nimport { mutationDeactivateUser } from './api';\n\ninterface Props {\n  userId: string;\n}\n\nconst DeactivateUser: React.FC<Props> = ({ userId }) => {\n  const { t } = useTranslation('company');\n\n  return (\n    <DeletionModal\n      id={userId}\n      mutation={mutationDeactivateUser}\n      refetchQueries={() => ['Users', 'AdminUsers']}\n      titleKey=\"company:confirmDeactivateMessage\"\n      messageKey=\"company:confirmDeactivateDescription\"\n      confirmTextKey=\"company:deactivate\"\n      successKey=\"company:userDeactivated\"\n      renderLink={modal => (\n        <DropdownMenu.Action danger onClick={modal.open}>\n          {t('deactivate')}\n        </DropdownMenu.Action>\n      )}\n    />\n  );\n};\n\nexport default DeactivateUser;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport ConfirmationModal from 'shared/components/ConfirmationModal';\nimport toast from 'shared/utils/toast';\n\nimport { mutationReactivateUser } from './api';\n\ninterface Props {\n  userId: string;\n}\n\nconst ReactivateUser: React.FC<Props> = ({ userId }) => {\n  const { t } = useTranslation('company');\n  const [reactivateUser, { loading }] = useMutation(mutationReactivateUser, {\n    refetchQueries: () => ['Users', 'AdminUsers'],\n  });\n\n  return (\n    <ConfirmationModal\n      title=\"company:confirmReactivateMessage\"\n      message=\"company:confirmReactivateDescription\"\n      isWorking={loading}\n      renderLink={modal => (\n        <DropdownMenu.Action onClick={modal.open}>{t('reactivate')}</DropdownMenu.Action>\n      )}\n      onConfirm={async modal => {\n        try {\n          await reactivateUser({ variables: { id: userId } });\n          toast.success(t('userReactivated'));\n          modal.close();\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default ReactivateUser;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { Modal, Form, Field, ModalFormBody } from 'shared/components';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { ModalContentProps } from 'shared/components/Modal/ModalContent';\nimport { USER_TYPE } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\n\nimport { mutationUpdateUserType } from './api';\nimport { UsersTableDropdown_user } from './__graphql__/UsersTableDropdown_user';\nimport { UpdateUserType, UpdateUserTypeVariables } from './__graphql__/UpdateUserType';\n\ninterface Props {\n  user: UsersTableDropdown_user;\n  renderLink: ModalContentProps['renderLink'];\n}\n\ninterface FormValues {\n  type: USER_TYPE;\n}\n\nconst ChangeTypeModal: React.FC<Props> = ({ user, renderLink }) => {\n  const { t } = useTranslation('company');\n\n  const [updateUserType, { loading: mutating }] = useMutation<\n    UpdateUserType,\n    UpdateUserTypeVariables\n  >(mutationUpdateUserType, {\n    refetchQueries: ['Users', 'AdminUsers'],\n  });\n\n  return (\n    <Modal\n      renderLink={renderLink}\n      renderContent={modal => (\n        <Form<FormValues>\n          initialValues={{\n            type: user.type,\n          }}\n          validations={{\n            type: [Form.is.required()],\n          }}\n          onSubmit={async values => {\n            try {\n              await updateUserType({ variables: { id: user.id, ...values } });\n              toast.success(t('updateUserTypeSuccess'));\n              modal.close();\n            } catch (error) {\n              toast.error(error);\n            }\n          }}\n        >\n          <ModalFormBody\n            scrollable={false}\n            close={modal.close}\n            working={mutating}\n            useFullPageHeight={false}\n          >\n            <HeadingMedium>{t('updateUserType')}</HeadingMedium>\n            <Field.SelectSingle\n              required\n              name=\"type\"\n              label={t('user.type')}\n              options={[USER_TYPE.employee, USER_TYPE.external].map(type => ({\n                value: type,\n                label: t(`user.${type}`),\n              }))}\n            />\n          </ModalFormBody>\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default ChangeTypeModal;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\n\nimport DropdownMenu from 'shared/components/DropdownMenu';\nimport Clickable from 'shared/components/Clickable';\nimport { DropdownMenuWrapper } from 'shared/components/Styles';\nimport Icon from 'shared/components/Icon';\nimport { USER_STATUS } from '__graphql__/globalTypes';\n\nimport LoginAsUser from './LoginAsUser';\nimport ResendInvite from './ResendInvite';\nimport CopyInviteLink from './CopyInviteLink';\nimport CancelInvite from './CancelInvite';\nimport RestoreInvite from './RestoreInvite';\nimport DeactivateUser from './DeactivateUser';\nimport ReactivateUser from './ReactivateUser';\nimport ChangeTypeModal from './ChangeTypeModal';\nimport { UsersTableDropdown_user } from './__graphql__/UsersTableDropdown_user';\n\nexport const fragmentUsersTableDropdown = gql`\n  fragment UsersTableDropdown_user on User {\n    id\n    status\n    type\n    invitationLink\n  }\n`;\n\ninterface Props {\n  user: UsersTableDropdown_user;\n  isAdmin?: boolean;\n  isCurrentUser?: boolean;\n}\n\nconst UsersTableDropdown: React.FC<Props> = ({ user, isAdmin = false, isCurrentUser = false }) => {\n  const { t } = useTranslation('company');\n  const actions = [];\n\n  if (!isCurrentUser) {\n    if (isAdmin && user.status === USER_STATUS.active) {\n      actions.push(<LoginAsUser key=\"loginAsUser\" userId={user.id} />);\n    }\n    if (user.status === USER_STATUS.invited) {\n      actions.push(\n        <ResendInvite key=\"resendInvite\" userId={user.id} />,\n        <CopyInviteLink key=\"copyInvite\" invitationLink={user.invitationLink} />,\n        <CancelInvite key=\"cancelInvite\" userId={user.id} />,\n      );\n    }\n    if (user.status === USER_STATUS.inviteCanceled) {\n      actions.push(<RestoreInvite key=\"restoreInvite\" userId={user.id} />);\n    }\n    if (user.status === USER_STATUS.inviteFailed) {\n      actions.push(<ResendInvite key=\"resendInvite\" userId={user.id} />);\n    }\n    if (user.status === USER_STATUS.active) {\n      actions.push(\n        <ChangeTypeModal\n          user={user}\n          renderLink={modal => (\n            <DropdownMenu.Action onClick={modal.open}>{t('updateUserType')}</DropdownMenu.Action>\n          )}\n        />,\n        <DeactivateUser key=\"deactivateUser\" userId={user.id} />,\n      );\n    }\n    if (user.status === USER_STATUS.inactive) {\n      actions.push(<ReactivateUser key=\"reactivateUser\" userId={user.id} />);\n    }\n  }\n\n  return (\n    <DropdownMenuWrapper>\n      <DropdownMenu.Container\n        renderTrigger={({ isTriggered, toggleTrigger }) => (\n          <Clickable disabled={!actions.length} onClick={toggleTrigger}>\n            <Icon type={isTriggered ? 'chevron-up' : 'chevron-down'} size={18} />\n          </Clickable>\n        )}\n      >\n        {actions}\n      </DropdownMenu.Container>\n    </DropdownMenuWrapper>\n  );\n};\n\nexport default UsersTableDropdown;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport { Button } from 'shared/components';\n\ninterface MessageProps {\n  color: COLOR;\n}\n\nexport const Message = styled.div<MessageProps>`\n  margin-bottom: 25px;\n  padding: 10px 15px;\n  border-radius: 4px;\n  ${props => `background: ${mixin.rgba(props.color, 0.1)};`}\n  ${props => `color: ${props.color};`}\n  ${font.medium}\n  ${font.size(14)}\n`;\n\nexport const Heading = styled.h1`\n  padding-bottom: 20px;\n  line-height: 1.5;\n  ${font.regular}\n  ${font.size(21)}\n`;\n\nexport const Tip = styled.p`\n  padding-bottom: 20px;\n  color: ${COLOR.textMedium};\n  ${font.size(14)}\n`;\n\nexport const SuccessMessage = styled.p`\n  color: ${COLOR.textMedium};\n  ${font.size(14)}\n`;\n\nexport const SubmitButton = styled(Button)`\n  width: 100%;\n`;\n\nexport const BottomLink = styled.div`\n  padding-top: 20px;\n  text-align: center;\n  ${font.size(14)}\n  a {\n    display: inline-block;\n    padding: 3px 0;\n    ${mixin.link()}\n  }\n`;\n\nexport const BottomLinkLeftAligned = styled(BottomLink)`\n  padding: 0;\n  text-align: left;\n`;\n","import gql from 'graphql-tag';\n\nimport { fragmentCurrentUserForAuthentication } from 'shared/hooks/useAuthentication';\n\nexport const mutationLogin = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        ...CurrentUserForAuthentication\n      }\n    }\n  }\n  ${fragmentCurrentUserForAuthentication}\n`;\n\nexport const mutationResetPassword = gql`\n  mutation ResetPassword($email: String!) {\n    resetPassword(email: $email)\n  }\n`;\n\nexport const mutationCreatePassword = gql`\n  mutation CreatePassword($password: String!, $token: String!) {\n    createPassword(password: $password, token: $token) {\n      token\n      user {\n        ...CurrentUserForAuthentication\n      }\n    }\n  }\n  ${fragmentCurrentUserForAuthentication}\n`;\n\nexport const queryCheckResetPasswordToken = gql`\n  query CheckResetPasswordToken($token: String!) {\n    checkResetPasswordToken(token: $token)\n  }\n`;\n\nexport const queryInvitation = gql`\n  query Invitation($token: String!) {\n    invitation(token: $token) {\n      inviter {\n        firstName\n        lastName\n      }\n      invitee {\n        status\n        company {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const mutationActivateInvitee = gql`\n  mutation ActivateInvitee($token: String!, $input: InviteeInput!) {\n    activateInvitee(token: $token, input: $input) {\n      token\n      user {\n        ...CurrentUserForAuthentication\n      }\n    }\n  }\n  ${fragmentCurrentUserForAuthentication}\n`;\n\nexport const mutationSignup = gql`\n  mutation Signup($input: SignupInput!) {\n    signup(input: $input)\n  }\n`;\n","import React, { useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { Form, Field } from 'shared/components';\nimport { Message, SubmitButton, BottomLink } from 'shared/components/UnauthenticatedStyles';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\nimport AuthContext from 'shared/contexts/authContext';\nimport routes from 'shared/constants/routes';\nimport { COLOR } from 'shared/utils/styles';\n\nimport { mutationLogin } from './api';\nimport { Login } from './__graphql__/Login';\n\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\nconst AuthLogin: React.FC<void> = () => {\n  const { t } = useTranslation('auth');\n  const { login } = useContext(AuthContext);\n  const history = useHistory();\n  const location = useLocation();\n\n  const [mutateLogin, { error, loading: mutating }] = useMutation<Login>(mutationLogin);\n\n  return (\n    <UnauthenticatedPage title=\"login\">\n      <Form<FormValues>\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validations={{\n          email: [Form.is.required(), Form.is.maxLength(200), Form.is.email()],\n          password: [Form.is.required(), Form.is.maxLength(250)],\n        }}\n        onSubmit={async values => {\n          const { data } = await mutateLogin({ variables: values });\n          if (data) {\n            login(data.login);\n          }\n          if (location.state && location.state.redirect) {\n            history.push(location.state.redirect);\n          }\n        }}\n      >\n        <ContentBox as={Form.Element}>\n          {error && error.graphQLErrors.length > 0 && (\n            <Message color={COLOR.danger}>\n              {error.graphQLErrors.map(graphQLError => graphQLError.message).join('\\n')}\n            </Message>\n          )}\n          <Field.Input name=\"email\" label={t('email')} type=\"email\" icon=\"email\" />\n          <Field.Input name=\"password\" label={t('password')} type=\"password\" icon=\"lock\" />\n          <SubmitButton type=\"submit\" working={mutating}>\n            {t('login')}\n          </SubmitButton>\n          <BottomLink>\n            <Link to={routes.resetPassword()}>{t('forgotPassword')}</Link>\n          </BottomLink>\n        </ContentBox>\n      </Form>\n    </UnauthenticatedPage>\n  );\n};\n\nexport default AuthLogin;\n","import gql from 'graphql-tag';\n\nimport { CurrentUser as CurrentUserQueryType } from './__graphql__/CurrentUser';\n\nexport const queryCurrentUser = gql`\n  query CurrentUser {\n    me {\n      id\n      email\n      firstName\n      lastName\n      jobTitle\n      phone\n      fax\n      isAdmin\n    }\n  }\n`;\nexport type CurrentUserQuery = CurrentUserQueryType;\n\nexport const queryWorkCategories = gql`\n  query WorkCategories {\n    workCategories {\n      id\n      name\n    }\n  }\n`;\n\nexport const mutationUpdateBidRequestStatusBySubcontractor = gql`\n  mutation UpdateBidRequestStatusBySubcontractor($id: ID!, $status: String!) {\n    updateBidRequestStatusBySubcontractor(id: $id, status: $status)\n  }\n`;\n\nexport const mutationUpdateBidRequestDeclinedReasonBySubcontractor = gql`\n  mutation mutationUpdateBidRequestDeclinedReason($id: ID!, $declinedReason: String!) {\n    updateBidRequestDeclinedReasonBySubcontractor(id: $id, declinedReason: $declinedReason)\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const queryBidRequestForBidInviteFeedback = gql`\n  query BidRequestForBidInviteFeedback($bidInviteId: ID!) {\n    bidRequestForSubcontractor(mysteriousId: $bidInviteId) {\n      id\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\n\nimport {\n  mutationUpdateBidRequestStatusBySubcontractor,\n  mutationUpdateBidRequestDeclinedReasonBySubcontractor,\n} from 'shared/utils/queries';\nimport { BID_REQUEST_STATUS } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\nimport { BID_INVITE_ACTION_ROUTE_TYPE } from 'shared/constants/routes';\nimport { isLoading, isDoneLoading } from 'shared/utils/apollo';\n\nimport { queryBidRequestForBidInviteFeedback } from './api';\nimport {\n  BidRequestForBidInviteFeedback,\n  BidRequestForBidInviteFeedbackVariables,\n} from './__graphql__/BidRequestForBidInviteFeedback';\n\nexport interface MatchParams {\n  bidInviteId: string;\n  action: BID_INVITE_ACTION_ROUTE_TYPE;\n}\n\nconst getBidRequestStatus = (action: BID_INVITE_ACTION_ROUTE_TYPE): BID_REQUEST_STATUS | null => {\n  switch (action) {\n    case 'decline':\n      return BID_REQUEST_STATUS.inviteDeclined;\n\n    case 'accept':\n      return BID_REQUEST_STATUS.inviteAccepted;\n\n    case 'decide-later':\n      return BID_REQUEST_STATUS.undecided;\n\n    default:\n      return null;\n  }\n};\n\nexport const useBidInviteFeedback = ({ action, bidInviteId }: MatchParams) => {\n  const bidRequestQuery = useQuery<\n    BidRequestForBidInviteFeedback,\n    BidRequestForBidInviteFeedbackVariables\n  >(queryBidRequestForBidInviteFeedback, {\n    variables: { bidInviteId },\n  });\n\n  const bidRequestId = isDoneLoading(bidRequestQuery)\n    ? bidRequestQuery.data.bidRequestForSubcontractor.id\n    : null;\n\n  const [setBidRequestStatus, statusMutationResult] = useMutation(\n    mutationUpdateBidRequestStatusBySubcontractor,\n  );\n\n  const [setBidRequestDeclinedReason, declinedReasonMutationResult] = useMutation(\n    mutationUpdateBidRequestDeclinedReasonBySubcontractor,\n  );\n\n  useEffect(() => {\n    const status = getBidRequestStatus(action);\n    if (status && bidRequestId) {\n      setBidRequestStatus({ variables: { id: bidRequestId, status } }).catch(toast.error);\n    }\n  }, [action, bidRequestId, setBidRequestStatus]);\n\n  const isFeedbackNeeded = action === 'decline' && !declinedReasonMutationResult.called;\n\n  return {\n    isFeedbackNeeded,\n    isLoading:\n      declinedReasonMutationResult.loading ||\n      statusMutationResult.loading ||\n      isLoading(bidRequestQuery),\n    hasGivenFeedback: declinedReasonMutationResult.called,\n    setDeclinedReason({ declinedReason }: { declinedReason: string }) {\n      setBidRequestDeclinedReason({\n        variables: { id: bidRequestId, declinedReason },\n      }).catch(toast.error);\n    },\n  };\n};\n","import React from 'react';\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { PageLoader, UnauthenticatedPage, Form, Field } from 'shared/components';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\nimport {\n  SubmitButton,\n  Heading,\n  SuccessMessage,\n  Tip,\n} from 'shared/components/UnauthenticatedStyles';\nimport routes from 'shared/constants/routes';\n\nimport { MatchParams, useBidInviteFeedback } from './useBidInviteFeedback';\n\ninterface FormValues {\n  declinedReason: string;\n}\n\nconst BidInviteFeedback: React.FC<RouteComponentProps<MatchParams>> = routeProps => {\n  const { t } = useTranslation('bidInvites');\n\n  const { isFeedbackNeeded, isLoading, hasGivenFeedback, setDeclinedReason } = useBidInviteFeedback(\n    routeProps.match.params,\n  );\n\n  if (isLoading) {\n    return <PageLoader />;\n  }\n\n  if (hasGivenFeedback) {\n    return (\n      <UnauthenticatedPage title={t('overview.declinedReasonSuccess')}>\n        <ContentBox>\n          <Heading>{t('overview.declinedReasonHeader')}</Heading>\n          <SuccessMessage data-cy-success>{t('overview.declinedReasonSuccess')}</SuccessMessage>\n        </ContentBox>\n      </UnauthenticatedPage>\n    );\n  }\n\n  if (isFeedbackNeeded) {\n    return (\n      <UnauthenticatedPage title=\"inviteDeclined\">\n        <Form<FormValues>\n          initialValues={{\n            declinedReason: '',\n          }}\n          validations={{\n            declinedReason: [Form.is.required()],\n          }}\n          onSubmit={setDeclinedReason}\n        >\n          <ContentBox as={Form.Element}>\n            <Heading>{t('overview.declinedReasonHeader')}</Heading>\n            <Tip>{t('overview.declinedReasonAsk')}</Tip>\n            <Field.Textarea name=\"declinedReason\" minRows={4} />\n            <SubmitButton type=\"submit\">{t('common:submit')}</SubmitButton>\n          </ContentBox>\n        </Form>\n      </UnauthenticatedPage>\n    );\n  }\n\n  return <Redirect to={routes.bidInvite(routeProps.match.params.bidInviteId)} />;\n};\n\nexport default BidInviteFeedback;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation, Trans } from 'react-i18next';\n\nimport { Form, Field, ExternalLink } from 'shared/components';\nimport {\n  Heading,\n  Tip,\n  Message,\n  SuccessMessage,\n  SubmitButton,\n} from 'shared/components/UnauthenticatedStyles';\nimport { COLOR } from 'shared/utils/styles';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\n\nimport { mutationSignup } from './api';\nimport { Signup as SignupData, SignupVariables } from './__graphql__/Signup';\n\ninterface FormValues {\n  companyName: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  termsAccepted: boolean;\n}\n\nconst Signup: React.FC<void> = () => {\n  const { t } = useTranslation('auth');\n  const [completed, setCompleted] = useState(false);\n\n  const [signup, { error: mutationError, loading: mutating }] = useMutation<\n    SignupData,\n    SignupVariables\n  >(mutationSignup);\n\n  if (completed) {\n    return (\n      <UnauthenticatedPage title=\"signup\">\n        <ContentBox>\n          <Heading>{t('signupSuccessHeading')}</Heading>\n          <SuccessMessage data-cy-success>{t('signupSuccessMessage')}</SuccessMessage>\n        </ContentBox>\n      </UnauthenticatedPage>\n    );\n  }\n\n  return (\n    <UnauthenticatedPage title=\"signup\">\n      <Form<FormValues>\n        initialValues={{\n          companyName: '',\n          email: '',\n          firstName: '',\n          lastName: '',\n          password: '',\n          termsAccepted: false,\n        }}\n        validations={{\n          companyName: [Form.is.required()],\n          email: [Form.is.required()],\n          firstName: [Form.is.required(), Form.is.maxLength(100)],\n          lastName: [Form.is.required(), Form.is.maxLength(100)],\n          password: [Form.is.required(), Form.is.minLength(8), Form.is.maxLength(250)],\n          termsAccepted: Form.is.match(value => !!value, t('validation:termsMustBeAccepted')),\n        }}\n        onSubmit={async values => {\n          const { termsAccepted, ...submitValues } = values;\n\n          const success = await signup({\n            variables: { input: submitValues },\n          });\n          if (success) setCompleted(true);\n        }}\n      >\n        <ContentBox as={Form.Element}>\n          <Heading>{t('signupHeading')}</Heading>\n          <Tip>{t('signupMessage')}</Tip>\n          {mutationError && <Message color={COLOR.danger}>{mutationError.message}</Message>}\n          <Field.Input required name=\"companyName\" label={t('company.name')} />\n          <Field.Input required name=\"email\" label={t('user.email')} />\n          <Field.Input required name=\"firstName\" label={t('user.firstName')} />\n          <Field.Input required name=\"lastName\" label={t('user.lastName')} />\n          <Field.Input required name=\"password\" label={t('password')} type=\"password\" icon=\"lock\" />\n          <Field.Checkbox\n            name=\"termsAccepted\"\n            checkboxLabel={\n              <Trans i18nKey=\"termsAccepted\" t={t}>\n                I accept the{' '}\n                <ExternalLink to=\"https://www.cosuno.de/terms\">terms and conditions</ExternalLink>{' '}\n                and the{' '}\n                <ExternalLink to=\"https://www.cosuno.de/privacy\">privacy policy</ExternalLink>.\n              </Trans>\n            }\n          />\n          <Form.RequiredFieldsNote />\n          <SubmitButton type=\"submit\" working={mutating}>\n            {t('signupSubmit')}\n          </SubmitButton>\n        </ContentBox>\n      </Form>\n    </UnauthenticatedPage>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { ApolloError } from 'apollo-client';\n\nimport { Form, Field } from 'shared/components';\nimport { Message, Tip, SubmitButton, BottomLink } from 'shared/components/UnauthenticatedStyles';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\nimport routes from 'shared/constants/routes';\nimport { COLOR } from 'shared/utils/styles';\n\nimport { mutationResetPassword } from './api';\nimport { ResetPassword, ResetPasswordVariables } from './__graphql__/ResetPassword';\n\ninterface FormValues {\n  email: string;\n}\n\nconst AuthResetPassword: React.FC<void> = () => {\n  const { t } = useTranslation('auth');\n  const [resetPassword, { error, loading: mutating }] = useMutation<\n    ResetPassword,\n    ResetPasswordVariables\n  >(mutationResetPassword);\n\n  const getErrorMessage = (errorObj: ApolloError) => {\n    if (\n      errorObj.graphQLErrors[0].extensions?.code === 'NOT_FOUND' &&\n      errorObj.graphQLErrors[0].extensions.exception.entityName === 'User'\n    ) {\n      return t('resetPassword.emailNotFound');\n    }\n\n    return errorObj.message;\n  };\n\n  return (\n    <UnauthenticatedPage title=\"resetPassword\">\n      <Form<FormValues>\n        initialValues={{\n          email: '',\n        }}\n        validations={{\n          email: [Form.is.required(), Form.is.maxLength(200), Form.is.email()],\n        }}\n        onSubmit={(values, { setStatus }) => {\n          resetPassword({ variables: values }).then(\n            () => setStatus({ completed: true }),\n            () => {},\n          );\n        }}\n      >\n        {({ status = {} }: { status: { completed?: boolean } }) => (\n          <ContentBox as={Form.Element}>\n            {error && <Message color={COLOR.danger}>{getErrorMessage(error)}</Message>}\n            {status.completed && (\n              <Message color={COLOR.success}>{t('resetPassword.success')}</Message>\n            )}\n            <Field.Input name=\"email\" label={t('email')} type=\"email\" icon=\"email\" />\n            <Tip>{t('resetPassword.instructions')}</Tip>\n            <SubmitButton type=\"submit\" working={mutating}>\n              {t('resetPassword.submit')}\n            </SubmitButton>\n            <BottomLink>\n              {`${t('resetPassword.remember')} `}\n              <Link to={routes.login()}>{t('login')}</Link>\n            </BottomLink>\n          </ContentBox>\n        )}\n      </Form>\n    </UnauthenticatedPage>\n  );\n};\n\nexport default AuthResetPassword;\n","import React, { FC, useContext } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { Form, Field, PageLoader } from 'shared/components';\nimport { SubmitButton } from 'shared/components/UnauthenticatedStyles';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\nimport AuthContext from 'shared/contexts/authContext';\nimport routes from 'shared/constants/routes';\n\nimport { mutationCreatePassword, queryCheckResetPasswordToken } from './api';\nimport {\n  CheckResetPasswordToken,\n  CheckResetPasswordTokenVariables,\n} from './__graphql__/CheckResetPasswordToken';\nimport { CreatePassword, CreatePasswordVariables } from './__graphql__/CreatePassword';\n\ninterface CreatePasswordProps {\n  token: string;\n}\n\ninterface CreatePasswordFormValues {\n  password: string;\n}\n\nconst AuthCreatePassword: FC<RouteComponentProps<CreatePasswordProps>> = ({ match, history }) => {\n  const { t } = useTranslation('auth');\n  const { login } = useContext(AuthContext);\n\n  const redirectOnError = (error: Error) => {\n    history.push(routes.resetPassword());\n    toast.error(error.message);\n  };\n\n  const {\n    params: { token },\n  } = match;\n\n  const { error: tokenError, loading } = useQuery<\n    CheckResetPasswordToken,\n    CheckResetPasswordTokenVariables\n  >(queryCheckResetPasswordToken, {\n    variables: { token },\n  });\n  const [createPassword, { loading: mutating }] = useMutation<\n    CreatePassword,\n    CreatePasswordVariables\n  >(mutationCreatePassword);\n\n  if (loading) return <PageLoader />;\n  if (tokenError) redirectOnError(tokenError);\n\n  return (\n    <UnauthenticatedPage title=\"createPassword\">\n      <Form<CreatePasswordFormValues>\n        initialValues={{\n          password: '',\n        }}\n        validations={{\n          password: [Form.is.required(), Form.is.maxLength(250)],\n        }}\n        onSubmit={({ password }) =>\n          createPassword({ variables: { password, token } }).then(({ data }) => {\n            if (data) {\n              login(data.createPassword);\n              toast.success(t('createPasswordSuccess'));\n            }\n          }, redirectOnError)\n        }\n      >\n        <ContentBox as={Form.Element}>\n          <Field.Input name=\"password\" label={t('newPassword')} type=\"password\" icon=\"lock\" />\n          <SubmitButton type=\"submit\" working={mutating}>\n            {t('createPassword')}\n          </SubmitButton>\n        </ContentBox>\n      </Form>\n    </UnauthenticatedPage>\n  );\n};\n\nexport default AuthCreatePassword;\n","import React, { useContext } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Link, useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { Form, Field, QueryErrors, PageLoader } from 'shared/components';\nimport {\n  Heading,\n  Tip,\n  Message,\n  SubmitButton,\n  BottomLinkLeftAligned,\n} from 'shared/components/UnauthenticatedStyles';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\nimport AuthContext from 'shared/contexts/authContext';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\nimport { USER_STATUS } from '__graphql__/globalTypes';\nimport { COLOR } from 'shared/utils/styles';\n\nimport { queryInvitation, mutationActivateInvitee } from './api';\nimport { Invitation, InvitationVariables } from './__graphql__/Invitation';\nimport { ActivateInvitee, ActivateInviteeVariables } from './__graphql__/ActivateInvitee';\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  password: string;\n}\n\nconst AuthInvitation: React.FC<void> = () => {\n  const { t } = useTranslation('auth');\n  const { login } = useContext(AuthContext);\n  const { token } = useParams<{ token: string }>();\n\n  const { error: queryError, ...queryResults } = useQuery<Invitation, InvitationVariables>(\n    queryInvitation,\n    {\n      variables: { token },\n    },\n  );\n\n  const [activateInvitee, { error: mutationError, loading: mutating }] = useMutation<\n    ActivateInvitee,\n    ActivateInviteeVariables\n  >(mutationActivateInvitee);\n\n  if (queryError) return <QueryErrors error={queryError} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const {\n    invitation: { inviter, invitee },\n  } = queryResults.data;\n\n  if (invitee.status !== USER_STATUS.invited) {\n    return (\n      <UnauthenticatedPage title=\"invitation\">\n        <ContentBox>\n          <Heading>{t('invitationNotActiveHeading')}</Heading>\n          <Tip>{t('invitationNotActiveTip')}</Tip>\n          <BottomLinkLeftAligned>\n            <Link to={routes.login()}>{t('loginNow')}</Link>\n          </BottomLinkLeftAligned>\n        </ContentBox>\n      </UnauthenticatedPage>\n    );\n  }\n\n  return (\n    <UnauthenticatedPage title=\"invitation\">\n      <Form<FormValues>\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          password: '',\n        }}\n        validations={{\n          firstName: [Form.is.required(), Form.is.maxLength(100)],\n          lastName: [Form.is.required(), Form.is.maxLength(100)],\n          password: [Form.is.required(), Form.is.maxLength(250)],\n        }}\n        onSubmit={async input => {\n          const { data } = await activateInvitee({\n            variables: { token, input },\n          });\n\n          if (data) {\n            login(data.activateInvitee);\n            toast.success(t('accountCreated'));\n          }\n        }}\n      >\n        <ContentBox as={Form.Element}>\n          <Heading>\n            {t('invitationHeading', {\n              ...inviter,\n              company: invitee.company.name,\n            })}\n          </Heading>\n          <Tip>{t('invitationMessage')}</Tip>\n          {mutationError && <Message color={COLOR.danger}>{mutationError.message}</Message>}\n          <Field.Input required name=\"firstName\" label={t('user.firstName')} />\n          <Field.Input required name=\"lastName\" label={t('user.lastName')} />\n          <Field.Input required name=\"password\" label={t('password')} type=\"password\" icon=\"lock\" />\n          <Form.RequiredFieldsNote />\n          <SubmitButton type=\"submit\" working={mutating}>\n            {t('signupSubmit')}\n          </SubmitButton>\n        </ContentBox>\n      </Form>\n    </UnauthenticatedPage>\n  );\n};\n\nexport default AuthInvitation;\n","import styled, { css } from 'styled-components/macro';\n\nimport {\n  BID_REQUEST_STATUS,\n  COMPANY_STATUS,\n  BID_PACKAGE_STATUS,\n  PROJECT_STATUS,\n  USER_STATUS,\n} from '__graphql__/globalTypes';\nimport { font, COLOR } from 'shared/utils/styles';\n\nconst statusTagListStyles = css`\n  margin-left: 15px;\n  padding: 4px 8px;\n  ${font.size(12)}\n`;\n\nconst statusTagHeaderStyles = css`\n  padding: 6px 12px;\n  ${font.size(14)}\n`;\n\ninterface StatusTagProps {\n  inList?: boolean;\n  color?: string; // TODO: Explore turning 'color' into an enum\n  status: BID_REQUEST_STATUS | COMPANY_STATUS | BID_PACKAGE_STATUS | PROJECT_STATUS | USER_STATUS;\n}\n\nexport const StatusTag = styled.div<StatusTagProps>`\n  display: inline-block;\n  vertical-align: middle;\n  border-radius: 4px;\n  color: #fff;\n  background: ${props => props.color};\n  ${font.bold}\n  ${props => (props.inList ? statusTagListStyles : statusTagHeaderStyles)}\n`;\n\ninterface UserTagProps {\n  status: USER_STATUS;\n}\nconst getUserStatusColor = (status: USER_STATUS) => {\n  switch (status) {\n    case USER_STATUS.active:\n      return COLOR.success;\n    case USER_STATUS.inactive:\n    case USER_STATUS.inviteFailed:\n    case USER_STATUS.inviteCanceled:\n      return COLOR.danger;\n    default:\n      return COLOR.backgroundDark;\n  }\n};\nexport const UserStatusTag = styled(StatusTag).attrs(({ status }: UserTagProps) => ({\n  color: getUserStatusColor(status),\n}))``;\n\ninterface CompanyTagProps {\n  status: COMPANY_STATUS;\n}\nconst getCompanyStatusColor = (status: COMPANY_STATUS) => {\n  switch (status) {\n    case COMPANY_STATUS.active:\n      return COLOR.success;\n    default:\n      return COLOR.backgroundDark;\n  }\n};\nexport const CompanyStatusTag = styled(StatusTag).attrs(({ status }: CompanyTagProps) => ({\n  color: getCompanyStatusColor(status),\n}))``;\n\ninterface BidRequestTagProps {\n  status: BID_REQUEST_STATUS;\n}\nconst getBidRequestStatusColor = (status: BID_REQUEST_STATUS) => {\n  switch (status) {\n    case BID_REQUEST_STATUS.inviteDeclined:\n    case BID_REQUEST_STATUS.withdrawn:\n      return COLOR.danger;\n    case BID_REQUEST_STATUS.inviteAccepted:\n      return COLOR.success;\n    case BID_REQUEST_STATUS.bidSubmitted:\n      return COLOR.success;\n    case BID_REQUEST_STATUS.bidAwarded:\n      return COLOR.success;\n    default:\n      return COLOR.backgroundDark;\n  }\n};\nexport const BidRequestStatusTag = styled(StatusTag).attrs(({ status }: BidRequestTagProps) => ({\n  color: getBidRequestStatusColor(status),\n}))``;\n\ninterface BidPackageTagProps {\n  status: BID_PACKAGE_STATUS;\n}\nconst getBidPackageStatusColor = (status: BID_PACKAGE_STATUS) => {\n  switch (status) {\n    case BID_PACKAGE_STATUS.draft:\n      return COLOR.backgroundDark;\n    case BID_PACKAGE_STATUS.published:\n      return COLOR.success;\n    case BID_PACKAGE_STATUS.bidAwarded:\n      return COLOR.success;\n    default:\n      return COLOR.success;\n  }\n};\nexport const BidPackageStatusTag = styled(StatusTag).attrs(({ status }: BidPackageTagProps) => ({\n  color: getBidPackageStatusColor(status),\n}))``;\n\ninterface ProjectTagProps {\n  status: PROJECT_STATUS;\n}\nconst getProjectStatusColor = (status: PROJECT_STATUS) => {\n  switch (status) {\n    case PROJECT_STATUS.draft:\n      return COLOR.backgroundDark;\n    case PROJECT_STATUS.published:\n      return COLOR.success;\n    case PROJECT_STATUS.completed:\n      return COLOR.success;\n    default:\n      return COLOR.success;\n  }\n};\nexport const ProjectStatusTag = styled(StatusTag).attrs(({ status }: ProjectTagProps) => ({\n  color: getProjectStatusColor(status),\n}))``;\n","import gql from 'graphql-tag';\n\nexport const queryProjects = gql`\n  query Projects(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $status: String\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    projects(\n      query: $query\n      offset: $offset\n      limit: $limit\n      status: $status\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      projects {\n        id\n        number\n        name\n        customer\n        primaryUser {\n          id\n          firstName\n          lastName\n        }\n        status\n      }\n      totalRecords\n    }\n  }\n`;\n\nexport const mutationDeleteProject = gql`\n  mutation DeleteProject($id: ID!) {\n    deleteProject(id: $id)\n  }\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Button,\n  Table,\n  Cell,\n  DeletionModal,\n  IconLink,\n  RowBadge,\n  PageLoader,\n  QueryErrors,\n} from 'shared/components';\nimport { SpaceBetween, TableSearch, DisabledIcon } from 'shared/components/Styles';\nimport { ProjectStatusTag } from 'shared/components/TagStyles';\nimport { TABLE_ITEMS_PER_PAGE, SortDirection } from 'shared/constants';\nimport { PROJECT_STATUS } from '__graphql__/globalTypes';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\n\nimport { queryProjects, mutationDeleteProject } from './api';\nimport { Projects } from './__graphql__/Projects';\n\ninterface Props {\n  status?: PROJECT_STATUS;\n}\n\nconst ProjectsList: React.FC<Props> = ({ status }) => {\n  const { t } = useTranslation('projects');\n\n  const { error, ...queryResults } = useQuery<Projects>(queryProjects, {\n    variables: {\n      status,\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'number',\n      sortDirection: SortDirection.asc,\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { refetch, data, variables } = queryResults;\n\n  return (\n    <>\n      <SpaceBetween>\n        <TableSearch onChange={search => refetch({ query: search })} />\n        <Button data-cy-button-name=\"new\" linkTo={routes.createProject()}>\n          {t('newProject')}\n        </Button>\n      </SpaceBetween>\n      <Table\n        columns={[\n          { label: t('project.numberShort'), sortField: 'number', percentWidth: 12 },\n          { label: t('project.name'), sortField: 'name' },\n          { label: t('project.customer'), sortField: 'customer' },\n          { label: t('project.manager'), sortField: 'primaryUser' },\n          ...(status !== PROJECT_STATUS.closed\n            ? [\n                {\n                  label: t('project.status'),\n                  sortField: 'status',\n                  percentWidth: 15,\n                },\n              ]\n            : []),\n          { fixedWidth: 50 },\n          { fixedWidth: 50 },\n        ]}\n        rows={data.projects.projects.map(project => (\n          <Table.Row rowId={project.id}>\n            <Cell.Text>{project.number}</Cell.Text>\n            <Cell.Link to={routes.showProject(project.id)}>{project.name}</Cell.Link>\n            <Cell.Text>{project.customer}</Cell.Text>\n            <RowBadge\n              displayName={`${project.primaryUser.firstName} ${project.primaryUser.lastName}`}\n            />\n            {status !== PROJECT_STATUS.closed && (\n              <ProjectStatusTag inList status={project.status} data-cy-project-status>\n                {t(`project.${project.status}`)}\n              </ProjectStatusTag>\n            )}\n            <Cell.Icon>\n              {project.status === PROJECT_STATUS.closed ? (\n                <DisabledIcon type=\"edit\" />\n              ) : (\n                <IconLink type=\"edit\" to={routes.editProject(project.id)} />\n              )}\n            </Cell.Icon>\n            <Cell.Icon>\n              {project.status === PROJECT_STATUS.draft ? (\n                <DeletionModal\n                  id={project.id}\n                  mutation={mutationDeleteProject}\n                  refetchQueries={() => ['Projects']}\n                />\n              ) : (\n                <DisabledIcon type=\"delete\" />\n              )}\n            </Cell.Icon>\n          </Table.Row>\n        ))}\n        totalRecords={data.projects.totalRecords}\n        refetch={refetch}\n        variables={variables}\n        contentIfEmpty={() => {\n          if (variables.status === PROJECT_STATUS.closed) {\n            return (\n              <>\n                <EmptyContent.CallToAction>{t('closedProjectsHeadline')}</EmptyContent.CallToAction>\n                <EmptyContent.Explanation>\n                  {t('closedProjectsExplanation')}\n                </EmptyContent.Explanation>\n              </>\n            );\n          }\n\n          return (\n            <>\n              <EmptyContent.CallToAction>{t('newProjectCallToAction')}</EmptyContent.CallToAction>\n              <EmptyContent.Explanation>{t('newProjectExplanation')}</EmptyContent.Explanation>\n              <EmptyContent.Button data-cy-button-name=\"new\" hollow linkTo={routes.createProject()}>\n                {t('newProject')}\n              </EmptyContent.Button>\n            </>\n          );\n        }}\n      />\n    </>\n  );\n};\n\nexport default ProjectsList;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { HtmlHeadTags, Tabs, Page } from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\nimport { PROJECT_STATUS } from '__graphql__/globalTypes';\nimport routes, { PROJECTS_ROUTE_TYPE } from 'shared/constants/routes';\n\nimport List from './List';\n\nconst Projects = () => {\n  const { t } = useTranslation('projects');\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"projects\" />\n      <HeadingLarge>{t('projects')}</HeadingLarge>\n      <Tabs.Container>\n        <Tabs.Links>\n          <Tabs.Link to={routes.projects(PROJECTS_ROUTE_TYPE.open)}>{t('openProjects')}</Tabs.Link>\n          <Tabs.Link to={routes.projects(PROJECTS_ROUTE_TYPE.closed)}>\n            {t('closedProjects')}\n          </Tabs.Link>\n        </Tabs.Links>\n        <Tabs.Content>\n          <Tabs.Route path={routes.projects(PROJECTS_ROUTE_TYPE.open)} render={() => <List />} />\n          <Tabs.Route\n            path={routes.projects(PROJECTS_ROUTE_TYPE.closed)}\n            render={() => <List status={PROJECT_STATUS.closed} />}\n          />\n        </Tabs.Content>\n      </Tabs.Container>\n    </Page>\n  );\n};\n\nexport default Projects;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\n\nexport const Wrapper = styled.div`\n  margin: 50px auto 0;\n  max-width: 500px;\n  padding: 50px 50px 60px;\n  text-align: center;\n  border-radius: 4px;\n  background: ${COLOR.backgroundLight};\n`;\n\nexport const UnauthenticatedWrapper = styled.div`\n  text-align: center;\n`;\n\nexport const Heading = styled.h1`\n  ${font.size(60)}\n`;\n\nexport const WithdrawnHeading = styled.h1`\n  ${font.size(30)}\n`;\n\nexport const Message = styled.p`\n  color: ${COLOR.textDark};\n  padding: 10px 0 30px;\n  line-height: 1.35;\n  ${font.size(20)}\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Button, HtmlHeadTags, Page } from 'shared/components';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox } from 'shared/components/UnauthenticatedPage/Styles';\nimport routes from 'shared/constants/routes';\n\nimport { Heading, Message, Wrapper, UnauthenticatedWrapper, WithdrawnHeading } from './Styles';\n\nconst PageNotFoundContent: React.FC = () => {\n  const { t } = useTranslation('notFound');\n\n  return (\n    <>\n      <Heading data-cy-404-page>{t('heading')}</Heading>\n      <Message>{t('message')}</Message>\n      <Button linkTo={routes.root()}>{t('home')}</Button>\n    </>\n  );\n};\n\nconst PageNotFoundAuthenticated: React.FC = () => (\n  <Page>\n    <HtmlHeadTags title=\"notFound\" />\n    <Wrapper>\n      <PageNotFoundContent />\n    </Wrapper>\n  </Page>\n);\n\nconst PageNotFoundUnauthenticated: React.FC = () => (\n  <UnauthenticatedPage title=\"notFound\">\n    <ContentBox as={UnauthenticatedWrapper}>\n      <PageNotFoundContent />\n    </ContentBox>\n  </UnauthenticatedPage>\n);\n\nconst RequestWithdrawn: React.FC<{ isAuthenticated: boolean }> = ({ isAuthenticated }) => {\n  const { t } = useTranslation('notFound');\n  const WithdrawnPage = isAuthenticated ? Page : UnauthenticatedPage;\n  return (\n    <WithdrawnPage title=\"requestWithdrawn\">\n      <ContentBox as={UnauthenticatedWrapper}>\n        <WithdrawnHeading data-cy-404-page>{t('requestWithdrawnHeading')}</WithdrawnHeading>\n        <Message>{t('requestWithdrawnMessage')}</Message>\n        {isAuthenticated && <Button linkTo={routes.root()}>{t('home')}</Button>}\n      </ContentBox>\n    </WithdrawnPage>\n  );\n};\n\nexport default {\n  Authenticated: PageNotFoundAuthenticated,\n  Unauthenticated: PageNotFoundUnauthenticated,\n  RequestWithdrawn,\n};\n","import gql from 'graphql-tag';\n\nexport const queryProjectForShow = gql`\n  query ProjectForShow($id: ID!) {\n    project(id: $id) {\n      id\n      name\n      status\n    }\n  }\n`;\n\nexport const queryProjectForPrintingDocuments = gql`\n  query ProjectForPrintingDocuments($id: ID!) {\n    project(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nexport const queryOfficesForProjectOverview = gql`\n  query OfficesForProjectOverview($offset: Int!, $limit: Int!) {\n    offices(offset: $offset, limit: $limit) {\n      offices {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const queryProjectForOverview = gql`\n  query ProjectForOverview($id: ID!) {\n    project(id: $id) {\n      id\n      number\n      name\n      imageKey\n      customer\n      location\n      startsOn\n      endsOn\n      description\n      budget\n      primaryUser {\n        id\n      }\n      projectUsers {\n        id\n        user {\n          id\n          firstName\n          lastName\n        }\n        userRole\n      }\n      isEstimating\n      officeId\n      forceSubcontractorSignup\n      notes\n      createdAt\n    }\n  }\n`;\n\nexport const mutationCloseProject = gql`\n  mutation CloseProject($id: ID!) {\n    closeProject(id: $id)\n  }\n`;\n\nexport const mutationReopenProject = gql`\n  mutation ReopenProject($id: ID!) {\n    reopenProject(id: $id)\n  }\n`;\n\nexport const mutationUpdateProject = gql`\n  mutation UpdateProject($id: ID!, $input: ProjectInput!) {\n    updateProject(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n\nexport const mutationCreateProject = gql`\n  mutation CreateProject($input: ProjectInput!) {\n    createProject(input: $input) {\n      id\n    }\n  }\n`;\n","import gql from 'graphql-tag';\n\nexport const queryBidPackages = gql`\n  query BidPackages(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n    $projectId: ID!\n  ) {\n    bidPackages(\n      query: $query\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      projectId: $projectId\n    ) {\n      bidPackages {\n        id\n        number\n        name\n        status\n        bidsDueAt\n        requestStatusCount {\n          bidders\n          viewed\n          accepted\n          bids\n          inviteDeclined\n        }\n      }\n      totalRecords\n    }\n  }\n`;\n\nexport const mutationDeleteBidPackage = gql`\n  mutation DeleteBidPackage($id: ID!) {\n    deleteBidPackage(id: $id)\n  }\n`;\n","import styled, { css } from 'styled-components/macro';\n\nimport { Cell } from 'shared/components';\nimport { font, COLOR } from 'shared/utils/styles';\n\nexport const BidsDueAtDate = styled.div`\n  font-size: 15px;\n  padding-bottom: 2px;\n`;\n\nexport const BidsDueAtTime = styled.div`\n  font-size: 13px;\n  padding-top: 2px;\n  color: ${COLOR.textLight};\n`;\n\nexport const TimeCell = styled(Cell.Text)`\n  padding-top: 0;\n  padding-bottom: 0;\n`;\n\nexport const StatsCell = styled(Cell.Text)<{ highlighted?: boolean; faded?: boolean }>`\n  font-size: 15px;\n  text-align: right;\n  ${props =>\n    props.highlighted &&\n    css`\n      background-color: ${COLOR.backgroundLight};\n      ${font.bold}\n    `}\n  ${props =>\n    props.faded &&\n    css`\n      color: ${COLOR.textLight};\n    `}\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\n\nimport routes from 'shared/constants/routes';\nimport { BID_PACKAGE_STATUS } from '__graphql__/globalTypes';\nimport { DropdownMenuWrapper } from 'shared/components/Styles';\nimport { Clickable, DropdownMenu, Icon, DeletionModal } from 'shared/components';\n\nimport { mutationDeleteBidPackage } from './api';\n\ninterface Props {\n  projectId: string;\n  isProjectClosed: boolean;\n  bidPackageId: string;\n  bidPackageStatus: BID_PACKAGE_STATUS;\n}\n\nconst BidPackagesDropdown: React.FC<Props> = ({\n  bidPackageId,\n  projectId,\n  bidPackageStatus,\n  isProjectClosed,\n}) => {\n  const { t } = useTranslation('bidPackages');\n  const history = useHistory();\n  const { published, bidAwarded } = BID_PACKAGE_STATUS;\n\n  const actions = [];\n\n  if (!isProjectClosed) {\n    actions.push(\n      <DropdownMenu.Action\n        key=\"edit\"\n        onClick={() => history.push(routes.editBidPackage(projectId, bidPackageId))}\n      >\n        {t('editBidPackage')}\n      </DropdownMenu.Action>,\n    );\n\n    if (![published, bidAwarded].includes(bidPackageStatus)) {\n      actions.push(\n        <DeletionModal\n          key=\"delete\"\n          id={bidPackageId}\n          mutation={mutationDeleteBidPackage}\n          refetchQueries={() => ['BidPackages']}\n          renderLink={({ open }) => (\n            <DropdownMenu.Action danger onClick={open}>\n              {t('deleteBidPackage')}\n            </DropdownMenu.Action>\n          )}\n        />,\n      );\n    }\n  }\n\n  return (\n    <DropdownMenuWrapper>\n      <DropdownMenu.Container\n        renderTrigger={({ isTriggered, toggleTrigger }) => (\n          <Clickable disabled={actions.length === 0} onClick={toggleTrigger}>\n            <Icon type={isTriggered ? 'chevron-up' : 'chevron-down'} size={18} />\n          </Clickable>\n        )}\n      >\n        {actions}\n      </DropdownMenu.Container>\n    </DropdownMenuWrapper>\n  );\n};\n\nexport default BidPackagesDropdown;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { Button, Table, Cell, PageLoader, QueryErrors } from 'shared/components';\nimport { TABLE_ITEMS_PER_PAGE } from 'shared/constants';\nimport { formatDate } from 'shared/utils/dateTime';\nimport { SpaceBetween, TableSearch, ProjectClosedMessage } from 'shared/components/Styles';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport { nullString } from 'shared/constants/nullString';\nimport { BidPackageStatusTag } from 'shared/components/TagStyles';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\nimport { PROJECT_STATUS, SortDirection } from '__graphql__/globalTypes';\n\nimport { queryBidPackages } from './api';\nimport { StatsCell, BidsDueAtTime, BidsDueAtDate, TimeCell } from './Styles';\nimport BidPackagesDropdown from './BidPackagesDropdown';\nimport { BidPackages } from './__graphql__/BidPackages';\n\ninterface Props {\n  projectId: string;\n  projectStatus: PROJECT_STATUS;\n}\n\nconst BidPackagesList: React.FC<Props> = ({ projectId, projectStatus }) => {\n  const { t } = useTranslation('bidPackages');\n\n  const isProjectClosed = projectStatus === PROJECT_STATUS.closed;\n\n  const { error, ...queryResults } = useQuery<BidPackages>(queryBidPackages, {\n    variables: {\n      projectId,\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'number',\n      sortDirection: SortDirection.ASC,\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n  const {\n    data: { bidPackages },\n    refetch,\n    variables,\n  } = queryResults;\n\n  return (\n    <>\n      <SpaceBetween>\n        <TableSearch onChange={search => refetch({ query: search })} />\n        <Button\n          data-cy-button-name=\"new\"\n          linkTo={routes.createBidPackage(projectId)}\n          disabled={isProjectClosed}\n        >\n          {t('newBidPackage')}\n        </Button>\n      </SpaceBetween>\n      <Table\n        columns={[\n          { label: t('bidPackage.numberShort'), sortField: 'number', percentWidth: 12 },\n          { label: t('bidPackage.name'), sortField: 'name', percentWidth: 20 },\n          { label: t('bidPackage.bidsDueAt'), percentWidth: 9, sortField: 'bidsDueAt' },\n          { label: t('bidPackage.bidders'), percentWidth: 7, textAlign: 'right' },\n          { label: t('bidPackage.viewed'), percentWidth: 7, textAlign: 'right' },\n          { label: t('bidPackage.accepted'), percentWidth: 7, textAlign: 'right' },\n          { label: t('bidPackage.bids'), percentWidth: 7, textAlign: 'right' },\n          { label: t('bidPackage.declined'), percentWidth: 7, textAlign: 'right' },\n          { label: t('bidPackage.status'), sortField: 'status', percentWidth: 10 },\n          { fixedWidth: 50 },\n        ]}\n        rows={bidPackages.bidPackages.map(bidPackage => (\n          <Table.Row rowId={bidPackage.id}>\n            <Cell.Text>{bidPackage.number || nullString}</Cell.Text>\n            <Cell.Link to={routes.showBidPackage(variables.projectId, bidPackage.id)}>\n              {bidPackage.name}\n            </Cell.Link>\n            <TimeCell>\n              <BidsDueAtDate>{formatDate(bidPackage.bidsDueAt, 'L')}</BidsDueAtDate>\n              <BidsDueAtTime>{formatDate(bidPackage.bidsDueAt, 'LT')}</BidsDueAtTime>\n            </TimeCell>\n            <StatsCell>{bidPackage.requestStatusCount.bidders}</StatsCell>\n            <StatsCell>{bidPackage.requestStatusCount.viewed}</StatsCell>\n            <StatsCell>{bidPackage.requestStatusCount.accepted}</StatsCell>\n            <StatsCell highlighted>{bidPackage.requestStatusCount.bids}</StatsCell>\n            <StatsCell faded>{bidPackage.requestStatusCount.inviteDeclined}</StatsCell>\n            <BidPackageStatusTag inList status={bidPackage.status}>\n              {t(`bidPackage.${bidPackage.status}`)}\n            </BidPackageStatusTag>\n            <BidPackagesDropdown\n              bidPackageId={bidPackage.id}\n              bidPackageStatus={bidPackage.status}\n              isProjectClosed={isProjectClosed}\n              projectId={projectId}\n            />\n          </Table.Row>\n        ))}\n        totalRecords={bidPackages.totalRecords}\n        refetch={refetch}\n        variables={variables}\n        contentIfEmpty={() =>\n          isProjectClosed ? (\n            <ProjectClosedMessage>{t('projectClosed')}</ProjectClosedMessage>\n          ) : (\n            <>\n              <EmptyContent.CallToAction>\n                {t('newBidPackageCallToAction')}\n              </EmptyContent.CallToAction>\n              <EmptyContent.Explanation>{t('newBidPackageExplanation')}</EmptyContent.Explanation>\n              <EmptyContent.Button\n                data-cy-button-name=\"new\"\n                hollow\n                linkTo={routes.createBidPackage(projectId)}\n                disabled={isProjectClosed}\n              >\n                {t('newBidPackage')}\n              </EmptyContent.Button>\n            </>\n          )\n        }\n      />\n    </>\n  );\n};\n\nexport default BidPackagesList;\n","import styled from 'styled-components/macro';\n\nimport { Button } from 'shared/components';\n\nexport const ActionButton = styled(Button).attrs(() => ({\n  'data-cy-button-name': 'projectAction',\n}))`\n  margin-top: 9px;\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { PROJECT_STATUS } from '__graphql__/globalTypes';\nimport { ConfirmationModal } from 'shared/components';\nimport { ConfirmationModalConfirmHandlerParam } from 'shared/components/ConfirmationModal';\n\nimport { mutationCloseProject, mutationReopenProject } from './api';\nimport { ActionButton } from './Styles';\n\ninterface ProjectStatusActionProps {\n  project: { id: string; status: PROJECT_STATUS };\n  refetchProject: () => void;\n}\n\nconst ProjectStatusAction: React.FC<ProjectStatusActionProps> = ({ project, refetchProject }) => {\n  const { t } = useTranslation('projects');\n  const isProjectClosed = project.status === PROJECT_STATUS.closed;\n\n  const mutationProjectAvailability = isProjectClosed\n    ? mutationReopenProject\n    : mutationCloseProject;\n\n  const [toggleProjectAvailability] = useMutation(mutationProjectAvailability, {\n    refetchQueries: () => ['Projects', 'ProjectForShow', 'BidPackages', 'BidPackageForShow'],\n    awaitRefetchQueries: true,\n  });\n\n  const handleStatusToggle = async (\n    modal: ConfirmationModalConfirmHandlerParam,\n    successMessage: string,\n  ) => {\n    try {\n      await toggleProjectAvailability({\n        variables: {\n          id: project.id,\n        },\n      });\n      toast.success(successMessage);\n      modal.close();\n    } catch (error) {\n      toast.error(error);\n      modal.close();\n      refetchProject();\n    }\n  };\n\n  if (isProjectClosed) {\n    return (\n      <ConfirmationModal\n        key=\"reopenProjectModal\"\n        title={t('reopenProjectConfirmTitle')}\n        message={t('reopenConfirmMessage')}\n        confirmText={t('reopenProject')}\n        onConfirm={async modal => {\n          await handleStatusToggle(modal, t('reopenProjectSuccess'));\n        }}\n        renderLink={modal => (\n          <ActionButton hollow onClick={modal.open}>\n            {t('reopenProject')}\n          </ActionButton>\n        )}\n      />\n    );\n  }\n\n  return (\n    <ConfirmationModal\n      key=\"closeProjectModal\"\n      title={t('closeProjectConfirmTitle')}\n      message={t('closeConfirmMessage')}\n      confirmText={t('closeProject')}\n      onConfirm={async modal => {\n        await handleStatusToggle(modal, t('closeProjectSuccess'));\n      }}\n      renderLink={modal => (\n        <ActionButton hollow onClick={modal.open}>\n          {t('closeProject')}\n        </ActionButton>\n      )}\n    />\n  );\n};\n\nexport default ProjectStatusAction;\n","import styled from 'styled-components/macro';\n\nimport { font } from 'shared/utils/styles';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 40px;\n  padding: 9px 0;\n  line-height: 1.6;\n\n  ${font.size(14)};\n`;\n","import React, { ReactNode } from 'react';\nimport { Field, FieldProps } from 'formik';\n\nimport { nullString } from 'shared/constants';\n\nimport { Wrapper } from './styles';\n\nconst isValueMissing = (value: unknown) => value === undefined || value === null || value === '';\n\nexport interface DisplayFieldProps {\n  className?: string;\n  name: string;\n  // We don't know what the value is going to be, and we match the type Formik\n  // uses for it\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  mapValue?: (value: any) => ReactNode;\n}\n\nconst DisplayField: React.FC<DisplayFieldProps> = ({ className, name, mapValue = x => x }) => (\n  <Field name={name}>\n    {({ field: { value } }: FieldProps) => (\n      <Wrapper className={className}>\n        {isValueMissing(value) ? nullString : mapValue(value)}\n      </Wrapper>\n    )}\n  </Field>\n);\n\nexport default DisplayField;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport { FieldWrapper } from 'shared/components/Field';\n\nexport const Row = styled.div`\n  display: flex;\n\n  & + & {\n    margin-top: 10px;\n  }\n\n  ${FieldWrapper} {\n    margin-bottom: 0;\n  }\n`;\n\nexport const Label = styled.label`\n  flex-shrink: 0;\n  display: flex;\n  align-items: center;\n  width: 200px;\n  height: 40px;\n  padding-right: 25px;\n  color: ${COLOR.textMedium};\n\n  ${font.size(14)};\n`;\n","import React, { ReactNode } from 'react';\n\nimport { uniqueId } from 'shared/utils/javascript';\nimport DisplayField, { DisplayFieldProps } from 'shared/components/DisplayField';\n\nimport { Row, Label } from './styles';\n\ninterface RenderProps {\n  required: boolean;\n  name: string;\n  id: string;\n}\n\ninterface FormRowProps {\n  name: string;\n  label: string;\n  required?: boolean;\n  isEditing: boolean;\n  children: (props: RenderProps) => ReactNode;\n}\n\nconst FormRow: React.FC<FormRowProps & DisplayFieldProps> = ({\n  name,\n  label,\n  required = false,\n  isEditing,\n  children,\n  ...props\n}) => {\n  const fieldId = uniqueId(`field-${name}`);\n\n  return (\n    <Row data-cy-form-row-label={label}>\n      {isEditing ? (\n        <>\n          <Label as=\"label\" htmlFor={fieldId}>\n            {label}\n            {required && ' *'}\n          </Label>\n          {children({ required, name, id: fieldId })}\n        </>\n      ) : (\n        <>\n          <Label as=\"div\">{label}</Label>\n          <DisplayField name={name} {...props} />\n        </>\n      )}\n    </Row>\n  );\n};\n\nexport default FormRow;\n","import styled from 'styled-components/macro';\n\nimport { font, COLOR } from 'shared/utils/styles';\nimport { Image } from 'shared/components/ImageUploader';\nimport { Button, Field } from 'shared/components';\n\nexport const Wrapper = styled.div`\n  max-width: 600px;\n  margin: auto;\n`;\n\nexport const FormWrapper = styled.div`\n  padding: 35px;\n  border: 1px solid ${COLOR.borderLight};\n  border-radius: 4px;\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  justify-content: flex-end;\n\n  &:first-child {\n    margin-bottom: 25px;\n  }\n  &:last-child {\n    margin-top: 25px;\n  }\n`;\n\nexport const ControlsButton = styled(Button)`\n  & + & {\n    margin-left: 25px;\n  }\n`;\n\nexport const Heading = styled.div`\n  margin-top: 40px;\n  margin-bottom: 20px;\n\n  ${font.size(20)};\n  ${font.bold};\n\n  &:first-child {\n    margin-top: 0;\n  }\n`;\n\nexport const StyledFormCheckbox = styled(Field.Checkbox)`\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\nexport const StyledImage = styled(Image)`\n  width: 50%;\n  margin: 0;\n`;\n","import { useContext } from 'react';\n\nimport AuthContext, {\n  AuthContextBase,\n  isAuthenticated,\n  isAnonymous,\n} from 'shared/contexts/authContext';\nimport { COMPANY_TYPE, USER_TYPE } from '__graphql__/globalTypes';\nimport routes, { PROJECTS_ROUTE_TYPE } from 'shared/constants/routes';\nimport { AUTH_STATUS } from 'shared/constants';\n\nconst useUserAuthStatus = () => {\n  const authContext = useContext<AuthContextBase>(AuthContext);\n\n  const isUserAuthenticated = isAuthenticated(authContext);\n\n  const isUserEmployee =\n    isAuthenticated(authContext) && authContext.authState.user.type === USER_TYPE.employee;\n\n  const isUserAnonymous = isAnonymous(authContext);\n\n  const isUserAuthenticating = authContext.authState.status === AUTH_STATUS.authenticating;\n\n  const isUserPrincipal =\n    isAuthenticated(authContext) && authContext.authState.companyType === COMPANY_TYPE.principal;\n\n  const isUserAgent =\n    isAuthenticated(authContext) && authContext.authState.companyType === COMPANY_TYPE.agent;\n\n  const isUserAdmin = isAuthenticated(authContext) && authContext.authState.isAdmin;\n\n  const companyType = isAuthenticated(authContext) ? authContext.authState.companyType : undefined;\n\n  let userBaseUrl = routes.root();\n  if (isUserPrincipal) userBaseUrl = routes.projects(PROJECTS_ROUTE_TYPE.open);\n  if (isUserAgent) userBaseUrl = routes.bidRequests();\n  if (isUserAnonymous) userBaseUrl = routes.login();\n\n  return {\n    isUserPrincipal,\n    isUserAgent,\n    isUserAdmin,\n    isUserAuthenticated,\n    isUserEmployee,\n    isUserAuthenticating,\n    isUserAnonymous,\n    companyType,\n    userBaseUrl,\n  };\n};\n\nexport default useUserAuthStatus;\n","import gql from 'graphql-tag';\n\nexport const queryUsersForProjectForm = gql`\n  query UsersForProjectForm($offset: Int!, $limit: Int!) {\n    users(offset: $offset, limit: $limit) {\n      users {\n        id\n        firstName\n        lastName\n        status\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { Form, Field, ModalFormBody, QueryErrors, PageLoader } from 'shared/components';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { USER_STATUS } from '__graphql__/globalTypes';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport { ProjectForOverview_project_projectUsers } from '../__graphql__/ProjectForOverview';\n\nimport { queryUsersForProjectForm } from './api';\nimport {\n  UsersForProjectForm,\n  UsersForProjectForm_users_users,\n  UsersForProjectFormVariables,\n} from './__graphql__/UsersForProjectForm';\n\ninterface Props {\n  closeModal: () => void;\n  modifyUser: (newUser: { user: UsersForProjectForm_users_users; userRole: string }) => void;\n  formUser?: {\n    name: string;\n    id: string;\n    userRole?: string;\n  };\n  assignedUsers: ProjectForOverview_project_projectUsers[];\n}\n\ninterface FormValues {\n  id: string;\n  name: string;\n  userRole: string;\n}\n\nconst UsersForm: React.FC<Props> = ({ closeModal, assignedUsers, formUser, modifyUser }) => {\n  const { t } = useTranslation('projects');\n  const { error, ...queryResults } = useQuery<UsersForProjectForm, UsersForProjectFormVariables>(\n    queryUsersForProjectForm,\n    {\n      variables: { offset: 0, limit: 200 },\n      fetchPolicy: 'no-cache',\n    },\n  );\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { users } = queryResults.data;\n\n  const assignedUserIds = new Set(assignedUsers.map(({ user: { id } }) => id));\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        id: formUser?.id || '',\n        name: formUser?.name || '',\n        userRole: formUser?.userRole || '',\n      }}\n      validations={{\n        id: [Form.is.required()],\n        userRole: [Form.is.required()],\n      }}\n      onSubmit={({ id, userRole }) => {\n        const user = users.users.find(({ id: sourceId }) => id === sourceId);\n        if (user) {\n          modifyUser({ user, userRole });\n        }\n        closeModal();\n      }}\n    >\n      {({ handleSubmit }) => (\n        <ModalFormBody\n          useFullPageHeight={false}\n          working={queryResults.loading}\n          close={closeModal}\n          submitOnEnter\n          onSubmit={event => {\n            event.preventDefault();\n            handleSubmit();\n          }}\n        >\n          <HeadingMedium>{t(formUser ? 'editUserTitle' : 'addUserTitle')}</HeadingMedium>\n          {formUser ? (\n            <Field.Input disabled name=\"name\" label={t('user.name')} />\n          ) : (\n            <Field.SelectSingle\n              name=\"id\"\n              label={t('user.name')}\n              options={users.users\n                .filter(\n                  sourceUser =>\n                    sourceUser.status === USER_STATUS.active && !assignedUserIds.has(sourceUser.id),\n                )\n                .map(sourceUser => ({\n                  value: sourceUser.id,\n                  label: `${sourceUser.firstName} ${sourceUser.lastName}`,\n                }))}\n            />\n          )}\n          <Field.Input name=\"userRole\" label={t('user.role')} />\n        </ModalFormBody>\n      )}\n    </Form>\n  );\n};\n\nexport default UsersForm;\n","import styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport { AddMoreLink, Avatar, Icon } from 'shared/components';\nimport EmptyContent from 'shared/components/EmptyContent';\n\nexport const Role = styled.div`\n  padding-top: 6px;\n  color: ${COLOR.textMedium};\n  ${font.size(12)}\n`;\n\nexport const Name = styled.div`\n  margin-top: -2px;\n  ${font.regular};\n  ${font.size(14)}\n`;\n\nexport const UserActionIcon = styled(Icon)`\n  cursor: pointer;\n`;\n\ninterface RadioButtonCircleProps {\n  selected: boolean;\n  disabled?: boolean;\n}\n\nexport const RadioButtonCircle = styled.div<RadioButtonCircleProps>`\n  cursor: pointer;\n  height: 18px;\n  width: 18px;\n  border-radius: 50%;\n  border: 1px solid ${COLOR.borderLight};\n  resize: none;\n  overflow-y: hidden;\n  box-shadow: inset 0 0 1px 0 rgba(0, 0, 0, 0.03);\n  ${({ selected }) =>\n    selected\n      ? css`\n          border: 3px solid ${COLOR.borderLight};\n          background: ${COLOR.primary};\n        `\n      : css`\n          background: #fff;\n        `}\n  ${props =>\n    props.disabled &&\n    css`\n      cursor: not-allowed;\n    `}\n  ${props =>\n    !props.disabled &&\n    css`\n      :active {\n        border: 1px solid ${COLOR.borderMedium};\n      }\n    `}\n`;\n\nexport const EmptyTable = styled(EmptyContent)`\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n`;\n\nexport const EmptyTableExplanation = styled(EmptyContent.Explanation)`\n  color: ${COLOR.danger};\n`;\n\nexport const AddMore = styled(AddMoreLink)`\n  padding-top: 4px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const ProjectUserAvatar = styled(Avatar)`\n  flex-shrink: 0;\n  margin-right: 10px;\n`;\n\nexport const ProjectUserBadgeWrapper = styled.div`\n  padding: 16px 10px 16px 12px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProjectUser = styled.div`\n  flex-shrink: 0;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { ArrayHelpers } from 'formik';\n\nimport { Modal, ConfirmationModal, Table } from 'shared/components';\nimport { TableProps } from 'shared/components/Table';\nimport { MODAL_VARIANTS } from 'shared/constants';\n\nimport { ProjectForOverview_project_projectUsers } from '../__graphql__/ProjectForOverview';\n\nimport UsersForm from './Form';\nimport {\n  Role,\n  Name,\n  ProjectUserAvatar,\n  ProjectUserBadgeWrapper,\n  RadioButtonCircle,\n  UserActionIcon,\n  EmptyTableExplanation,\n  EmptyTable,\n} from './Style';\n\ninterface ProjectUsersTableProps {\n  projectUsers: ProjectForOverview_project_projectUsers[];\n  arrayHelpers: Pick<ArrayHelpers, 'remove' | 'replace'>;\n  primaryUserId: string;\n  setPrimaryUserId: (id: string | undefined) => void;\n  isEditing: boolean;\n}\n\nconst ProjectUsersTable: React.FC<ProjectUsersTableProps> = ({\n  projectUsers,\n  arrayHelpers: { remove, replace },\n  primaryUserId,\n  setPrimaryUserId,\n  isEditing,\n}) => {\n  const { t } = useTranslation('projects');\n\n  if (projectUsers.length === 0) {\n    return (\n      <EmptyTable>\n        <EmptyTableExplanation>{t('emptyUsersList')}</EmptyTableExplanation>\n      </EmptyTable>\n    );\n  }\n\n  const columns: TableProps['columns'] = [\n    { label: t('project.user'), percentWidth: 50 },\n    { label: t('project.manager'), textAlign: 'center' },\n  ];\n\n  if (isEditing) {\n    columns.push({ fixedWidth: 40 }, { fixedWidth: 40 });\n  }\n\n  return (\n    <>\n      <Table\n        columns={columns}\n        rows={projectUsers.map(({ user: { id, firstName, lastName }, userRole }, i) => {\n          const name = `${firstName} ${lastName}`;\n          return (\n            <Table.Row rowId={id}>\n              <ProjectUserBadgeWrapper>\n                <ProjectUserAvatar name={name} />\n                <div>\n                  <Name>{name}</Name>\n                  <Role>{userRole}</Role>\n                </div>\n              </ProjectUserBadgeWrapper>\n              <RadioButtonCircle\n                data-cy-radio-button\n                selected={id === primaryUserId}\n                onClick={() => {\n                  if (!isEditing) {\n                    return;\n                  }\n\n                  if (id !== primaryUserId) {\n                    setPrimaryUserId(id);\n                  }\n                }}\n                disabled={!isEditing}\n              />\n              {isEditing && (\n                <Modal\n                  variant={MODAL_VARIANTS.center}\n                  renderLink={modal => <UserActionIcon type=\"edit\" onClick={modal.open} />}\n                  renderContent={modal => (\n                    <UsersForm\n                      closeModal={modal.close}\n                      assignedUsers={projectUsers}\n                      formUser={{ id, name, userRole }}\n                      modifyUser={editedProjectUser => {\n                        replace(i, editedProjectUser);\n                      }}\n                    />\n                  )}\n                />\n              )}\n              {isEditing && (\n                <ConfirmationModal\n                  title={t('removeUserTitle')}\n                  message={t('removeUserMessage', {\n                    name: `${firstName} ${lastName}`,\n                  })}\n                  renderLink={modal => <UserActionIcon type=\"delete\" onClick={modal.open} />}\n                  onConfirm={({ close }) => {\n                    if (id === primaryUserId) {\n                      const headUser = i === 0 ? projectUsers[1] : projectUsers[0];\n                      setPrimaryUserId(headUser?.user?.id || undefined);\n                    }\n                    remove(i);\n                    close();\n                  }}\n                />\n              )}\n            </Table.Row>\n          );\n        })}\n      />\n    </>\n  );\n};\n\nexport default ProjectUsersTable;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FieldArray } from 'formik';\n\nimport { Modal } from 'shared/components';\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport useUserAuthStatus from 'shared/hooks/useUserAuthStatus';\n\nimport { ProjectForOverview_project_projectUsers } from '../__graphql__/ProjectForOverview';\n\nimport ProjectUsersTable from './UsersTable';\nimport UsersForm from './Form';\nimport { AddMore } from './Style';\nimport { UsersForProjectForm_users_users } from './__graphql__/UsersForProjectForm';\n\ninterface ProjectUsersProps {\n  projectUsers: ProjectForOverview_project_projectUsers[];\n  primaryUserId: string;\n  setPrimaryUserId: (id: string | undefined) => void;\n  isEditing: boolean;\n}\n\nexport const ProjectUsers: React.FC<ProjectUsersProps> = ({\n  projectUsers,\n  primaryUserId,\n  setPrimaryUserId,\n  isEditing,\n}) => {\n  const { t } = useTranslation('projects');\n  const { isUserEmployee } = useUserAuthStatus();\n\n  return (\n    <FieldArray name=\"projectUsers\">\n      {fieldArrayRenderProps => (\n        <>\n          <ProjectUsersTable\n            projectUsers={projectUsers}\n            arrayHelpers={fieldArrayRenderProps}\n            primaryUserId={primaryUserId}\n            setPrimaryUserId={setPrimaryUserId}\n            isEditing={isEditing}\n          />\n          {isEditing && isUserEmployee && (\n            <Modal\n              variant={MODAL_VARIANTS.center}\n              renderLink={modal => <AddMore onClick={modal.open}>{t('addUserLink')}</AddMore>}\n              renderContent={modal => (\n                <UsersForm\n                  closeModal={modal.close}\n                  assignedUsers={projectUsers}\n                  modifyUser={(newUser: {\n                    user: UsersForProjectForm_users_users;\n                    userRole: string;\n                  }) => {\n                    if (projectUsers.length === 0) {\n                      setPrimaryUserId(newUser.user.id);\n                    }\n                    fieldArrayRenderProps.push(newUser);\n                  }}\n                />\n              )}\n            />\n          )}\n        </>\n      )}\n    </FieldArray>\n  );\n};\n\nexport default ProjectUsers;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\nimport { Field as FormikField, FieldProps } from 'formik';\n\nimport { ProjectInput } from '__graphql__/globalTypes';\nimport Form from 'shared/components/Form';\nimport Field from 'shared/components/Field';\nimport FormRow from 'shared/components/FormRow';\nimport CurrencyFormatter from 'shared/components/CurrencyFormatter';\nimport {\n  Controls,\n  ControlsButton,\n  Wrapper,\n  FormWrapper,\n  Heading,\n  StyledFormCheckbox,\n  StyledImage,\n} from 'shared/components/Overview';\nimport { SectionHint } from 'shared/components/Styles';\nimport { DATE_FORMAT_WITHOUT_TIME, DATE_FORMAT_WITH_TIME } from 'shared/components/DatePicker';\nimport { CurrentUser_me } from 'shared/utils/__graphql__/CurrentUser';\nimport { getImageUrl, IMAGE_TYPE } from 'shared/utils/images';\nimport { omit } from 'shared/utils/javascript';\n\nimport ProjectUsers from './Users';\nimport {\n  ProjectForOverview_project,\n  ProjectForOverview_project_projectUsers,\n} from './__graphql__/ProjectForOverview';\nimport { OfficesForProjectOverview_offices } from './__graphql__/OfficesForProjectOverview';\n\ninterface FormValues {\n  number: string;\n  name: string;\n  imageKey: string | null;\n  customer: string;\n  location: string;\n  startsOn: string | null;\n  endsOn: string | null;\n  projectUsers: Array<{\n    user: {\n      id: string;\n      firstName: string | null;\n      lastName: string | null;\n    };\n    userRole: string;\n  }>;\n  primaryUserId: string;\n  description: string;\n  isEstimating: boolean;\n  budget: string;\n  officeId: string;\n  forceSubcontractorSignup: boolean;\n  notes: string;\n  createdAt: string | null;\n}\n\ninterface OverviewProps {\n  project: Partial<ProjectForOverview_project>;\n  offices: OfficesForProjectOverview_offices;\n  currentUser: CurrentUser_me;\n  submitForm: (input: ProjectInput) => Promise<void>;\n  onlyAllowEdit?: boolean;\n  editByDefault?: boolean;\n}\n\nconst Overview: React.FC<OverviewProps> = ({\n  project,\n  offices,\n  currentUser: { id: initialUserId, firstName, lastName },\n  submitForm,\n  onlyAllowEdit = false,\n  editByDefault = false,\n}) => {\n  const { t } = useTranslation('projects');\n  const [isEditing, setIsEditing] = useState(onlyAllowEdit || editByDefault);\n\n  const initialProjectUsers = [\n    {\n      user: {\n        id: initialUserId,\n        firstName,\n        lastName,\n      },\n      userRole: t('project.defaultUserRole'),\n    },\n  ];\n\n  const officeSelectOptions = offices.offices.map(office => ({\n    value: office.id,\n    label: office.name,\n  }));\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        number: project.number || '',\n        name: project.name || '',\n        imageKey: project.imageKey || null,\n        customer: project.customer || '',\n        location: project.location || '',\n        startsOn: project.startsOn || null,\n        endsOn: project.endsOn || null,\n        projectUsers: project.projectUsers || initialProjectUsers,\n        primaryUserId: project.primaryUser ? project.primaryUser.id : initialUserId,\n        description: project.description || '',\n        isEstimating: project.isEstimating || false,\n        budget: String(project.budget || ''),\n        officeId: project.officeId || '',\n        forceSubcontractorSignup: project.forceSubcontractorSignup || false,\n        notes: project.notes || '',\n        createdAt: project.createdAt || null,\n      }}\n      validations={{\n        number: [Form.is.required(), Form.is.maxLength(100)],\n        name: [Form.is.required(), Form.is.maxLength(100)],\n        customer: [Form.is.maxLength(100)],\n        location: [Form.is.required(), Form.is.maxLength(200)],\n        projectUsers: Form.is.notEmptyArray(),\n        description: Form.is.maxLength(60000),\n        isEstimating: Form.is.required(),\n        officeId: Form.is.required(),\n        startsOn: Form.is.notAfter<FormValues>(\n          values => values.endsOn,\n          t('project.validation.mustBeBeforeEndDate'),\n        ),\n        endsOn: Form.is.notBefore<FormValues>(\n          values => values.startsOn,\n          t('project.validation.mustBeAfterStartDate'),\n        ),\n      }}\n      onSubmit={({ budget, projectUsers, ...remainingValues }) =>\n        submitForm({\n          ...omit(remainingValues, 'createdAt'),\n          projectUsers: projectUsers.map(({ userRole, user: { id: userId } }) => ({\n            userRole,\n            userId,\n          })),\n          budget: budget ? Number(parseFloat(budget).toFixed(2)) : null,\n        })\n      }\n    >\n      {({ resetForm, values }) => (\n        <Wrapper as={isEditing ? Form.Element : 'div'}>\n          <Controls>\n            {!isEditing && (\n              <ControlsButton hollow onClick={() => setIsEditing(true)}>\n                {t('overview.buttonLabels.edit')}\n              </ControlsButton>\n            )}\n            {isEditing && !onlyAllowEdit && (\n              <>\n                <ControlsButton\n                  hollow\n                  onClick={() => {\n                    setIsEditing(false);\n                    resetForm();\n                  }}\n                >\n                  {t('overview.buttonLabels.cancel')}\n                </ControlsButton>\n                <ControlsButton type=\"submit\">{t('overview.buttonLabels.save')}</ControlsButton>\n              </>\n            )}\n          </Controls>\n          <FormWrapper>\n            <Heading>{t('overview.headings.basicInfo')}</Heading>\n            <FormRow isEditing={isEditing} required name=\"number\" label={t('project.number')}>\n              {props => <Field.Input {...props} />}\n            </FormRow>\n            <FormRow isEditing={isEditing} required name=\"name\" label={t('project.name')}>\n              {props => <Field.Input {...props} />}\n            </FormRow>\n            <FormRow isEditing={isEditing} name=\"customer\" label={t('project.customer')}>\n              {props => <Field.Input {...props} />}\n            </FormRow>\n            <FormRow isEditing={isEditing} required name=\"location\" label={t('project.location')}>\n              {props => <Field.LocationSearch {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"startsOn\"\n              label={t('project.startsOn')}\n              mapValue={value => moment(value).format(DATE_FORMAT_WITHOUT_TIME)}\n            >\n              {props => <Field.DatePicker {...props} withTime={false} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"endsOn\"\n              label={t('project.endsOn')}\n              mapValue={value => moment(value).format(DATE_FORMAT_WITHOUT_TIME)}\n            >\n              {props => <Field.DatePicker {...props} withTime={false} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              required\n              name=\"officeId\"\n              label={t('project.office')}\n              // The selected value has to be in the options array\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              mapValue={value => officeSelectOptions.find(option => option.value === value)!.label}\n            >\n              {props => <Field.SelectSingle {...props} options={officeSelectOptions} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              required\n              name=\"isEstimating\"\n              label={t('phase')}\n              mapValue={value => (value ? t('estimationPhase') : t('bidPhase'))}\n            >\n              {props => (\n                <Field.RadioButtonGroup\n                  {...props}\n                  values={[\n                    { optionValue: false, label: t('bidPhase') },\n                    { optionValue: true, label: t('estimationPhase') },\n                  ]}\n                />\n              )}\n            </FormRow>\n            <FormRow isEditing={isEditing} name=\"description\" label={t('project.description')}>\n              {props => <Field.Textarea {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"imageKey\"\n              label={t('project.image')}\n              mapValue={value => (\n                <StyledImage\n                  data-cy-project-image\n                  src={getImageUrl(value, IMAGE_TYPE.imageUploader)}\n                />\n              )}\n            >\n              {props => <Field.ImageUploader {...props} />}\n            </FormRow>\n            <StyledFormCheckbox\n              name=\"forceSubcontractorSignup\"\n              checkboxLabel={t('project.forceSubcontractorSignup')}\n              disabled={!isEditing}\n            />\n            <Heading>{t('usersTitle')}</Heading>\n            <FormikField name=\"projectUsers\">\n              {({\n                field: { value: projectUsers },\n              }: FieldProps<ProjectForOverview_project_projectUsers[], FormValues>) => (\n                <FormikField name=\"primaryUserId\">\n                  {({\n                    field: { value: primaryUserId },\n                    form: { setFieldValue },\n                  }: FieldProps<string, FormValues>) => (\n                    <ProjectUsers\n                      projectUsers={projectUsers}\n                      primaryUserId={primaryUserId}\n                      setPrimaryUserId={newId => setFieldValue('primaryUserId', newId)}\n                      isEditing={isEditing}\n                    />\n                  )}\n                </FormikField>\n              )}\n            </FormikField>\n            <Heading>{t('overview.headings.internalData')}</Heading>\n            <SectionHint>{t('internalDataHint')}</SectionHint>\n            {values.createdAt && (\n              <FormRow\n                isEditing={false}\n                name=\"createdAt\"\n                label={t('project.createdAt')}\n                mapValue={value => moment(value).format(DATE_FORMAT_WITH_TIME)}\n              >\n                {() => null}\n              </FormRow>\n            )}\n            <FormRow\n              isEditing={isEditing}\n              name=\"budget\"\n              label={t('project.budget')}\n              mapValue={value => <CurrencyFormatter value={Number(value)} />}\n            >\n              {props => <Field.CurrencyInput icon=\"euro\" {...props} />}\n            </FormRow>\n            <FormRow isEditing={isEditing} name=\"notes\" label={t('project.notes')}>\n              {props => <Field.Textarea {...props} />}\n            </FormRow>\n            {isEditing && <Form.RequiredFieldsNote />}\n          </FormWrapper>\n          {isEditing && (\n            <Controls>\n              {!onlyAllowEdit && (\n                <ControlsButton\n                  hollow\n                  onClick={() => {\n                    setIsEditing(false);\n                    resetForm();\n                  }}\n                >\n                  {t('overview.buttonLabels.cancel')}\n                </ControlsButton>\n              )}\n              <ControlsButton type=\"submit\">{t('overview.buttonLabels.save')}</ControlsButton>\n            </Controls>\n          )}\n        </Wrapper>\n      )}\n    </Form>\n  );\n};\n\nexport default Overview;\n","import React, { useContext } from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\n\nimport AuthContext, { isAuthenticated } from 'shared/contexts/authContext';\nimport { QueryErrors, PageLoader } from 'shared/components';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport toast from 'shared/utils/toast';\nimport { queryStringToObject } from 'shared/utils/url';\nimport { ProjectInput } from '__graphql__/globalTypes';\n\nimport Overview from './Overview';\nimport {\n  queryOfficesForProjectOverview,\n  mutationUpdateProject,\n  queryProjectForOverview,\n} from './api';\nimport { ProjectForOverview, ProjectForOverviewVariables } from './__graphql__/ProjectForOverview';\n\ninterface OverviewEditProps {\n  projectId: string;\n}\n\nconst OverviewEdit: React.FC<OverviewEditProps> = ({ projectId }) => {\n  const { t } = useTranslation('projects');\n\n  const location = useLocation();\n\n  const authContext = useContext(AuthContext);\n\n  const projectQuery = useQuery<ProjectForOverview, ProjectForOverviewVariables>(\n    queryProjectForOverview,\n    {\n      variables: { id: projectId },\n    },\n  );\n\n  const officesQuery = useQuery(queryOfficesForProjectOverview, {\n    variables: { offset: 0, limit: 200 },\n    fetchPolicy: 'no-cache',\n  });\n\n  const [updateProject, { loading: mutating }] = useMutation(mutationUpdateProject, {\n    refetchQueries: () => ['ProjectForShow', 'ProjectForOverview'],\n    awaitRefetchQueries: true,\n  });\n\n  if (!isAuthenticated(authContext)) {\n    return null;\n  }\n\n  if (projectQuery.error) {\n    return <QueryErrors error={projectQuery.error} />;\n  }\n\n  if (officesQuery.error) {\n    return <QueryErrors error={officesQuery.error} />;\n  }\n\n  if (!isDoneLoading(officesQuery) || !isDoneLoading(projectQuery) || mutating) {\n    return <PageLoader />;\n  }\n\n  const {\n    authState: { user },\n  } = authContext;\n\n  const {\n    data: { offices },\n  } = officesQuery;\n\n  const {\n    data: { project },\n  } = projectQuery;\n\n  const submitForm = (input: ProjectInput) =>\n    updateProject({\n      variables: {\n        id: project.id,\n        input,\n      },\n    }).then(() => {\n      toast.success(t('updated'));\n    }, toast.error);\n\n  const editByDefault = queryStringToObject<{ edit: boolean }>(location.search).edit;\n\n  return (\n    <Overview\n      project={project}\n      offices={offices}\n      currentUser={user}\n      submitForm={submitForm}\n      editByDefault={editByDefault}\n    />\n  );\n};\n\nexport default OverviewEdit;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport {\n  Tabs,\n  HtmlHeadTags,\n  DocumentsTableSingle,\n  QueryErrors,\n  Page,\n  PageLoader,\n} from 'shared/components';\nimport { HeadingLarge, SpaceBetween } from 'shared/components/Styles';\nimport { ERROR_TYPES } from 'shared/constants';\nimport { PROJECT_STATUS, DOCUMENT_ENTITY } from '__graphql__/globalTypes';\nimport { doesErrorMatchCode, isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\nimport PageNotFound from 'components/PageNotFound';\n\nimport { queryProjectForShow } from './api';\nimport BidPackages from './BidPackages';\nimport ProjectStatusAction from './ProjectStatusAction';\nimport OverviewEdit from './OverviewEdit';\nimport { ProjectForShow, ProjectForShowVariables } from './__graphql__/ProjectForShow';\n\nconst ShowProject: React.FC<void> = () => {\n  const { t } = useTranslation('projects');\n\n  const { projectId } = useParams<{ projectId: string }>();\n\n  const { error, ...queryResults } = useQuery<ProjectForShow, ProjectForShowVariables>(\n    queryProjectForShow,\n    {\n      variables: { id: projectId },\n    },\n  );\n\n  if (error) {\n    if (doesErrorMatchCode(error, ERROR_TYPES.notFound)) {\n      return <PageNotFound.Authenticated />;\n    }\n\n    return <QueryErrors error={error} />;\n  }\n\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data, refetch } = queryResults;\n  const { project } = data;\n\n  const isProjectClosed = project.status === PROJECT_STATUS.closed;\n\n  return (\n    <Page backLink={{ to: routes.projectsRoot(), label: t('backToProjects') }}>\n      <HtmlHeadTags title={project.name} />\n      <SpaceBetween>\n        <HeadingLarge data-cy-project-name>{project.name}</HeadingLarge>\n        <ProjectStatusAction project={project} refetchProject={refetch} />\n      </SpaceBetween>\n      <Tabs.Container>\n        <Tabs.Links>\n          <Tabs.Link to=\"overview\">{t('overviewLabel')}</Tabs.Link>\n          <Tabs.Link to=\"bid-packages\" isDefault>\n            {t('bidPackages')}\n          </Tabs.Link>\n          <Tabs.Link to=\"documents\">{t('documents')}</Tabs.Link>\n        </Tabs.Links>\n        <Tabs.Content>\n          <Tabs.Route path=\"overview\" render={() => <OverviewEdit projectId={project.id} />} />\n          <Tabs.Route\n            path=\"bid-packages\"\n            render={() => <BidPackages projectId={project.id} projectStatus={project.status} />}\n          />\n          <Tabs.Route\n            path=\"documents\"\n            render={() => (\n              <DocumentsTableSingle\n                attachableType={DOCUMENT_ENTITY.Project}\n                attachableId={project.id}\n                attachableName={project.name}\n                isReadOnly={isProjectClosed}\n                printPath={`${routes.printProjectDocuments(project.id)}`}\n              />\n            )}\n          />\n        </Tabs.Content>\n      </Tabs.Container>\n    </Page>\n  );\n};\n\nexport default ShowProject;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport history from 'browserHistory';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport PageLoader from 'shared/components/PageLoader';\nimport AuthContext, { isAuthenticated } from 'shared/contexts/authContext';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport toast from 'shared/utils/toast';\nimport routes from 'shared/constants/routes';\nimport { ProjectInput } from '__graphql__/globalTypes';\n\nimport { mutationCreateProject, queryOfficesForProjectOverview } from './api';\nimport Overview from './Overview';\nimport { CreateProject, CreateProjectVariables } from './__graphql__/CreateProject';\n\nconst OverviewCreate: React.FC<{}> = () => {\n  const { t } = useTranslation('projects');\n\n  const authContext = useContext(AuthContext);\n\n  const [createProject, { loading: mutating }] = useMutation<CreateProject, CreateProjectVariables>(\n    mutationCreateProject,\n  );\n\n  const officesQuery = useQuery(queryOfficesForProjectOverview, {\n    variables: { offset: 0, limit: 200 },\n    fetchPolicy: 'no-cache',\n  });\n\n  if (!isAuthenticated(authContext)) {\n    return null;\n  }\n\n  if (officesQuery.error) {\n    return <QueryErrors error={officesQuery.error} />;\n  }\n\n  if (!isDoneLoading(officesQuery) || mutating) {\n    return <PageLoader />;\n  }\n\n  const {\n    authState: { user },\n  } = authContext;\n\n  const {\n    data: { offices },\n  } = officesQuery;\n\n  const submitForm = (input: ProjectInput) =>\n    createProject({\n      variables: { input },\n    }).then(({ data }) => {\n      toast.success(t('created'));\n\n      if (data) {\n        history.push(routes.showProject(data.createProject.id));\n      }\n    }, toast.error);\n\n  return (\n    <Overview\n      project={{}}\n      offices={offices}\n      currentUser={user}\n      submitForm={submitForm}\n      onlyAllowEdit\n    />\n  );\n};\n\nexport default OverviewCreate;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Tabs, HtmlHeadTags, Page } from 'shared/components';\nimport { HeadingLarge, SpaceBetween } from 'shared/components/Styles';\nimport routes from 'shared/constants/routes';\n\nimport OverviewCreate from './OverviewCreate';\n\nconst CreateProject: React.FC<{}> = () => {\n  const { t } = useTranslation('projects');\n\n  return (\n    <Page backLink={{ to: routes.projectsRoot(), label: t('backToProjects') }}>\n      <HtmlHeadTags title={t('overview.newProject')} />\n      <SpaceBetween>\n        <HeadingLarge data-cy-project-name>{t('overview.newProject')}</HeadingLarge>\n      </SpaceBetween>\n      <Tabs.Container>\n        <Tabs.Content>\n          <OverviewCreate />\n        </Tabs.Content>\n      </Tabs.Container>\n    </Page>\n  );\n};\n\nexport default CreateProject;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport routes from 'shared/constants/routes';\n\nimport ShowProject from './ShowProject';\nimport CreateProject from './CreateProject';\n\nconst Project: React.FC<{}> = () => (\n  <Switch>\n    <Route path={routes.createProject()} component={CreateProject} />\n    <Route path={routes.showProject()} component={ShowProject} />\n  </Switch>\n);\n\nexport default Project;\n","import { TFunction } from 'i18next';\n\nimport { countryCodes } from 'shared/constants';\n\ninterface FormatAddressArguments {\n  street?: string | null;\n  postalCode?: string | null;\n  city?: string | null;\n  countryCode?: string | null;\n  t: TFunction;\n}\n\nexport const formatAddress = ({\n  street,\n  postalCode,\n  city,\n  countryCode,\n  t,\n}: FormatAddressArguments): string => {\n  const addressComponents = [];\n\n  if (street) {\n    addressComponents.push(street);\n  }\n\n  if (postalCode && city) {\n    addressComponents.push(`${postalCode} ${city}`);\n  } else if (postalCode) {\n    addressComponents.push(postalCode);\n  } else if (city) {\n    addressComponents.push(city);\n  }\n\n  if (countryCode) {\n    const foundCountryCode = countryCodes.find(code => code === countryCode);\n    if (foundCountryCode) {\n      addressComponents.push(t(`countries:${foundCountryCode}`));\n    }\n  }\n\n  return addressComponents.join(', ');\n};\n","import styled, { css } from 'styled-components/macro';\n\nimport Avatar from 'shared/components/Avatar';\nimport { font, mixin, COLOR } from 'shared/utils/styles';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\ninterface StyledAvatarProps {\n  isCentered: boolean;\n}\n\nexport const StyledAvatar = styled(Avatar)<StyledAvatarProps>`\n  ${props =>\n    !props.isCentered &&\n    css`\n      align-self: start;\n    `}\n`;\n\ninterface TextWrapperProps {\n  isAlignedWithAvatar: boolean;\n}\n\nexport const TextWrapper = styled.div<TextWrapperProps>`\n  margin-left: 20px;\n\n  ${props =>\n    props.isAlignedWithAvatar &&\n    css`\n      margin-top: 2px;\n    `}\n\n  /* Necessary for text truncation in ContactName to work: */\n  overflow: hidden;\n`;\n\nexport const Name = styled.div`\n  ${font.size(16)};\n  ${mixin.truncateText};\n`;\n\nexport const JobTitle = styled.div`\n  margin-top: 5px;\n  ${font.size(14)};\n  color: ${COLOR.textMedium};\n  ${mixin.truncateText};\n`;\n","import React, { ReactNode, ReactElement } from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\n\nimport { getContactNameWithTitle } from 'shared/utils/getContactName';\n\nimport { Wrapper, StyledAvatar, Name, JobTitle, TextWrapper } from './Styles';\nimport { ContactInfo_Contact } from './__graphql__/ContactInfo_Contact';\n\nexport const fragmentContactInfo = gql`\n  fragment ContactInfo_Contact on Contact {\n    id\n    isPerson\n    email\n    firstName\n    lastName\n    title\n    jobTitle\n  }\n`;\n\nexport interface ContactInfoProps {\n  className?: string;\n  action: ReactNode;\n  contact: ContactInfo_Contact;\n  centerAvatar?: boolean;\n}\n\nconst ContactInfo = ({\n  className,\n  action,\n  contact,\n  centerAvatar = false,\n}: ContactInfoProps): ReactElement => {\n  const { t } = useTranslation();\n  const name = getContactNameWithTitle(contact) || t('subcontractor.unknownContact');\n\n  return (\n    <Wrapper className={className}>\n      {action}\n      {!action && <StyledAvatar name={name} size={24} isCentered={centerAvatar} />}\n      <TextWrapper isAlignedWithAvatar={!action && !centerAvatar}>\n        <Name>{name}</Name>\n        {contact.jobTitle && <JobTitle>{contact.jobTitle}</JobTitle>}\n      </TextWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ContactInfo;\n","import styled from 'styled-components/macro';\n\nimport Clickable from 'shared/components/Clickable';\nimport { COLOR, font, mixin } from 'shared/utils/styles';\n\nexport const SubcontractorWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 10px 0;\n  border: 1px solid ${COLOR.borderLight};\n  border-radius: 4px;\n  transition: height 0.2s;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SubcontractorMain = styled.div`\n  flex-grow: 1;\n  display: flex;\n  min-width: 0;\n  padding: 20px;\n  border-right: 1px solid ${COLOR.borderLight};\n`;\n\nexport const SubcontractorInfo = styled.div`\n  flex-grow: 1;\n  margin-left: 20px;\n`;\n\nexport const SubcontractorName = styled.div`\n  margin-top: 5px;\n  margin-bottom: 15px;\n  ${font.bold}\n  ${font.size(18)}\n`;\n\nexport const SubcontractorAddress = styled.div`\n  ${font.size(16)}\n`;\n\nexport const SubcontractorWorkCategoriesList = styled.div`\n  margin-top: 30px;\n`;\n\nexport const SubcontractorAction = styled.div`\n  margin-left: 20px;\n`;\n\nexport const WorkCategoryTag = styled.div`\n  margin-bottom: 4px;\n  margin-right: 8px;\n  ${mixin.tag}\n\n  /* Overwrite tag styles: */\n  user-select: auto;\n  cursor: auto;\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const ContactsList = styled.div`\n  flex-shrink: 0;\n  width: 400px;\n  padding: 20px;\n\n  @media (max-width: 1399px) {\n    width: 350px;\n  }\n`;\n\nexport const ShowAllContactsButton = styled(Clickable)`\n  display: flex;\n  margin-top: 30px;\n  color: ${COLOR.primary};\n  ${font.size(14)}\n`;\n\nexport const ShowAllContactsText = styled.span`\n  margin-right: 5px;\n  ${mixin.link()}\n`;\n","import gql from 'graphql-tag';\n\nimport { fragmentContactInfo } from 'shared/components/ContactInfo';\n\nexport const fragmentSubcontractorsListItem = gql`\n  fragment SubcontractorsListItem_subcontractorsListItem on Subcontractor {\n    id\n    name\n    postalCode\n    city\n    workCategories {\n      id\n      name\n    }\n    contacts {\n      id\n      ...ContactInfo_Contact\n      isPerson\n      email\n      firstName\n      lastName\n      jobTitle\n    }\n  }\n  ${fragmentContactInfo}\n`;\n","import React, { useState, ReactElement, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { formatAddress } from 'shared/utils/address';\nimport Avatar from 'shared/components/Avatar';\nimport Icon from 'shared/components/Icon';\nimport ContactInfo, { ContactInfoProps } from 'shared/components/ContactInfo';\n\nimport {\n  SubcontractorWrapper,\n  SubcontractorMain,\n  ContactsList,\n  SubcontractorName,\n  SubcontractorAddress,\n  SubcontractorInfo,\n  WorkCategoryTag,\n  SubcontractorWorkCategoriesList,\n  ShowAllContactsButton,\n  ShowAllContactsText,\n  SubcontractorAction,\n} from './Styles';\n\nexport interface SubcontractorsListItemProps {\n  subcontractor: {\n    id: string;\n    name: string;\n    city?: string | null;\n    postalCode?: string | null;\n    workCategories: { id: string; name: string }[];\n    contacts: ({\n      id: string;\n      email?: string | null;\n      deletedAt?: string | null;\n    } & ContactInfoProps['contact'])[];\n  };\n  renderContactAction?: (contactId: string, subcontractorId: string) => ReactNode;\n  // Actually has to be a fragment:\n  renderActions?: (subcontractorId: string) => null | ReactElement;\n  showContactsWithoutEmails?: boolean;\n}\n\nconst SubcontractorsListItem: React.FC<SubcontractorsListItemProps> = ({\n  subcontractor,\n  renderContactAction = () => null,\n  renderActions = () => null,\n  showContactsWithoutEmails = false,\n}: SubcontractorsListItemProps) => {\n  const { t } = useTranslation();\n  const [areAllContactsVisible, setAreAllContactsVisible] = useState(false);\n\n  const address = formatAddress({\n    t,\n    street: '',\n    countryCode: '',\n    city: subcontractor.city,\n    postalCode: subcontractor.postalCode,\n  });\n  const contacts = subcontractor.contacts.filter(({ email }) => showContactsWithoutEmails || email);\n  const visibleContacts = areAllContactsVisible ? contacts : contacts.slice(0, 2);\n  const hasMoreContactsToShow = contacts.length > 2;\n  const toggleAreAllContactsVisible = () => setAreAllContactsVisible(!areAllContactsVisible);\n  const actions = renderActions(subcontractor.id);\n\n  return (\n    <SubcontractorWrapper data-cy-subcontractor-id={subcontractor.id}>\n      <SubcontractorMain>\n        <div>\n          <Avatar name={subcontractor.name} size={48} />\n        </div>\n        <SubcontractorInfo>\n          <SubcontractorName>{subcontractor.name}</SubcontractorName>\n          <SubcontractorAddress>{address}</SubcontractorAddress>\n          <SubcontractorWorkCategoriesList>\n            {subcontractor.workCategories.map(workCategory => (\n              <WorkCategoryTag key={workCategory.id}>{workCategory.name}</WorkCategoryTag>\n            ))}\n          </SubcontractorWorkCategoriesList>\n        </SubcontractorInfo>\n        {actions &&\n          React.Children.map(actions.props.children, action => (\n            <SubcontractorAction>{action}</SubcontractorAction>\n          ))}\n      </SubcontractorMain>\n      <ContactsList>\n        {visibleContacts.map(contact => (\n          <ContactInfo\n            key={contact.id}\n            action={renderContactAction(contact.id, subcontractor.id)}\n            contact={contact}\n          />\n        ))}\n        {hasMoreContactsToShow && (\n          <ShowAllContactsButton onClick={toggleAreAllContactsVisible}>\n            <ShowAllContactsText>\n              {t(\n                areAllContactsVisible\n                  ? 'subcontractor.showFewerContacts'\n                  : 'subcontractor.showAllContacts',\n              )}\n            </ShowAllContactsText>\n            <Icon type={areAllContactsVisible ? 'chevron-up' : 'chevron-down'} size={18} />\n          </ShowAllContactsButton>\n        )}\n      </ContactsList>\n    </SubcontractorWrapper>\n  );\n};\n\nexport { fragmentSubcontractorsListItem } from './api';\nexport default SubcontractorsListItem;\n","import gql from 'graphql-tag';\n\nimport { fragmentSubcontractorsListItem } from 'shared/components/SubcontractorsListItem';\n\nexport const querySubcontractors = gql`\n  query SubcontractorsForFilterableList(\n    $query: String\n    $companySizes: [COMPANY_SIZE!]\n    $workCategoryIds: [ID]\n    $latLong: String\n    $distance: Float\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    subcontractors(\n      query: $query\n      companySizes: $companySizes\n      workCategoryIds: $workCategoryIds\n      latLong: $latLong\n      distance: $distance\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      subcontractors {\n        id\n        isBanned\n        ...SubcontractorsListItem_subcontractorsListItem\n      }\n      totalRecords\n    }\n  }\n  ${fragmentSubcontractorsListItem}\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\n\nimport { SelectSingle, Checkbox } from 'shared/components';\nimport { COLOR, font, mixin } from 'shared/utils/styles';\n\ninterface ContainerProps {\n  withShadow: boolean;\n}\n\nexport const Container = styled.div<ContainerProps>`\n  display: flex;\n  overflow: hidden;\n\n  ${props =>\n    props.withShadow &&\n    css`\n      padding: 50px;\n      border-radius: 4px;\n      ${mixin.boxShadowBorderMedium}\n    `}\n`;\n\nexport const FiltersWrapper = styled.div`\n  width: 23%;\n  padding-right: 40px;\n`;\n\nexport const DistanceSelect = styled(SelectSingle)`\n  width: 100px;\n`;\n\nexport const Distance = styled.div`\n  display: flex;\n  align-items: center;\n  padding-bottom: 10px;\n`;\n\nexport const DistanceLabel = styled.div`\n  padding-left: 20px;\n  color: ${COLOR.textDark};\n  ${font.size(12)}\n`;\n\nexport const FilterLabel = styled.div`\n  padding: 25px 0 10px;\n  color: ${COLOR.textDark};\n  ${font.size(12)}\n  &:first-of-type {\n    padding-top: 0;\n  }\n`;\n\nexport const CompanySizeCheckbox = styled(Checkbox)`\n  padding: 5px 0;\n`;\n\nexport const Content = styled.div`\n  width: 77%;\n`;\n\nexport const Subs = styled(({ loading, ...rest }) => <div {...rest} />)`\n  opacity: 1;\n  transition: opacity 0.15s;\n  margin-bottom: 20px;\n  ${props =>\n    props.loading\n      ? css`\n          opacity: 0.4;\n        `\n      : ''}\n`;\n\nexport const SubsNoResults = styled.div`\n  width: 100%;\n  padding: 50px 0;\n  text-align: center;\n  color: ${COLOR.textMedium};\n  ${font.size(17)}\n  button {\n    margin-top: 20px;\n  }\n`;\n","import React, { Dispatch, SetStateAction } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  CheckboxGroup,\n  LocationSearch,\n  SelectMulti,\n  PageLoader,\n  QueryErrors,\n} from 'shared/components';\nimport { orderedCompanySizes } from 'shared/constants';\nimport { queryWorkCategories } from 'shared/utils/queries';\nimport { isLoading } from 'shared/utils/apollo';\nimport { getHumanReadableCompanySize } from 'shared/utils/enumHelpers';\n\nimport {\n  FiltersWrapper,\n  Distance,\n  DistanceSelect,\n  DistanceLabel,\n  FilterLabel,\n  CompanySizeCheckbox,\n} from './Styles';\nimport { FilterValues } from './types';\n\ninterface FiltersProps {\n  refetch: (options: Record<string, unknown>) => void;\n  filters: FilterValues;\n  setFilters: Dispatch<SetStateAction<FilterValues>>;\n  locationString: string;\n  setLocationString: Dispatch<SetStateAction<string>>;\n}\n\nconst Filters = ({ filters, setFilters, locationString, setLocationString }: FiltersProps) => {\n  const { t } = useTranslation('bidPackages');\n\n  const { data, loading, error } = useQuery(queryWorkCategories, {\n    notifyOnNetworkStatusChange: true,\n    partialRefetch: true,\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (isLoading({ data, loading })) return <PageLoader />;\n\n  const { workCategories } = data;\n\n  return (\n    <FiltersWrapper>\n      <FilterLabel>{t('basedWithin')}</FilterLabel>\n      <Distance>\n        <DistanceSelect\n          name=\"distance\"\n          value={filters.distance}\n          options={[\n            ...['20', '50', '100', '200', '350', '500', '750', '1000', '2000', '3000'].map(\n              value => ({\n                value,\n                label: value,\n              }),\n            ),\n            { value: 'NaN_3000+', label: '3000+' },\n          ]}\n          onChange={(distance: FilterValues['distance']) => setFilters({ ...filters, distance })}\n        />\n        <DistanceLabel>{t('kilometersOf')}</DistanceLabel>\n      </Distance>\n      <LocationSearch\n        value={locationString}\n        onChange={setLocationString}\n        onPlaceSelect={location => {\n          setLocationString(location.location);\n          setFilters({ ...filters, location });\n        }}\n      />\n      <FilterLabel>{t('subcontractor.workCategories')}</FilterLabel>\n      <SelectMulti\n        placeholder={t('select')}\n        options={workCategories.map(({ id, name }: { id: string; name: string }) => ({\n          value: id,\n          label: name,\n        }))}\n        name=\"workCategories\"\n        value={filters.workCategoryIds}\n        onChange={(workCategoryIds: FilterValues['workCategoryIds']) =>\n          setFilters({ ...filters, workCategoryIds })\n        }\n      />\n      {process.env.REACT_APP_FEATURE_DISABLED_BIDDER_INVITE_FILTERS !== 'true' && (\n        <>\n          <FilterLabel>{t('subcontractor.companySize')}</FilterLabel>\n          <CheckboxGroup\n            value={filters.companySizes}\n            onChange={(companySizes: FilterValues['companySizes']) =>\n              setFilters({ ...filters, companySizes })\n            }\n          >\n            {({ isChecked, onCheck }) => (\n              <>\n                {orderedCompanySizes.map(size => (\n                  <CompanySizeCheckbox\n                    key={size}\n                    checkboxLabel={getHumanReadableCompanySize(size)}\n                    value={size}\n                    checked={isChecked(size)}\n                    onChange={onCheck}\n                  />\n                ))}\n              </>\n            )}\n          </CheckboxGroup>\n        </>\n      )}\n    </FiltersWrapper>\n  );\n};\n\nexport default Filters;\n","import React, { ReactNode, useState, useEffect, useCallback, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport debounce from 'just-debounce-it';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { SortDirection } from 'shared/constants';\nimport Pagination from 'shared/components/Pagination';\nimport QueryErrors from 'shared/components/QueryErrors';\nimport PageLoader from 'shared/components/PageLoader';\nimport Button from 'shared/components/Button';\nimport { SpaceBetween, TableSearch } from 'shared/components/Styles';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport { querySubcontractors } from './api';\nimport Filters from './Filters';\nimport { Container, Content, Subs, SubsNoResults } from './Styles';\nimport { FilterVariables, FilterValues } from './types';\nimport {\n  SubcontractorsForFilterableList,\n  SubcontractorsForFilterableList_subcontractors_subcontractors,\n} from './__graphql__/SubcontractorsForFilterableList';\n\ninterface SubcontractorsListProps {\n  location?: FilterValues['location'];\n  renderHeaderAction?: () => ReactNode;\n  renderNoResults?: (isFiltered: boolean) => ReactNode;\n  withShadow?: boolean;\n  children: (\n    subcontractors: SubcontractorsForFilterableList_subcontractors_subcontractors[],\n  ) => ReactNode;\n}\n\nconst ITEMS_PER_PAGE = 12;\nconst DISTANCE = 200;\n\nconst getLatLong = (location: FilterValues['location']): string | undefined =>\n  location.lat && location.long ? `${location.lat},${location.long}` : undefined;\n\nconst getQueryVariablesForFilters = (filters: FilterValues): FilterVariables => ({\n  query: filters.query || undefined,\n  latLong: getLatLong(filters.location),\n  distance: Number(filters.distance) || undefined,\n  workCategoryIds: filters.workCategoryIds,\n  companySizes: filters.companySizes,\n});\n\nconst SubcontractorsList: React.FC<SubcontractorsListProps> = ({\n  location = { lat: '', long: '', location: '' },\n  renderHeaderAction = () => null,\n  renderNoResults = () => null,\n  withShadow = false,\n  children,\n}) => {\n  const { t } = useTranslation('bidPackages');\n  const defaultFilters: FilterValues = {\n    location,\n    query: '',\n    distance: String(DISTANCE),\n    workCategoryIds: [],\n    companySizes: [],\n  };\n  const [filters, setFilters] = useState<FilterValues>(defaultFilters);\n  const [locationString, setLocationString] = useState(defaultFilters.location.location);\n\n  const { refetch, variables, loading, error, ...subcontractorsQueryResults } = useQuery<\n    SubcontractorsForFilterableList\n  >(querySubcontractors, {\n    variables: {\n      sortBy: 'name',\n      sortDirection: SortDirection.asc,\n      offset: 0,\n      limit: ITEMS_PER_PAGE,\n      ...getQueryVariablesForFilters(filters),\n    },\n  });\n  const data = subcontractorsQueryResults.data as SubcontractorsForFilterableList;\n  const displayContent = isDoneLoading({ loading, data });\n  const isMounted = useRef(true);\n\n  const reloadFilters = useCallback(\n    debounce((filtersToReloadWith: FilterValues) => {\n      // react-apollo@3.1.1 had the following change: \"Be a bit more defensive\n      // when it comes to accessing the internal ObservableQuery instance, to\n      // avoid attempting to use it after a component has unmounted.\". This\n      // means that trying to refetch when the component has been unmounted will\n      // result in an error. This isn't a problem in practice, but it does\n      // appear in Cypress.\n      if (isMounted.current) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        refetch(getQueryVariablesForFilters(filtersToReloadWith));\n      }\n    }, 200),\n    [refetch],\n  );\n\n  useEffect(() => {\n    reloadFilters(filters);\n  }, [reloadFilters, filters]);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  if (error) return <QueryErrors error={error} />;\n\n  const handleReset = () => {\n    setFilters(defaultFilters);\n    setLocationString(defaultFilters.location.location);\n  };\n\n  const isFiltered =\n    variables.query ||\n    variables.workCategoryIds.length > 0 ||\n    variables.companySizes.length > 0 ||\n    variables.latLong ||\n    variables.distance !== DISTANCE;\n\n  const renderNoResultsWithFallback = () => (\n    <SubsNoResults>\n      {renderNoResults(isFiltered) || (\n        <>\n          <div>{t('noResults')}</div>\n          <Button onClick={handleReset}>{t('resetFilters')}</Button>\n        </>\n      )}\n    </SubsNoResults>\n  );\n\n  return (\n    <Container withShadow={withShadow}>\n      <Filters\n        refetch={refetch}\n        filters={filters}\n        setFilters={setFilters}\n        locationString={locationString}\n        setLocationString={setLocationString}\n      />\n      <Content>\n        <SpaceBetween>\n          <TableSearch\n            value={filters.query}\n            onChange={(query: string) => setFilters({ ...filters, query: query || '' })}\n          />\n          {renderHeaderAction()}\n        </SpaceBetween>\n        <Subs>\n          {!displayContent && <PageLoader />}\n          {displayContent && children(data.subcontractors.subcontractors)}\n          {displayContent &&\n            data.subcontractors.subcontractors.length === 0 &&\n            renderNoResultsWithFallback()}\n        </Subs>\n        {displayContent && data.subcontractors.totalRecords !== 0 && (\n          <Pagination\n            currentOffset={variables.offset}\n            itemsPerPage={variables.limit}\n            totalRecords={data.subcontractors.totalRecords}\n            onChange={offset => refetch({ offset })}\n          />\n        )}\n      </Content>\n    </Container>\n  );\n};\n\nexport default SubcontractorsList;\n","import gql from 'graphql-tag';\n\nexport const queryBidPackageForAddBidders = gql`\n  query BidPackageForAddBidders($bidPackageId: ID!) {\n    bidPackage(id: $bidPackageId) {\n      id\n      status\n      addedContactIds\n      project {\n        id\n        status\n        lat\n        long\n        location\n      }\n    }\n  }\n`;\n\nexport const mutationAddContactToBidRequest = gql`\n  mutation AddContactToBidRequest($bidPackageId: ID!, $subcontractorId: ID!, $contactId: ID!) {\n    addContactToBidRequest(\n      bidPackageId: $bidPackageId\n      subcontractorId: $subcontractorId\n      contactId: $contactId\n    ) {\n      id\n    }\n  }\n`;\n","import styled from 'styled-components/macro';\n\nimport { Button } from 'shared/components';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { COLOR, font } from 'shared/utils/styles';\n\nexport const StyledHeadingMedium = styled(HeadingMedium)`\n  padding-bottom: 10px;\n`;\n\nexport const ModalDescription = styled.p`\n  max-width: 700px;\n  padding-bottom: 30px;\n  color: ${COLOR.textMedium};\n  ${font.size(15)}\n`;\n\nexport const SubButton = styled(Button)`\n  flex-shrink: 0;\n  width: 120px;\n  height: 30px;\n  padding: 0;\n  line-height: 24px;\n\n  i {\n    margin-right: 0;\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport toast from 'shared/utils/toast';\nimport { BID_PACKAGE_STATUS } from '__graphql__/globalTypes';\nimport { ConfirmationModal } from 'shared/components';\n\nimport { mutationAddContactToBidRequest } from './api';\nimport { SubButton } from './Styles';\nimport {\n  AddContactToBidRequest,\n  AddContactToBidRequestVariables,\n} from './__graphql__/AddContactToBidRequest';\nimport { BidPackageForAddBidders_bidPackage } from './__graphql__/BidPackageForAddBidders';\n\ninterface Props {\n  bidPackage: BidPackageForAddBidders_bidPackage;\n  bidPackageRefetch: () => void;\n  subcontractorId: string;\n  contactId: string;\n  isBanned: boolean;\n}\n\nconst ContactAction: React.FC<Props> = ({\n  bidPackage,\n  bidPackageRefetch,\n  subcontractorId,\n  contactId,\n  isBanned,\n}) => {\n  const { t } = useTranslation('bidPackages');\n\n  const [addContactToBidRequest, { loading: isLoading }] = useMutation<\n    AddContactToBidRequest,\n    AddContactToBidRequestVariables\n  >(mutationAddContactToBidRequest, {\n    variables: {\n      bidPackageId: bidPackage.id,\n      subcontractorId,\n      contactId,\n    },\n    refetchQueries: () => ['BidPackageForAddBidders', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n\n  if (bidPackage.addedContactIds.includes(contactId)) {\n    return (\n      <SubButton icon=\"check-fat\" disabled data-cy-add-contact={contactId}>\n        {t('added')}\n      </SubButton>\n    );\n  }\n\n  if (isBanned) {\n    return (\n      <SubButton icon=\"close-fat\" disabled data-cy-add-contact={contactId}>\n        {t('banned')}\n      </SubButton>\n    );\n  }\n\n  if (bidPackage.status === BID_PACKAGE_STATUS.draft) {\n    return (\n      <SubButton\n        data-cy-add-contact={contactId}\n        icon=\"plus\"\n        working={isLoading}\n        onClick={() => {\n          addContactToBidRequest().then(() => toast.success(t('addSuccess')), toast.error);\n        }}\n      >\n        {t('add')}\n      </SubButton>\n    );\n  }\n\n  return (\n    <ConfirmationModal\n      title={t('inviteConfirmTitle')}\n      message={null}\n      confirmText={t('sendInvitation')}\n      renderLink={modal => (\n        <SubButton icon=\"email\" onClick={modal.open} data-cy-add-contact={contactId}>\n          {t('sendInvitation')}\n        </SubButton>\n      )}\n      isWorking={isLoading}\n      onConfirm={async modal => {\n        try {\n          await addContactToBidRequest();\n          toast.success(t('inviteSuccess'));\n          modal.close();\n        } catch (error) {\n          toast.error(error);\n          bidPackageRefetch();\n        }\n      }}\n    />\n  );\n};\n\nexport default ContactAction;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nimport { QueryErrors, PageLoader } from 'shared/components';\nimport { BID_PACKAGE_STATUS } from '__graphql__/globalTypes';\nimport SubcontractorsList from 'shared/components/SubcontractorsList';\nimport SubcontractorsListItem from 'shared/components/SubcontractorsListItem';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport ContactAction from './ContactAction';\nimport { StyledHeadingMedium, ModalDescription } from './Styles';\nimport { queryBidPackageForAddBidders } from './api';\nimport {\n  BidPackageForAddBidders,\n  BidPackageForAddBiddersVariables,\n} from './__graphql__/BidPackageForAddBidders';\n\nconst propTypes = {\n  bidPackageId: PropTypes.string.isRequired,\n  bidPackageRefetch: PropTypes.func.isRequired,\n};\n\ninterface Props {\n  bidPackageId: string;\n  bidPackageRefetch: () => void;\n}\n\nconst BiddersAdd: React.FC<Props> = ({ bidPackageId, bidPackageRefetch }) => {\n  const { t } = useTranslation('bidPackages');\n\n  const { error, ...queryResults } = useQuery<\n    BidPackageForAddBidders,\n    BidPackageForAddBiddersVariables\n  >(queryBidPackageForAddBidders, {\n    variables: { bidPackageId },\n    fetchPolicy: 'no-cache',\n  });\n\n  if (error) return <QueryErrors error={error} />;\n\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const {\n    data: { bidPackage },\n  } = queryResults;\n\n  return (\n    <>\n      <StyledHeadingMedium>\n        {bidPackage.status !== BID_PACKAGE_STATUS.draft ? t('inviteBidders') : t('addBidders')}\n      </StyledHeadingMedium>\n      <ModalDescription>\n        {bidPackage.status !== BID_PACKAGE_STATUS.draft\n          ? t('inviteDescription')\n          : t('addDescription')}\n      </ModalDescription>\n      <SubcontractorsList\n        withShadow\n        location={{\n          lat: bidPackage.project.lat !== null ? String(bidPackage.project.lat) : undefined,\n          long: bidPackage.project.long !== null ? String(bidPackage.project.long) : undefined,\n          location: bidPackage.project.location,\n        }}\n      >\n        {subcontractors =>\n          subcontractors.map(subcontractor => (\n            <SubcontractorsListItem\n              key={subcontractor.id}\n              subcontractor={subcontractor}\n              renderContactAction={(contactId, subcontractorId) => (\n                <ContactAction\n                  bidPackage={bidPackage}\n                  bidPackageRefetch={bidPackageRefetch}\n                  subcontractorId={subcontractorId}\n                  contactId={contactId}\n                  isBanned={subcontractor.isBanned}\n                />\n              )}\n            />\n          ))\n        }\n      </SubcontractorsList>\n    </>\n  );\n};\n\nBiddersAdd.propTypes = propTypes;\n\nexport default BiddersAdd;\n","import gql from 'graphql-tag';\n\nimport { fragmentBidsList } from 'shared/components/BidsList';\nimport { fragmentBidFormModal } from 'shared/components/BidFormModal';\n\nexport const queryBidRequestsForBidPackage = gql`\n  query BidRequestsForBidPackage(\n    $query: String\n    $sortBy: BID_REQUESTS_SORT_FIELD!\n    $sortDirection: SortDirection!\n    $bidPackageId: ID!\n  ) {\n    bidRequests(\n      query: $query\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n      bidPackageId: $bidPackageId\n    ) {\n      totalRecords\n      bidRequests {\n        id\n        updatedAt\n        currentBidId\n        ...BidsList_bidsList\n        ...BidFormModal_bidRequest\n        currentBid {\n          id\n          message\n          totalAmount\n          submittedAt\n          ...BidFormModal_bid\n        }\n        status\n        declinedReason\n        bids {\n          id\n          message\n          totalAmount\n          submittedAt\n        }\n        subcontractor {\n          id\n          name\n          website\n          companySize\n          street\n          postalCode\n          city\n          countryCode\n        }\n        bidInvites {\n          id\n          status\n          contact {\n            id\n            firstName\n            lastName\n            email\n            isPerson\n          }\n        }\n      }\n    }\n  }\n  ${fragmentBidsList}\n  ${fragmentBidFormModal}\n`;\n\nexport const queryBidPackageHeaderForPrint = gql`\n  query BidPackageHeaderForPrint($bidPackageId: ID!) {\n    bidPackage(id: $bidPackageId) {\n      id\n      name\n      project {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const queryBidRequestsForPrint = gql`\n  query BidRequestsForPrint(\n    $sortBy: BID_REQUESTS_SORT_FIELD!\n    $sortDirection: SortDirection!\n    $bidPackageId: ID!\n  ) {\n    bidRequests(sortBy: $sortBy, sortDirection: $sortDirection, bidPackageId: $bidPackageId) {\n      bidRequests {\n        id\n        status\n        currentBid {\n          id\n          totalAmount\n        }\n        bidInvites {\n          id\n          contact {\n            id\n            isPerson\n            title\n            firstName\n            lastName\n            email\n            phone\n            fax\n          }\n        }\n        subcontractor {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const mutationDeleteBidRequest = gql`\n  mutation DeleteBidRequest($id: ID!) {\n    deleteBidRequest(id: $id)\n  }\n`;\n\nexport const mutationAwardBidRequest = gql`\n  mutation AwardBidRequest($id: ID!) {\n    awardBidRequest(id: $id)\n  }\n`;\n\nexport const mutationUnAwardBidRequest = gql`\n  mutation UnAwardBidRequest($id: ID!) {\n    unAwardBidRequest(id: $id)\n  }\n`;\n\nexport const mutationRejectBidRequest = gql`\n  mutation RejectBidRequest($id: ID!, $shouldSendNotification: Boolean!) {\n    rejectBidRequest(id: $id, shouldSendNotification: $shouldSendNotification)\n  }\n`;\n\nexport const mutationUnRejectBidRequest = gql`\n  mutation UnRejectBidRequest($id: ID!) {\n    unRejectBidRequest(id: $id)\n  }\n`;\n\nexport const mutationUpdateBidRequestStatusInBidders = gql`\n  mutation UpdateBidRequestStatusInBidders($id: ID!, $status: String!, $declinedReason: String) {\n    updateBidRequestStatus(id: $id, status: $status, declinedReason: $declinedReason)\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { Modal, Form, Field, ModalFormBody } from 'shared/components';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { ModalContentProps } from 'shared/components/Modal/ModalContent';\nimport { BID_REQUEST_STATUS } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\n\nimport { mutationUpdateBidRequestStatusInBidders } from './api';\nimport { BidRequestsForBidPackage_bidRequests_bidRequests } from './__graphql__/BidRequestsForBidPackage';\nimport {\n  UpdateBidRequestStatusInBidders,\n  UpdateBidRequestStatusInBiddersVariables,\n} from './__graphql__/UpdateBidRequestStatusInBidders';\n\ninterface Props {\n  bidRequest: BidRequestsForBidPackage_bidRequests_bidRequests;\n  renderLink: ModalContentProps['renderLink'];\n}\n\ninterface FormValues {\n  status: BID_REQUEST_STATUS;\n  declinedReason?: string | null;\n}\n\nconst ChangeStatusModal: React.FC<Props> = ({ bidRequest, renderLink }) => {\n  const { t } = useTranslation('bidPackages');\n\n  const [changeStatus, { loading: mutating }] = useMutation<\n    UpdateBidRequestStatusInBidders,\n    UpdateBidRequestStatusInBiddersVariables\n  >(mutationUpdateBidRequestStatusInBidders, {\n    refetchQueries: ['BidRequestsForBidPackage'],\n  });\n\n  return (\n    <Modal\n      renderLink={renderLink}\n      renderContent={modal => (\n        <Form<FormValues>\n          initialValues={{\n            status: bidRequest.status,\n            declinedReason: bidRequest.declinedReason,\n          }}\n          validations={{\n            status: [Form.is.required()],\n          }}\n          onSubmit={async values => {\n            try {\n              await changeStatus({ variables: { id: bidRequest.id, ...values } });\n              toast.success(t('changeStatusSuccess'));\n              modal.close();\n            } catch (error) {\n              toast.error(error);\n            }\n          }}\n        >\n          {({ values }) => (\n            <>\n              <ModalFormBody\n                scrollable={false}\n                close={modal.close}\n                working={mutating}\n                useFullPageHeight={false}\n              >\n                <HeadingMedium>{t('changeStatus')}</HeadingMedium>\n                <Field.SelectSingle\n                  name=\"status\"\n                  label={t('request.status')}\n                  options={[\n                    BID_REQUEST_STATUS.invited,\n                    BID_REQUEST_STATUS.inviteAccepted,\n                    BID_REQUEST_STATUS.inviteDeclined,\n                    BID_REQUEST_STATUS.undecided,\n                    BID_REQUEST_STATUS.withdrawn,\n                  ].map(status => ({\n                    value: status,\n                    label: t(`request.${status}`),\n                  }))}\n                />\n                {values.status === BID_REQUEST_STATUS.inviteDeclined && (\n                  <Field.Textarea name=\"declinedReason\" label={t('requestDeclinedReason')} />\n                )}\n              </ModalFormBody>\n            </>\n          )}\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default ChangeStatusModal;\n","import styled, { css } from 'styled-components/macro';\n\nimport { BID_REQUEST_STATUS } from '__graphql__/globalTypes';\nimport { Icon, SearchInput, Button, Table, ClickableText, Checkbox } from 'shared/components';\nimport { SectionTitle } from 'shared/components/Styles';\nimport { COLOR, font, mixin } from 'shared/utils/styles';\nimport { bidRequestStatusIconKey } from 'shared/components/Icon/utils';\n\nexport const Container = styled.div`\n  display: flex;\n  overflow: hidden;\n`;\n\nexport const List = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 62%;\n  padding: 25px 30px 40px;\n`;\n\nexport const StyledSearchInput = styled(SearchInput)`\n  max-width: 300px;\n  margin-bottom: 20px;\n  @media (max-width: 1179px) {\n    max-width: 210px;\n  }\n`;\n\nexport const StyledTable = styled(Table)`\n  max-height: 100%;\n  overflow-y: auto;\n`;\n\nexport const Status = styled.div<{ haveAllInvitesFailed?: boolean }>`\n  display: flex;\n  position: relative;\n  padding-left: 34px;\n  ${props =>\n    props.haveAllInvitesFailed &&\n    css`\n      color: ${COLOR.danger};\n    `}\n`;\n\ninterface InviteStatus {\n  haveAllInvitesFailed?: boolean;\n  status: BID_REQUEST_STATUS;\n}\n\nexport const StatusIcon = styled(Icon).attrs((props: InviteStatus) => ({\n  type: props.haveAllInvitesFailed ? 'alert' : bidRequestStatusIconKey[props.status],\n}))<InviteStatus>`\n  position: absolute;\n  top: -1px;\n  left: 0;\n  font-size: 18px;\n  color: ${props => (props.haveAllInvitesFailed ? COLOR.danger : COLOR.textMedium)};\n  ${props => statusStyles[props.status]}\n`;\n\nconst statusStyles = {\n  [BID_REQUEST_STATUS.pendingInvite]: null,\n  [BID_REQUEST_STATUS.invited]: css`\n    font-size: 17px;\n  `,\n  [BID_REQUEST_STATUS.undecided]: css`\n    top: -2px;\n    font-size: 19px;\n  `,\n  [BID_REQUEST_STATUS.inviteDeclined]: css`\n    top: 1px;\n    color: ${COLOR.danger};\n  `,\n  [BID_REQUEST_STATUS.inviteAccepted]: css`\n    top: -2px;\n    color: ${COLOR.success};\n  `,\n  [BID_REQUEST_STATUS.bidSubmitted]: css`\n    color: ${COLOR.success};\n  `,\n  [BID_REQUEST_STATUS.bidAwarded]: css`\n    color: ${COLOR.success};\n  `,\n  [BID_REQUEST_STATUS.opened]: css`\n    font-size: 16px;\n  `,\n  [BID_REQUEST_STATUS.viewed]: css``,\n  [BID_REQUEST_STATUS.withdrawn]: css`\n    color: ${COLOR.danger};\n  `,\n  [BID_REQUEST_STATUS.bidRejected]: css`\n    top: -2px;\n    color: ${COLOR.danger};\n  `,\n};\n\nexport const StatusActions = styled.div`\n  display: flex;\n`;\n\nexport const StatusActionButton = styled(Button)`\n  height: 26px;\n  margin-top: 15px;\n  line-height: 24px;\n  padding: 0 10px;\n  ${font.size(12)}\n\n  & + & {\n    margin-left: 10px;\n  }\n`;\n\nexport const BidderActions = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const PrintButton = styled(Button)`\n  margin-right: 15px;\n`;\n\nexport const TableCell = styled.div`\n  padding: 17px 10px 17px 12px;\n  ${props => (props.onClick ? 'cursor: pointer' : '')};\n`;\n\nexport const TableName = styled.div`\n  ${mixin.link()}\n  ${mixin.truncateText}\n  ${/* sc-selector */ TableCell}:hover & {\n    text-decoration: underline;\n  }\n`;\n\nexport const TableSecondary = styled.div`\n  padding-top: 14px;\n  color: ${COLOR.textLight};\n  ${font.size(13)}\n  ${mixin.truncateText}\n`;\n\nexport const StatusLink = styled(ClickableText)`\n  margin-left: 7px;\n`;\n\nexport const RequestContainer = styled.div`\n  overflow-x: hidden;\n  overflow-y: auto;\n  width: 38%;\n  border-left: 1px solid ${COLOR.borderLight};\n`;\n\nexport const NoSelectionMessage = styled.div`\n  padding: 100px 50px 40px;\n  line-height: 1.5;\n  text-align: center;\n  color: ${COLOR.textMedium};\n  ${font.size(16)}\n`;\n\nexport const RequestSidebar = styled.div`\n  padding: 25px 30px 40px;\n  ${font.size(14)}\n`;\n\nexport const StyledSectionTitle = styled(SectionTitle)`\n  padding: 30px 0 15px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding: 15px;\n  border: 1px solid ${COLOR.borderLight};\n  border-radius: 4px;\n  color: ${COLOR.textDark};\n`;\n\nexport const RequestAddBid = styled.div`\n  padding-top: 20px;\n  color: ${COLOR.textMedium};\n  ${font.medium}\n  ${font.size(13)}\n\n  ${ClickableText} {\n    margin-left: 5px;\n  }\n`;\n\nexport const DisplayReason = styled.div`\n  white-space: pre-wrap;\n  color: ${COLOR.textDark};\n`;\n\nexport const ModalCheckbox = styled(Checkbox)`\n  margin-bottom: 25px;\n`;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport ConfirmationModal from 'shared/components/ConfirmationModal';\n\nimport { StatusActionButton, ModalCheckbox } from './Styles';\n\ninterface RejectBidRequestModalProps {\n  isRejecting: boolean;\n  onConfirm: (shouldSendNotification: boolean) => Promise<void>;\n}\n\nconst RejectBidRequestModal: React.FC<RejectBidRequestModalProps> = ({\n  isRejecting,\n  onConfirm,\n}) => {\n  const { t } = useTranslation('bidPackages');\n  const [shouldSendNotification, setShouldSendNotification] = useState(false);\n\n  return (\n    <ConfirmationModal\n      title={t('rejectBidConfirmTitle')}\n      message={t('rejectBidConfirmMessage')}\n      confirmText={t('rejectBid')}\n      isWorking={isRejecting}\n      renderLink={modal => (\n        <StatusActionButton hollow data-cy-button-name=\"rejectBid\" onClick={modal.open}>\n          {t('rejectBid')}\n        </StatusActionButton>\n      )}\n      renderContent={() => (\n        <ModalCheckbox\n          name=\"rejectBidRequestCheckbox\"\n          checked={shouldSendNotification}\n          checkboxLabel={t('rejectBidConfirmCheckboxLabel')}\n          onChange={setShouldSendNotification}\n        />\n      )}\n      onConfirm={async () => {\n        try {\n          await onConfirm(shouldSendNotification);\n          toast.success(t('bidRejectedSuccess'));\n        } catch (error) {\n          toast.error(error);\n        }\n        setShouldSendNotification(false);\n      }}\n      onCancel={() => {\n        setShouldSendNotification(false);\n      }}\n    />\n  );\n};\n\nexport default RejectBidRequestModal;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { nullString } from 'shared/constants';\nimport { BID_PACKAGE_STATUS, BID_REQUEST_STATUS, PROJECT_STATUS } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\nimport {\n  ConfirmationModal,\n  BidsList,\n  SubcontractorInfo,\n  ContactsList,\n  BidFormModal,\n  ClickableText,\n} from 'shared/components';\n\nimport { BidRequestsForBidPackage_bidRequests_bidRequests } from './__graphql__/BidRequestsForBidPackage';\nimport { AwardBidRequest, AwardBidRequestVariables } from './__graphql__/AwardBidRequest';\nimport { UnAwardBidRequest, UnAwardBidRequestVariables } from './__graphql__/UnAwardBidRequest';\nimport { Bidders_bidPackage } from './__graphql__/Bidders_bidPackage';\nimport {\n  mutationAwardBidRequest,\n  mutationUnAwardBidRequest,\n  mutationRejectBidRequest,\n  mutationUnRejectBidRequest,\n} from './api';\nimport ChangeStatusModal from './ChangeStatusModal';\nimport RejectBidRequestModal from './RejectBidRequestModal';\nimport {\n  AdditionalInfo,\n  Status,\n  StatusIcon,\n  RequestSidebar,\n  StyledSectionTitle,\n  StatusActionButton,\n  RequestAddBid,\n  DisplayReason,\n  StatusActions,\n} from './Styles';\n\nfunction hasTotalAmount<T extends { totalAmount: number | null }>(\n  bid: T,\n): bid is NonNullable<T> & { totalAmount: number } {\n  return bid.totalAmount !== null;\n}\n\ninterface Props {\n  bidPackage: Bidders_bidPackage;\n  bidRequest: BidRequestsForBidPackage_bidRequests_bidRequests;\n}\n\nconst BiddersRequest: React.FC<Props> = ({ bidPackage, bidRequest }) => {\n  const { t } = useTranslation('bidPackages');\n  const isAnyBidRequestAwarded = bidPackage.status === BID_PACKAGE_STATUS.bidAwarded;\n  const [awardBid, { loading: isAwarding }] = useMutation<\n    AwardBidRequest,\n    AwardBidRequestVariables\n  >(mutationAwardBidRequest, {\n    refetchQueries: () => ['BidPackageForShow', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n  const [unAwardBid, { loading: isUnAwarding }] = useMutation<\n    UnAwardBidRequest,\n    UnAwardBidRequestVariables\n  >(mutationUnAwardBidRequest, {\n    refetchQueries: () => ['BidPackageForShow', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n  const [rejectBid, { loading: isRejecting }] = useMutation(mutationRejectBidRequest, {\n    refetchQueries: () => ['BidPackageForShow', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n  const [unRejectBid, { loading: isUnRejecting }] = useMutation(mutationUnRejectBidRequest, {\n    refetchQueries: () => ['BidPackageForShow', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n\n  const isProjectClosed = bidPackage.project.status === PROJECT_STATUS.closed;\n  const isStatusEditable = [\n    BID_REQUEST_STATUS.invited,\n    BID_REQUEST_STATUS.opened,\n    BID_REQUEST_STATUS.viewed,\n    BID_REQUEST_STATUS.inviteAccepted,\n    BID_REQUEST_STATUS.undecided,\n    BID_REQUEST_STATUS.inviteDeclined,\n    BID_REQUEST_STATUS.withdrawn,\n  ].includes(bidRequest.status);\n\n  const bids = bidRequest.bids.filter(hasTotalAmount);\n\n  const { subcontractor, currentBidId, bidInvites, status } = bidRequest;\n\n  return (\n    <RequestSidebar>\n      <SubcontractorInfo subcontractor={subcontractor} />\n      <StyledSectionTitle>{t('request.invitees')}</StyledSectionTitle>\n      <AdditionalInfo data-cy-contacts-container>\n        <ContactsList bidInvites={bidInvites} isProjectClosed={isProjectClosed} showResendLink />\n      </AdditionalInfo>\n      <StyledSectionTitle>{t('request.status')}</StyledSectionTitle>\n      <AdditionalInfo>\n        <Status data-cy-status>\n          <StatusIcon status={status} />\n          <div>\n            {t(`request.${status}`)}\n            <StatusActions>\n              {isStatusEditable && (\n                <ChangeStatusModal\n                  bidRequest={bidRequest}\n                  renderLink={modal => (\n                    <StatusActionButton\n                      data-cy-button-name=\"changeBidRequestStatus\"\n                      onClick={modal.open}\n                    >\n                      {t('changeStatus')}\n                    </StatusActionButton>\n                  )}\n                />\n              )}\n              {!isAnyBidRequestAwarded &&\n                bidRequest.status === BID_REQUEST_STATUS.bidSubmitted &&\n                !isProjectClosed && (\n                  <>\n                    <ConfirmationModal\n                      title={t('awardBidConfirmTitle')}\n                      message={t('awardBidConfirmMessage')}\n                      confirmText={t('awardBid')}\n                      isWorking={isAwarding}\n                      renderLink={modal => (\n                        <StatusActionButton data-cy-button-name=\"awardBid\" onClick={modal.open}>\n                          {t('awardBid')}\n                        </StatusActionButton>\n                      )}\n                      onConfirm={async () => {\n                        try {\n                          await awardBid({ variables: { id: bidRequest.id } });\n                          toast.success(t('bidAwardedSuccess'));\n                        } catch (error) {\n                          toast.error(error);\n                        }\n                      }}\n                    />\n                    <RejectBidRequestModal\n                      isRejecting={isRejecting}\n                      onConfirm={async shouldSendNotification => {\n                        await rejectBid({\n                          variables: { id: bidRequest.id, shouldSendNotification },\n                        });\n                      }}\n                    />\n                  </>\n                )}\n              {bidRequest.status === BID_REQUEST_STATUS.bidAwarded && !isProjectClosed && (\n                <ConfirmationModal\n                  title={t('unAwardBidConfirmTitle')}\n                  message={t('unAwardBidConfirmMessage')}\n                  confirmText={t('unAwardBid')}\n                  isWorking={isUnAwarding}\n                  renderLink={modal => (\n                    <StatusActionButton data-cy-button-name=\"unAwardBid\" onClick={modal.open}>\n                      {t('unAwardBid')}\n                    </StatusActionButton>\n                  )}\n                  onConfirm={async () => {\n                    try {\n                      await unAwardBid({ variables: { id: bidRequest.id } });\n                      toast.success(t('bidUnAwardedSuccess'));\n                    } catch (error) {\n                      toast.error(error);\n                    }\n                  }}\n                />\n              )}\n              {bidRequest.status === BID_REQUEST_STATUS.bidRejected && !isProjectClosed && (\n                <StatusActionButton\n                  data-cy-button-name=\"unRejectBid\"\n                  working={isUnRejecting}\n                  onClick={() =>\n                    unRejectBid({ variables: { id: bidRequest.id } })\n                      .then(() => {\n                        toast.success(t('bidUnRejectedSuccess'));\n                      })\n                      .catch(toast.error)\n                  }\n                >\n                  {t('unRejectBid')}\n                </StatusActionButton>\n              )}\n            </StatusActions>\n          </div>\n        </Status>\n      </AdditionalInfo>\n      {bids.length > 0 && (\n        <>\n          <StyledSectionTitle>{t('request.bids')}</StyledSectionTitle>\n          <BidsList\n            bids={bids}\n            subcontractor={subcontractor}\n            currentBidId={currentBidId}\n            bidInvites={bidInvites}\n          />\n        </>\n      )}\n      {!isProjectClosed && bidRequest.status !== BID_REQUEST_STATUS.pendingInvite && (\n        <RequestAddBid>\n          {t('missingBid')}\n          <BidFormModal\n            bidRequest={bidRequest}\n            subcontractor={bidRequest.subcontractor}\n            isUserSubcontractor={false}\n            refetchQueries={() => ['BidPackageForShow', 'BidRequestsForBidPackage']}\n            renderLink={modal => (\n              <ClickableText data-cy-button-name=\"addBidManually\" onClick={modal.open}>\n                {t('addBidManually')}\n              </ClickableText>\n            )}\n          />\n        </RequestAddBid>\n      )}\n      {bidRequest.status === BID_REQUEST_STATUS.inviteDeclined && (\n        <>\n          <StyledSectionTitle>{t('requestDeclinedReason')}</StyledSectionTitle>\n          <DisplayReason>{bidRequest.declinedReason || nullString}</DisplayReason>\n        </>\n      )}\n    </RequestSidebar>\n  );\n};\n\nexport default BiddersRequest;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { ConfirmationModal } from 'shared/components';\n\nimport { StatusLink } from './Styles';\nimport { mutationDeleteBidRequest } from './api';\n\ninterface Props {\n  bidRequestId: string;\n}\n\nconst RemoveLink: React.FC<Props> = ({ bidRequestId }) => {\n  const { t } = useTranslation('bidPackages');\n  const [deleteBid, { loading }] = useMutation(mutationDeleteBidRequest, {\n    refetchQueries: () => ['BidPackageForShow', 'BidRequestsForBidPackage'],\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <ConfirmationModal\n      title={t('removeConfirmTitle')}\n      message={t('removeConfirmMessage')}\n      confirmText={t('remove')}\n      isWorking={loading}\n      renderLink={modal => (\n        <StatusLink data-cy-link=\"remove\" onClick={modal.open}>\n          ({t('remove')})\n        </StatusLink>\n      )}\n      onConfirm={async () => {\n        try {\n          await deleteBid({ variables: { id: bidRequestId } });\n          toast.success(t('removeSuccess'));\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    />\n  );\n};\n\nexport default RemoveLink;\n","import React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport {\n  BID_REQUEST_STATUS,\n  BID_PACKAGE_STATUS,\n  PROJECT_STATUS,\n  BID_INVITE_STATUS,\n  BID_REQUESTS_SORT_FIELD,\n  SortDirection,\n} from '__graphql__/globalTypes';\nimport { formatDate } from 'shared/utils/dateTime';\nimport getContactName from 'shared/utils/getContactName';\nimport { QueryErrors, Table, Button, Modal } from 'shared/components';\nimport CurrencyFormatter from 'shared/components/CurrencyFormatter';\nimport { SpaceBetween, ProjectClosedMessage } from 'shared/components/Styles';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport PageLoader from 'shared/components/PageLoader';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\n\nimport AddModal from './Add';\nimport Request from './Request';\nimport RemoveLink from './RemoveLink';\nimport {\n  Container,\n  List,\n  StyledSearchInput,\n  Status,\n  StatusIcon,\n  TableCell,\n  TableName,\n  TableSecondary,\n  RequestContainer,\n  NoSelectionMessage,\n  PrintButton,\n  BidderActions,\n  StyledTable,\n} from './Styles';\nimport { queryBidRequestsForBidPackage } from './api';\nimport { BidRequestsForBidPackage } from './__graphql__/BidRequestsForBidPackage';\nimport { Bidders_bidPackage } from './__graphql__/Bidders_bidPackage';\n\ninterface Props {\n  bidPackage: Bidders_bidPackage;\n}\n\nexport const fragmentBidPackage = gql`\n  fragment Bidders_bidPackage on BidPackage {\n    id\n    status\n    project {\n      status\n    }\n  }\n`;\n\nconst Bidders: React.FC<Props> = ({ bidPackage }) => {\n  const { t } = useTranslation('bidPackages');\n  const [activeRequestId, setActiveRequestId] = useState<string | null>(null);\n  const { pendingInvite } = BID_REQUEST_STATUS;\n  const { error, ...queryResults } = useQuery<BidRequestsForBidPackage>(\n    queryBidRequestsForBidPackage,\n    {\n      variables: {\n        bidPackageId: bidPackage.id,\n        sortBy: BID_REQUESTS_SORT_FIELD.subcontractorName,\n        sortDirection: SortDirection.ASC,\n      },\n    },\n  );\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data, refetch, variables } = queryResults;\n\n  const activeRequest = data.bidRequests.bidRequests.find(({ id }) => id === activeRequestId);\n  const isProjectClosed = bidPackage.project.status === PROJECT_STATUS.closed;\n\n  return (\n    <Container>\n      <List>\n        <SpaceBetween>\n          <StyledSearchInput onChange={search => refetch({ query: search })} />\n          <BidderActions>\n            <PrintButton\n              hollow\n              icon=\"printer\"\n              iconSize={20}\n              linkTo={routes.printBidders(bidPackage.id)}\n              target=\"_blank\"\n            />\n            <Modal\n              variant={MODAL_VARIANTS.fullSize}\n              renderLink={modal => (\n                <Button\n                  data-cy-button-name=\"new\"\n                  disabled={bidPackage.project.status === PROJECT_STATUS.closed}\n                  onClick={modal.open}\n                >\n                  {bidPackage.status !== BID_PACKAGE_STATUS.draft\n                    ? t('inviteBidders')\n                    : t('addBidders')}\n                </Button>\n              )}\n              renderContent={() => (\n                <AddModal bidPackageId={bidPackage.id} bidPackageRefetch={refetch} />\n              )}\n            />\n          </BidderActions>\n        </SpaceBetween>\n        <StyledTable\n          columns={[\n            { label: t('subcontractor.name'), percentWidth: 50, sortField: 'subcontractorName' },\n            { label: t('request.status'), sortField: 'bidRequestStatus' },\n          ]}\n          rows={data.bidRequests.bidRequests.map(bidRequest => {\n            const { currentBid } = bidRequest;\n            const lastChanged = currentBid ? currentBid.submittedAt : bidRequest.updatedAt;\n            const { bidInvites, status } = bidRequest;\n            const contactName = getContactName(bidRequest.bidInvites[0].contact);\n            const haveAllInvitesFailed =\n              status === BID_REQUEST_STATUS.invited &&\n              bidInvites.every(bidInvite => bidInvite.status === BID_INVITE_STATUS.failed);\n\n            return (\n              <Table.Row rowId={bidRequest.id}>\n                <TableCell\n                  onClick={() =>\n                    setActiveRequestId(bidRequest.id === activeRequestId ? null : bidRequest.id)\n                  }\n                >\n                  <TableName>{bidRequest.subcontractor.name}</TableName>\n                  <TableSecondary>\n                    {bidInvites.length === 1 && contactName}\n                    {bidInvites.length > 1 &&\n                      t('request.invitedContacts', {\n                        contact: contactName,\n                        n: bidInvites.length - 1,\n                      })}\n                  </TableSecondary>\n                </TableCell>\n                <TableCell>\n                  <Status data-cy-status-container haveAllInvitesFailed={haveAllInvitesFailed}>\n                    <StatusIcon status={status} haveAllInvitesFailed={haveAllInvitesFailed} />\n                    {typeof currentBid?.totalAmount === 'number' ? (\n                      <CurrencyFormatter value={currentBid.totalAmount} />\n                    ) : (\n                      t(`request.${haveAllInvitesFailed ? 'allInvitesFailed' : status}`)\n                    )}\n\n                    {status === pendingInvite && !isProjectClosed && (\n                      <RemoveLink bidRequestId={bidRequest.id} />\n                    )}\n                  </Status>\n                  <TableSecondary>\n                    {t('request.updatedAt')}:{' '}\n                    <span data-cy-bid-request-last-changed>{formatDate(lastChanged)}</span>\n                  </TableSecondary>\n                </TableCell>\n              </Table.Row>\n            );\n          })}\n          highlightedRowId={activeRequestId === null ? undefined : activeRequestId}\n          refetch={refetch}\n          variables={variables}\n          contentIfEmpty={() =>\n            isProjectClosed ? (\n              <ProjectClosedMessage>{t('projectClosed')}</ProjectClosedMessage>\n            ) : (\n              <>\n                <EmptyContent.CallToAction>\n                  {t('addOrInviteBiddersCallToAction')}\n                </EmptyContent.CallToAction>\n                <EmptyContent.Explanation>\n                  {t('addOrInviteBiddersExplanation')}\n                </EmptyContent.Explanation>\n                <Modal\n                  variant={MODAL_VARIANTS.fullSize}\n                  renderLink={modal => (\n                    <EmptyContent.Button\n                      data-cy-button-name=\"new\"\n                      disabled={bidPackage.project.status === PROJECT_STATUS.closed}\n                      onClick={modal.open}\n                    >\n                      {bidPackage.status !== BID_PACKAGE_STATUS.draft\n                        ? t('inviteBidders')\n                        : t('addBidders')}\n                    </EmptyContent.Button>\n                  )}\n                  renderContent={() => (\n                    <AddModal bidPackageId={bidPackage.id} bidPackageRefetch={refetch} />\n                  )}\n                />\n              </>\n            )\n          }\n        />\n      </List>\n      <RequestContainer>\n        {activeRequest ? (\n          <Request bidPackage={bidPackage} bidRequest={activeRequest} />\n        ) : (\n          <NoSelectionMessage>{t('selectToViewDetails')}</NoSelectionMessage>\n        )}\n      </RequestContainer>\n    </Container>\n  );\n};\n\nexport default Bidders;\n","import gql from 'graphql-tag';\n\nimport { fragmentMessages } from 'shared/components/Messages';\n\nimport { fragmentBidPackage } from './Bidders';\n\nexport const queryProjectWithBidPackages = gql`\n  query ProjectWithBidPackages($id: ID!) {\n    project(id: $id) {\n      id\n      number\n      name\n      bidPackages {\n        id\n        number\n        name\n      }\n    }\n  }\n`;\n\nexport const queryBidPackageForShow = gql`\n  query BidPackageForShow($id: ID!) {\n    bidPackage(id: $id) {\n      id\n      name\n      status\n      project {\n        status\n        name\n      }\n      ...Bidders_bidPackage\n    }\n  }\n  ${fragmentBidPackage}\n`;\n\nexport const queryBidPackageForOverview = gql`\n  query BidPackageForOverview($id: ID!) {\n    bidPackage(id: $id) {\n      id\n      number\n      name\n      bidsDueAt\n      startsOn\n      endsOn\n      description\n      budget\n      notes\n      createdAt\n    }\n  }\n`;\n\nexport const queryBidRequestsForMessages = gql`\n  query BidRequestsForMessages($bidPackageId: ID!) {\n    bidRequests(\n      sortBy: subcontractorName\n      sortDirection: ASC\n      bidPackageId: $bidPackageId\n      limit: 10000\n    ) {\n      bidRequests {\n        id\n        subcontractor {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const queryMessageThreadsInBidPackage = gql`\n  query MessageThreadsInBidPackage($bidPackageId: ID!, $query: String) {\n    messageThreadsInBidPackage(bidPackageId: $bidPackageId, query: $query) {\n      messageThreads {\n        ...Messages_messageThread\n      }\n    }\n  }\n  ${fragmentMessages}\n`;\n\nexport const queryBidPackageForPrintingDocuments = gql`\n  query BidPackageForPrintingDocuments($id: ID!) {\n    bidPackage(id: $id) {\n      id\n      name\n      project {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport const mutationPublishBidPackage = gql`\n  mutation PublishBidPackage($id: ID!) {\n    publishBidPackage(id: $id)\n  }\n`;\n\nexport const mutationCreateBidPackage = gql`\n  mutation CreateBidPackage($input: BidPackageInput!) {\n    createBidPackage(input: $input) {\n      id\n    }\n  }\n`;\n\nexport const mutationUpdateBidPackage = gql`\n  mutation UpdateBidPackage($id: ID!, $input: BidPackageInput!) {\n    updateBidPackage(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n","import { useLocation, useRouteMatch } from 'react-router-dom';\n\nconst useTabPathFragment = () => {\n  const { pathname } = useLocation();\n  const { url } = useRouteMatch();\n\n  return pathname.replace(url, '');\n};\n\nexport default useTabPathFragment;\n","import styled from 'styled-components/macro';\nimport { NavLink } from 'react-router-dom';\n\nimport { COLOR, sizes, font, mixin } from 'shared/utils/styles';\n\nexport const Sidebar = styled.div`\n  width: ${sizes.secondarySideBarWidth}px;\n  padding: 48px 0 20px;\n  background: ${COLOR.backgroundLight};\n  ${mixin.scrollableY}\n  ${mixin.customScrollbar()}\n  ${mixin.boxShadowBorderMedium}\n  border-top: none;\n  @media (max-width: ${sizes.minViewportWidth +\n    sizes.secondarySideBarWidth +\n    sizes.navbarWidthDesktop}px) {\n    display: none;\n  }\n`;\n\nexport const Project = styled.div`\n  padding: 0 25px 40px 25px;\n`;\n\nexport const ProjectNumber = styled.div`\n  margin-bottom: 5px;\n  ${font.bold}\n  ${font.size(14)}\n`;\n\nexport const ProjectName = styled.h3`\n  line-height: 1.5;\n  ${font.bold}\n  ${font.size(16)}\n`;\n\nexport const ListTitle = styled.div`\n  padding: 0 25px 13px 25px;\n  text-transform: uppercase;\n  color: ${COLOR.textLightBlue};\n  ${font.bold}\n  ${font.size(11)}\n`;\n\nexport const BidPackageLink = styled(NavLink)`\n  padding: 10px 25px 10px 25px;\n  display: block;\n  color: ${COLOR.textDarkest};\n  ${mixin.clickable}\n  &:hover {\n    background: ${COLOR.highlightLight};\n  }\n  &.active {\n    background: ${COLOR.highlightMedium};\n    ${font.bold}\n  }\n`;\n\nexport const BidPackageNumber = styled.div`\n  margin-bottom: 5px;\n  ${font.size(12)}\n  ${mixin.truncateText}\n`;\n\nexport const BidPackageName = styled.div`\n  ${font.size(14)}\n  ${mixin.truncateText}\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\nimport useTabPathFragment from 'shared/hooks/useTabPathFragment';\n\nimport { queryProjectWithBidPackages } from './api';\nimport {\n  Sidebar,\n  Project,\n  ProjectNumber,\n  ProjectName,\n  BidPackageLink,\n  BidPackageNumber,\n  BidPackageName,\n  ListTitle,\n} from './Sidebar.styles';\nimport {\n  ProjectWithBidPackages,\n  ProjectWithBidPackagesVariables,\n} from './__graphql__/ProjectWithBidPackages';\n\ninterface Props {\n  projectId: string;\n}\n\nconst BidPackagesSidebar: React.FC<Props> = ({ projectId }) => {\n  const { t } = useTranslation('bidPackages');\n\n  const tabPathFragment = useTabPathFragment();\n\n  const { error, ...queryResults } = useQuery<\n    ProjectWithBidPackages,\n    ProjectWithBidPackagesVariables\n  >(queryProjectWithBidPackages, {\n    variables: { id: projectId },\n  });\n\n  if (!isDoneLoading(queryResults) || error) {\n    return <Sidebar />;\n  }\n\n  const { data } = queryResults;\n\n  const sortedBidPackages = data.project.bidPackages.sort((a, b) => {\n    if (a.number && b.number) {\n      return a.number.localeCompare(b.number) || a.name.localeCompare(b.name);\n    }\n\n    return a.name.localeCompare(b.name);\n  });\n\n  return (\n    <Sidebar>\n      <ListTitle>{t('project')}</ListTitle>\n      <Project>\n        {data.project.number && <ProjectNumber>{data.project.number}</ProjectNumber>}\n        <ProjectName>{data.project.name}</ProjectName>\n      </Project>\n      <ListTitle>{t('bidPackages')}</ListTitle>\n      {sortedBidPackages.map(bidPackage => (\n        <BidPackageLink\n          key={bidPackage.id}\n          to={`${routes.showBidPackage(projectId, bidPackage.id)}${tabPathFragment}`}\n        >\n          {bidPackage.number && <BidPackageNumber>{bidPackage.number}</BidPackageNumber>}\n          <BidPackageName>{bidPackage.name}</BidPackageName>\n        </BidPackageLink>\n      ))}\n    </Sidebar>\n  );\n};\n\nexport default BidPackagesSidebar;\n","import styled from 'styled-components/macro';\n\nimport { Button, Tabs, PageWithSidebar } from 'shared/components';\nimport { PageContent, PageContainer } from 'shared/components/Page';\nimport { sizes } from 'shared/utils/styles';\nimport {\n  DocumentsTableContainer,\n  StyledDocumentsTable,\n  StyledHeaders,\n  RootDropzoneArea,\n} from 'shared/components/DocumentsTable/Styles';\nimport { MessagesWrapper } from 'shared/components/Messages/index.styles';\n\nexport const StyledPageWithSidebar = styled(PageWithSidebar)`\n  /* Required for IE11: it has problems with flex column containers with\n  overflowing content, and will not respect the max-width set on these elements\n  unless, for some reason, they themselves are also inside of a flex column\n  container. */\n  ${PageContainer} {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n  }\n\n  ${PageContent} {\n    display: flex;\n    flex-direction: column;\n    max-height: calc(100vh - ${sizes.topbarHeight}px);\n    overflow: hidden;\n\n    /* Make sure that content stays at full width when loading */\n    width: 100%;\n  }\n`;\n\nexport const StyledTabsContainer = styled(Tabs.Container)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledTabsContent = styled(Tabs.Content)`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n\n  ${DocumentsTableContainer} {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n  }\n\n  ${StyledDocumentsTable} {\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n  }\n\n  ${StyledHeaders} {\n    position: sticky;\n    top: 0;\n    background: white;\n    z-index: 1;\n  }\n\n  /* IE11 squishes this element for some reason */\n  ${RootDropzoneArea} {\n    height: 59px;\n  }\n\n  ${MessagesWrapper} {\n    overflow: hidden;\n  }\n`;\n\nexport const ScrollableTabsContent = styled(Tabs.Content)`\n  overflow: auto;\n`;\n\nexport const BidPackageName = styled.span`\n  padding-right: 20px;\n  word-break: break-word;\n`;\n\nexport const MainActionButton = styled(Button)`\n  margin-top: 9px;\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { ConfirmationModal } from 'shared/components';\n\nimport { mutationPublishBidPackage } from './api';\nimport { MainActionButton } from './Styles';\n\ninterface Props {\n  bidPackageId: string;\n}\n\nconst PublishBidPackageButton: React.FC<Props> = ({ bidPackageId }) => {\n  const { t } = useTranslation('bidPackages');\n  const [publishBidPackage, { loading }] = useMutation(mutationPublishBidPackage, {\n    refetchQueries: () => ['BidRequestsForBidPackage', 'BidPackageForShow', 'ProjectForShow'],\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <ConfirmationModal\n      title={t('publishConfirmTitle')}\n      message={t('publishConfirmMessage')}\n      confirmText={t('publishAndSendInvitations')}\n      isWorking={loading}\n      onConfirm={async () => {\n        try {\n          await publishBidPackage({ variables: { id: bidPackageId } });\n          toast.success(t('publishSuccess'));\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n      renderLink={modal => (\n        <MainActionButton hollow data-cy-button-name=\"publish\" onClick={modal.open}>\n          {t('publishAndSendInvitations')}\n        </MainActionButton>\n      )}\n    />\n  );\n};\n\nexport default PublishBidPackageButton;\n","import React from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/react-hooks';\n\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { Messages, QueryErrors, PageLoader } from 'shared/components';\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\n\nimport { queryMessageThreadsInBidPackage, queryBidRequestsForMessages } from './api';\nimport {\n  BidRequestsForMessages,\n  BidRequestsForMessagesVariables,\n} from './__graphql__/BidRequestsForMessages';\n\ninterface Props {\n  bidPackageId: string;\n}\n\nconst MessagesTab: React.FC<Props> = ({ bidPackageId }) => {\n  const activeUserType = COMPANY_TYPE.principal;\n  const threadsQuery = useLazyQuery<{}>(queryMessageThreadsInBidPackage, {\n    variables: { bidPackageId },\n  });\n\n  const { error, ...queryResults } = useQuery<\n    BidRequestsForMessages,\n    BidRequestsForMessagesVariables\n  >(queryBidRequestsForMessages, {\n    variables: { bidPackageId },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const potentialRecipients = queryResults.data.bidRequests.bidRequests.map(bidRequest => ({\n    bidRequestId: bidRequest.id,\n    name: bidRequest.subcontractor.name,\n  }));\n\n  return (\n    <Messages\n      threadsQuery={threadsQuery}\n      threadsQueryName=\"messageThreadsInBidPackage\"\n      refetchQueries={['MessageThreadsInBidPackage']}\n      activeUserType={activeUserType}\n      potentialRecipients={potentialRecipients}\n      bidPackageId={bidPackageId}\n    />\n  );\n};\n\nexport default MessagesTab;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport moment from 'moment';\n\nimport { Form, CurrencyFormatter, Field } from 'shared/components';\nimport { SectionHint } from 'shared/components/Styles';\nimport FormRow from 'shared/components/FormRow';\nimport {\n  Wrapper,\n  FormWrapper,\n  Controls,\n  ControlsButton,\n  Heading,\n} from 'shared/components/Overview';\nimport { DATE_FORMAT_WITH_TIME, DATE_FORMAT_WITHOUT_TIME } from 'shared/components/DatePicker';\nimport { omit } from 'shared/utils/javascript';\nimport { BidPackageInput } from '__graphql__/globalTypes';\n\nimport { BidPackageForOverview_bidPackage } from './__graphql__/BidPackageForOverview';\n\ninterface FormValues {\n  number: string;\n  name: string;\n  bidsDueAt: string | null;\n  startsOn: string | null;\n  endsOn: string | null;\n  budget: string;\n  description: string;\n  notes: string;\n  projectId: string;\n  createdAt: string | null;\n}\n\ninterface OverviewProps {\n  bidPackage: Partial<BidPackageForOverview_bidPackage>;\n  projectId: string;\n  submitForm: (input: BidPackageInput) => Promise<void>;\n  onlyAllowEdit?: boolean;\n  editByDefault?: boolean;\n}\n\nconst Overview: React.FC<OverviewProps> = ({\n  bidPackage,\n  projectId,\n  submitForm,\n  onlyAllowEdit = false,\n  editByDefault = false,\n}) => {\n  const { t } = useTranslation('bidPackages');\n  const [isEditing, setIsEditing] = useState(onlyAllowEdit || editByDefault);\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        number: bidPackage.number || '',\n        name: bidPackage.name || '',\n        bidsDueAt: bidPackage.bidsDueAt || null,\n        startsOn: bidPackage.startsOn || null,\n        endsOn: bidPackage.endsOn || null,\n        budget: String(bidPackage.budget || ''),\n        description: bidPackage.description || '',\n        notes: bidPackage.notes || '',\n        projectId,\n        createdAt: bidPackage.createdAt || null,\n      }}\n      validations={{\n        number: [Form.is.maxLength(100)],\n        name: [Form.is.required(), Form.is.maxLength(100)],\n        bidsDueAt: [\n          Form.is.required(),\n          Form.is.notAfter<FormValues>(\n            values => values.startsOn,\n            t('bidPackage.validation.mustBeBeforeStartDate'),\n          ),\n          Form.is.notAfter<FormValues>(\n            values => values.endsOn,\n            t('bidPackage.validation.mustBeBeforeEndDate'),\n          ),\n        ],\n        startsOn: Form.is.notAfter<FormValues>(\n          values => values.endsOn,\n          t('bidPackage.validation.mustBeBeforeEndDate'),\n        ),\n        endsOn: Form.is.notBefore<FormValues>(\n          values => values.startsOn,\n          t('bidPackage.validation.mustBeAfterStartDate'),\n        ),\n      }}\n      onSubmit={({ budget, ...remainingValues }) =>\n        submitForm({\n          ...omit(remainingValues, 'createdAt'),\n          budget: budget ? Number(parseFloat(budget).toFixed(2)) : null,\n        })\n      }\n    >\n      {({ resetForm, values }) => (\n        <Wrapper as={isEditing ? Form.Element : 'div'}>\n          <Controls>\n            {!isEditing && (\n              <ControlsButton hollow onClick={() => setIsEditing(true)}>\n                {t('overview.buttonLabels.edit')}\n              </ControlsButton>\n            )}\n            {isEditing && !onlyAllowEdit && (\n              <>\n                <ControlsButton\n                  hollow\n                  onClick={() => {\n                    setIsEditing(false);\n                    resetForm();\n                  }}\n                >\n                  {t('overview.buttonLabels.cancel')}\n                </ControlsButton>\n                <ControlsButton type=\"submit\">{t('overview.buttonLabels.save')}</ControlsButton>\n              </>\n            )}\n          </Controls>\n          <FormWrapper>\n            <Heading>{t('overview.headings.basicInfo')}</Heading>\n            <FormRow isEditing={isEditing} name=\"number\" label={t('overview.formFields.number')}>\n              {props => <Field.Input {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"name\"\n              label={t('overview.formFields.name')}\n              required\n            >\n              {props => <Field.Input {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"bidsDueAt\"\n              label={t('overview.formFields.bidsDueAt')}\n              required\n              mapValue={value => moment(value).format(DATE_FORMAT_WITH_TIME)}\n            >\n              {props => <Field.DatePicker {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"startsOn\"\n              label={t('overview.formFields.startsOn')}\n              mapValue={value => moment(value).format(DATE_FORMAT_WITHOUT_TIME)}\n            >\n              {props => <Field.DatePicker withTime={false} {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"endsOn\"\n              label={t('overview.formFields.endsOn')}\n              mapValue={value => moment(value).format(DATE_FORMAT_WITHOUT_TIME)}\n            >\n              {props => <Field.DatePicker withTime={false} {...props} />}\n            </FormRow>\n            <FormRow\n              isEditing={isEditing}\n              name=\"description\"\n              label={t('overview.formFields.description')}\n            >\n              {props => <Field.Textarea {...props} />}\n            </FormRow>\n            <Heading>{t('overview.headings.internalData')}</Heading>\n            <SectionHint>{t('internalDataHint')}</SectionHint>\n            {values.createdAt && (\n              <FormRow\n                isEditing={false}\n                name=\"createdAt\"\n                label={t('overview.formFields.createdAt')}\n                mapValue={value => moment(value).format(DATE_FORMAT_WITH_TIME)}\n              >\n                {() => null}\n              </FormRow>\n            )}\n            <FormRow\n              isEditing={isEditing}\n              name=\"budget\"\n              label={t('overview.formFields.budget')}\n              mapValue={value => <CurrencyFormatter value={Number(value)} />}\n            >\n              {props => <Field.CurrencyInput icon=\"euro\" {...props} />}\n            </FormRow>\n            <FormRow isEditing={isEditing} name=\"notes\" label={t('overview.formFields.notes')}>\n              {props => <Field.Textarea {...props} />}\n            </FormRow>\n            {isEditing && <Form.RequiredFieldsNote />}\n          </FormWrapper>\n          {isEditing && (\n            <Controls>\n              {!onlyAllowEdit && (\n                <ControlsButton\n                  hollow\n                  onClick={() => {\n                    setIsEditing(false);\n                    resetForm();\n                  }}\n                >\n                  {t('overview.buttonLabels.cancel')}\n                </ControlsButton>\n              )}\n              <ControlsButton type=\"submit\">{t('overview.buttonLabels.save')}</ControlsButton>\n            </Controls>\n          )}\n        </Wrapper>\n      )}\n    </Form>\n  );\n};\n\nexport default Overview;\n","import React from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\n\nimport { queryStringToObject } from 'shared/utils/url';\nimport { QueryErrors, PageLoader } from 'shared/components';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport toast from 'shared/utils/toast';\nimport { BidPackageInput } from '__graphql__/globalTypes';\n\nimport { queryBidPackageForOverview, mutationUpdateBidPackage } from './api';\nimport {\n  BidPackageForOverview,\n  BidPackageForOverviewVariables,\n} from './__graphql__/BidPackageForOverview';\nimport { UpdateBidPackage, UpdateBidPackageVariables } from './__graphql__/UpdateBidPackage';\nimport Overview from './Overview';\n\ninterface OverviewEditProps {\n  bidPackageId: string;\n  projectId: string;\n}\n\nconst OverviewEdit: React.FC<OverviewEditProps> = ({ bidPackageId, projectId }) => {\n  const { t } = useTranslation('bidPackages');\n\n  const location = useLocation();\n\n  const query = useQuery<BidPackageForOverview, BidPackageForOverviewVariables>(\n    queryBidPackageForOverview,\n    { variables: { id: bidPackageId } },\n  );\n\n  const [updateBidPackage, { loading: mutating }] = useMutation<\n    UpdateBidPackage,\n    UpdateBidPackageVariables\n  >(mutationUpdateBidPackage, {\n    refetchQueries: () => ['BidPackageForShow', 'BidPackageForOverview'],\n    awaitRefetchQueries: true,\n  });\n\n  if (query.error) {\n    return <QueryErrors error={query.error} />;\n  }\n\n  if (!isDoneLoading(query) || mutating) {\n    return <PageLoader />;\n  }\n\n  const { bidPackage } = query.data;\n\n  const submitForm = (input: BidPackageInput) =>\n    updateBidPackage({\n      variables: {\n        id: bidPackageId,\n        input,\n      },\n    }).then(() => {\n      toast.success(t('updated'));\n    }, toast.error);\n\n  const editByDefault = queryStringToObject<{ edit: boolean }>(location.search).edit;\n\n  return (\n    <Overview\n      bidPackage={bidPackage}\n      projectId={projectId}\n      submitForm={submitForm}\n      editByDefault={editByDefault}\n    />\n  );\n};\n\nexport default OverviewEdit;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\n\nimport { ERROR_TYPES } from 'shared/constants';\nimport { PROJECT_STATUS, BID_PACKAGE_STATUS, DOCUMENT_ENTITY } from '__graphql__/globalTypes';\nimport {\n  Tabs,\n  PageLoader,\n  QueryErrors,\n  HtmlHeadTags,\n  DocumentsTableSingle,\n} from 'shared/components';\nimport { HeadingLarge, SpaceBetween } from 'shared/components/Styles';\nimport { BidPackageStatusTag } from 'shared/components/TagStyles';\nimport { doesErrorMatchCode, isDoneLoading } from 'shared/utils/apollo';\nimport { buildAttachableName } from 'shared/utils/documents';\nimport routes from 'shared/constants/routes';\nimport PageNotFound from 'components/PageNotFound';\n\nimport { queryBidPackageForShow } from './api';\nimport Sidebar from './Sidebar';\nimport Bidders from './Bidders';\nimport PublishBidPackageButton from './PublishBidPackageButton';\nimport MessagesTab from './MessagesTab';\nimport OverviewEdit from './OverviewEdit';\nimport {\n  StyledPageWithSidebar,\n  StyledTabsContainer,\n  StyledTabsContent,\n  BidPackageName,\n  ScrollableTabsContent,\n} from './Styles';\nimport { BidPackageForShow, BidPackageForShowVariables } from './__graphql__/BidPackageForShow';\n\nconst ShowBidPackage: React.FC<void> = () => {\n  const { t } = useTranslation('bidPackages');\n\n  const { bidPackageId, projectId } = useParams<{ bidPackageId: string; projectId: string }>();\n\n  const { error, ...queryResults } = useQuery<BidPackageForShow, BidPackageForShowVariables>(\n    queryBidPackageForShow,\n    {\n      variables: { id: bidPackageId },\n    },\n  );\n\n  if (error) {\n    if (doesErrorMatchCode(error, ERROR_TYPES.notFound)) {\n      return <PageNotFound.Authenticated />;\n    }\n    return <QueryErrors error={error} />;\n  }\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { bidPackage } = queryResults.data;\n  const isProjectClosed = bidPackage.project.status === PROJECT_STATUS.closed;\n\n  return (\n    <StyledPageWithSidebar\n      renderSidebar={() => <Sidebar projectId={projectId} />}\n      backLink={{ to: routes.bidPackages(projectId), label: t('backToProject') }}\n    >\n      <HtmlHeadTags title={bidPackage.name} />\n      <SpaceBetween>\n        <HeadingLarge>\n          <BidPackageName data-cy-bid-package-name>{bidPackage.name}</BidPackageName>\n          <BidPackageStatusTag status={bidPackage.status} data-cy-status-tag>\n            {t(`bidPackage.${bidPackage.status}`)}\n          </BidPackageStatusTag>\n        </HeadingLarge>\n        {bidPackage.status === BID_PACKAGE_STATUS.draft && !isProjectClosed && (\n          <PublishBidPackageButton bidPackageId={bidPackage.id} />\n        )}\n      </SpaceBetween>\n      <StyledTabsContainer data-cy-tabs-container>\n        <Tabs.Links>\n          <Tabs.Link to=\"overview\">{t('overviewLabel')}</Tabs.Link>\n          <Tabs.Link to=\"bidders\" isDefault>\n            {t('biddersLabel')}\n          </Tabs.Link>\n          <Tabs.Link to=\"documents\">{t('documents')}</Tabs.Link>\n          {process.env.REACT_APP_ENABLE_MESSAGING === 'true' && (\n            <Tabs.Link to=\"messages\">{t('messagesLabel')}</Tabs.Link>\n          )}\n        </Tabs.Links>\n        <Tabs.Route\n          path=\"overview\"\n          render={() => (\n            <ScrollableTabsContent>\n              <OverviewEdit bidPackageId={bidPackageId} projectId={projectId} />\n            </ScrollableTabsContent>\n          )}\n        />\n        <Tabs.Route path=\"bidders\" render={() => <Bidders bidPackage={bidPackage} />} />\n        <Tabs.Route\n          path=\"documents\"\n          render={() => (\n            <StyledTabsContent>\n              <DocumentsTableSingle\n                attachableType={DOCUMENT_ENTITY.BidPackage}\n                attachableId={bidPackage.id}\n                attachableName={buildAttachableName([bidPackage.project.name, bidPackage.name])}\n                isReadOnly={isProjectClosed}\n                printPath={`${routes.printBidPackageDocuments(bidPackage.id)}`}\n              />\n            </StyledTabsContent>\n          )}\n        />\n        {process.env.REACT_APP_ENABLE_MESSAGING === 'true' && (\n          <Tabs.Route\n            path=\"messages\"\n            render={() => (\n              <StyledTabsContent>\n                <MessagesTab bidPackageId={bidPackage.id} />\n              </StyledTabsContent>\n            )}\n          />\n        )}\n      </StyledTabsContainer>\n    </StyledPageWithSidebar>\n  );\n};\n\nexport default ShowBidPackage;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport history from 'browserHistory';\nimport { PageLoader } from 'shared/components';\nimport toast from 'shared/utils/toast';\nimport routes from 'shared/constants/routes';\nimport { BidPackageInput } from '__graphql__/globalTypes';\n\nimport { mutationCreateBidPackage } from './api';\nimport { CreateBidPackage, CreateBidPackageVariables } from './__graphql__/CreateBidPackage';\nimport Overview from './Overview';\n\ninterface OverviewCreateProps {\n  projectId: string;\n}\n\nconst OverviewCreate: React.FC<OverviewCreateProps> = ({ projectId }) => {\n  const { t } = useTranslation('bidPackages');\n\n  const [createBidPackage, { loading: mutating }] = useMutation<\n    CreateBidPackage,\n    CreateBidPackageVariables\n  >(mutationCreateBidPackage);\n\n  if (mutating) {\n    return <PageLoader />;\n  }\n\n  const submitForm = (input: BidPackageInput) =>\n    createBidPackage({\n      variables: { input },\n    }).then(({ data }) => {\n      toast.success(t('created'));\n\n      if (data) {\n        history.push(routes.showBidPackage(projectId, data.createBidPackage.id));\n      }\n    }, toast.error);\n\n  return <Overview bidPackage={{}} projectId={projectId} submitForm={submitForm} onlyAllowEdit />;\n};\n\nexport default OverviewCreate;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useParams } from 'react-router-dom';\n\nimport { BID_PACKAGE_STATUS } from '__graphql__/globalTypes';\nimport { HtmlHeadTags, PageWithSidebar, Tabs } from 'shared/components';\nimport { HeadingLarge, SpaceBetween } from 'shared/components/Styles';\nimport { BidPackageStatusTag } from 'shared/components/TagStyles';\nimport routes from 'shared/constants/routes';\n\nimport Sidebar from './Sidebar';\nimport OverviewCreate from './OverviewCreate';\nimport { BidPackageName } from './Styles';\n\nconst CreateBidPackage = () => {\n  const { t } = useTranslation('bidPackages');\n  const { projectId } = useParams<{ projectId: string }>();\n\n  return (\n    <PageWithSidebar\n      renderSidebar={() => <Sidebar projectId={projectId} />}\n      backLink={{ to: routes.bidPackages(projectId), label: t('backToProject') }}\n    >\n      <HtmlHeadTags title={t('overview.newBidPackage')} />\n      <SpaceBetween>\n        <HeadingLarge>\n          <BidPackageName data-cy-bid-package-name>{t('overview.newBidPackage')}</BidPackageName>\n          <BidPackageStatusTag status={BID_PACKAGE_STATUS.draft} data-cy-status-tag>\n            {t('bidPackage.draft')}\n          </BidPackageStatusTag>\n        </HeadingLarge>\n      </SpaceBetween>\n      <Tabs.Container>\n        <Tabs.Content>\n          <OverviewCreate projectId={projectId} />\n        </Tabs.Content>\n      </Tabs.Container>\n    </PageWithSidebar>\n  );\n};\n\nexport default CreateBidPackage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport routes from 'shared/constants/routes';\n\nimport ShowBidPackage from './ShowBidPackage';\nimport CreateBidPackage from './CreateBidPackage';\n\nconst BidPackage: React.FC<{}> = () => (\n  <Switch>\n    <Route path={routes.createBidPackage()} component={CreateBidPackage} />\n    <Route path={routes.showBidPackage()} component={ShowBidPackage} />\n  </Switch>\n);\n\nexport default BidPackage;\n","import gql from 'graphql-tag';\n\nexport const querySubcontractorForEdit = gql`\n  query SubcontractorForEdit($id: ID!) {\n    subcontractor(id: $id) {\n      id\n      name\n      website\n      companySize\n      street\n      city\n      postalCode\n      countryCode\n      notes\n      isBanned\n      workCategories {\n        name\n      }\n      contacts {\n        id\n        isPerson\n        title\n        firstName\n        lastName\n        email\n        jobTitle\n        phone\n        mobilePhone\n        fax\n      }\n    }\n  }\n`;\n\nexport const mutationDeleteSubcontractor = gql`\n  mutation DeleteSubcontractor($id: ID!) {\n    deleteSubcontractor(id: $id)\n  }\n`;\n\nexport const mutationCreateSubcontractor = gql`\n  mutation CreateSubcontractor($input: SubcontractorInput!) {\n    createSubcontractor(input: $input) {\n      id\n    }\n  }\n`;\n\nexport const mutationUpdateSubcontractor = gql`\n  mutation UpdateSubcontractor($id: ID!, $input: SubcontractorInput!) {\n    updateSubcontractor(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n","import styled, { css } from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport ContactInfo from 'shared/components/ContactInfo';\nimport { AddMoreLink } from 'shared/components';\nimport EmptyContent from 'shared/components/EmptyContent';\n\nexport const ContactsListWrapper = styled.div`\n  border-radius: 4px;\n  border: 1px solid ${COLOR.borderLight};\n`;\n\nexport const ContactsListItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  padding-left: 20px;\n\n  & + & {\n    border-top: 1px solid ${COLOR.borderLight};\n  }\n`;\n\nexport const StyledAddMoreLink = styled(AddMoreLink)`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin-top: 4px;\n`;\n\nexport const StyledContactInfo = styled(ContactInfo)`\n  margin-bottom: 0;\n\n  /* Don't tolerate content getting too wide and pushing ContactsListActions out\n  of the container. Truncate instead. */\n  overflow: hidden;\n`;\n\nexport const ContactsListActions = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ContactsListAction = styled.div`\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nexport const ModalHeading = styled.div`\n  padding-bottom: 25px;\n  ${font.bold}\n  ${font.size(24)}\n  line-height: 1.5;\n`;\n\nexport const StyledExplanation = styled(EmptyContent.Explanation)<{ hasError?: boolean }>`\n  ${props =>\n    props.hasError &&\n    css`\n      color: ${COLOR.danger};\n    `}\n`;\n","export enum CONTACT_TITLE {\n  mr = 'mr',\n  ms = 'ms',\n}\n","import React from 'react';\nimport i18n from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nimport { CONTACT_TITLE } from 'shared/constants/contact';\nimport { ModalFormBody, Form, Field } from 'shared/components';\nimport { Validator } from 'shared/utils/validation/types';\n\nimport { ModalHeading } from './Styles';\nimport { SubcontractorForEdit_subcontractor_contacts } from './__graphql__/SubcontractorForEdit';\n\ninterface Props {\n  contact?: SubcontractorForEdit_subcontractor_contacts;\n  onSubmit: (values: FormValues) => void;\n  allValues: SubcontractorForEdit_subcontractor_contacts[];\n  closeModal: () => void;\n}\n\ninterface FormValues {\n  id: string;\n  isPerson: boolean;\n  email: string;\n  title: string;\n  firstName: string;\n  lastName: string;\n  jobTitle: string;\n  phone: string;\n  mobilePhone: string;\n  fax: string;\n}\n\nconst validateIfIsPerson = (validation: Validator) => (\n  ...validationArgs: Parameters<Validator>\n) => {\n  const [, values] = validationArgs;\n\n  if (values.isPerson) {\n    return validation(...validationArgs);\n  }\n\n  return false;\n};\n\nconst makeValidateEmailIsUnique = (allValues: FormValues[], isEditing: boolean) => (\n  value: string | null,\n) => {\n  const valueOccurences = allValues.filter(contactValues => contactValues.email === value);\n\n  if (value && Boolean(valueOccurences.length) > isEditing ? 1 : 0) {\n    return i18n.t('validation:contactEmailNotUnique');\n  }\n\n  return false;\n};\n\nconst ContactsForm: React.FC<Props> = ({ contact = {}, onSubmit, allValues, closeModal }) => {\n  const { t } = useTranslation();\n\n  const isEditing = Object.values(contact).length > 0;\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        id: contact.id || '',\n        isPerson: contact.isPerson !== undefined ? contact.isPerson : true,\n        email: contact.email || '',\n        title: contact.title || '',\n        firstName: contact.firstName || '',\n        lastName: contact.lastName || '',\n        jobTitle: contact.jobTitle || '',\n        phone: contact.phone || '',\n        mobilePhone: contact.mobilePhone || '',\n        fax: contact.fax || '',\n      }}\n      validations={{\n        email: [\n          Form.is.maxLength(200),\n          Form.is.email(),\n          makeValidateEmailIsUnique(allValues as FormValues[], isEditing),\n        ],\n        firstName: [Form.is.maxLength(100)],\n        lastName: [Form.is.maxLength(100), validateIfIsPerson(Form.is.required())],\n      }}\n      onSubmit={values => {\n        onSubmit(values);\n        closeModal();\n      }}\n    >\n      {({ handleSubmit, values }) => (\n        <ModalFormBody\n          close={closeModal}\n          working={false}\n          useFullPageHeight={false}\n          submitOnEnter\n          onSubmit={event => {\n            event.preventDefault();\n            handleSubmit();\n          }}\n        >\n          <ModalHeading>\n            {isEditing\n              ? t('subcontractorForm.contacts.modalHeading.existingContact')\n              : t('subcontractorForm.contacts.modalHeading.newContact')}\n          </ModalHeading>\n          <Field.Checkbox\n            name=\"isPerson\"\n            checkboxLabel={t('subcontractorForm.contacts.isPerson')}\n          />\n          {values.isPerson && (\n            <>\n              <Field.SelectSingle\n                name=\"title\"\n                label={t('subcontractorForm.contacts.titleLabel')}\n                options={[\n                  {\n                    value: CONTACT_TITLE.mr,\n                    label: t('subcontractorForm.contacts.title.mr'),\n                  },\n                  {\n                    value: CONTACT_TITLE.ms,\n                    label: t('subcontractorForm.contacts.title.ms'),\n                  },\n                ]}\n              />\n              <Field.Input name=\"firstName\" label={t('subcontractorForm.contacts.firstName')} />\n              <Field.Input\n                required\n                name=\"lastName\"\n                label={t('subcontractorForm.contacts.lastName')}\n              />\n              <Field.Input name=\"jobTitle\" label={t('subcontractorForm.contacts.jobTitle')} />\n            </>\n          )}\n          <Field.Input\n            required\n            name=\"email\"\n            label={t('subcontractorForm.contacts.email')}\n            type=\"email\"\n          />\n          <Field.Input name=\"phone\" label={t('subcontractorForm.contacts.phone')} />\n          <Field.Input name=\"mobilePhone\" label={t('subcontractorForm.contacts.mobilePhone')} />\n          <Field.Input name=\"fax\" label={t('subcontractorForm.contacts.fax')} />\n        </ModalFormBody>\n      )}\n    </Form>\n  );\n};\n\nexport default ContactsForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { IconClickable, ConfirmationModal, Modal } from 'shared/components';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport { MODAL_VARIANTS } from 'shared/constants';\n\nimport {\n  ContactsListWrapper,\n  ContactsListItem,\n  ContactsListActions,\n  StyledContactInfo,\n  ContactsListAction,\n  StyledExplanation,\n} from './Styles';\nimport ContactsForm from './ContactsForm';\nimport { SubcontractorForEdit_subcontractor_contacts } from './__graphql__/SubcontractorForEdit';\n\ninterface Props {\n  contacts: SubcontractorForEdit_subcontractor_contacts[];\n  removeContact: <T>(index: number) => T | undefined;\n  replaceContact: (index: number, value: unknown) => void;\n  hasError: boolean;\n}\n\nconst ContactsList: React.FC<Props> = ({ contacts, removeContact, replaceContact, hasError }) => {\n  const { t } = useTranslation();\n  return (\n    <ContactsListWrapper>\n      {contacts.length === 0 && (\n        <EmptyContent>\n          <StyledExplanation hasError={hasError}>\n            {t('subcontractorForm.contacts.oneContactRequired')}\n          </StyledExplanation>\n        </EmptyContent>\n      )}\n      {contacts.map((contact, i) => (\n        <ContactsListItem key={contact.id} data-cy-contact-id={contact.id}>\n          <StyledContactInfo action={null} contact={contact} centerAvatar />\n          <ContactsListActions>\n            <ContactsListAction>\n              <Modal\n                variant={MODAL_VARIANTS.center}\n                renderLink={modal => <IconClickable onClick={modal.open} type=\"edit\" />}\n                renderContent={modal => (\n                  <ContactsForm\n                    closeModal={modal.close}\n                    contact={contact}\n                    allValues={contacts}\n                    onSubmit={contactValues => {\n                      replaceContact(i, contactValues);\n                    }}\n                  />\n                )}\n              />\n            </ContactsListAction>\n            <ContactsListAction>\n              <ConfirmationModal\n                title={t('subcontractorForm.contacts.removeModalTitle')}\n                message={null}\n                renderLink={modal => <IconClickable onClick={modal.open} type=\"delete\" />}\n                onConfirm={({ close }) => {\n                  removeContact(i);\n                  close();\n                }}\n              />\n            </ContactsListAction>\n          </ContactsListActions>\n        </ContactsListItem>\n      ))}\n    </ContactsListWrapper>\n  );\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { FieldArray } from 'formik';\n\nimport { SectionTitle } from 'shared/components/Styles';\nimport { Modal } from 'shared/components';\nimport { MODAL_VARIANTS } from 'shared/constants';\n\nimport ContactsList from './ContactsList';\nimport ContactsForm from './ContactsForm';\nimport { StyledAddMoreLink } from './Styles';\nimport { SubcontractorForEdit_subcontractor_contacts } from './__graphql__/SubcontractorForEdit';\n\ninterface Props {\n  values: SubcontractorForEdit_subcontractor_contacts[];\n  hasError: boolean;\n}\n\nconst Contacts: React.FC<Props> = ({ values, hasError }) => {\n  const { t } = useTranslation();\n\n  return (\n    <FieldArray name=\"contacts\">\n      {({ push, remove, replace }) => (\n        <>\n          <SectionTitle>{t('subcontractorForm.contacts.heading')}</SectionTitle>\n          <ContactsList\n            contacts={values}\n            removeContact={remove}\n            replaceContact={replace}\n            hasError={hasError}\n          />\n          <Modal\n            variant={MODAL_VARIANTS.center}\n            renderContent={modal => (\n              <ContactsForm\n                allValues={values}\n                onSubmit={contactValues => {\n                  push(contactValues);\n                }}\n                closeModal={modal.close}\n              />\n            )}\n            renderLink={modal => (\n              <StyledAddMoreLink\n                data-cy-add-contact\n                onClick={() => {\n                  modal.open();\n                }}\n              >\n                {t('subcontractorForm.contacts.addAnotherButton')}\n              </StyledAddMoreLink>\n            )}\n          />\n        </>\n      )}\n    </FieldArray>\n  );\n};\n\nexport default Contacts;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { uniq } from 'shared/utils/javascript';\nimport { orderedCompanySizes, countryCodes, FormTypes } from 'shared/constants';\nimport toast from 'shared/utils/toast';\nimport { getHumanReadableCompanySize } from 'shared/utils/enumHelpers';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { Form, Field, ModalFormBody } from 'shared/components';\nimport { WorkCategories_workCategories } from 'shared/utils/__graphql__/WorkCategories';\n\nimport Contacts from './Contacts';\nimport { mutationCreateSubcontractor, mutationUpdateSubcontractor } from './api';\nimport {\n  SubcontractorForEdit_subcontractor,\n  SubcontractorForEdit_subcontractor_contacts,\n} from './__graphql__/SubcontractorForEdit';\n\ninterface Props {\n  subcontractor?: SubcontractorForEdit_subcontractor;\n  workCategories: WorkCategories_workCategories[];\n  closeModal: () => void;\n  type: FormTypes;\n}\n\ninterface FormValues {\n  name: string;\n  website: string;\n  companySize: string;\n  workCategoryNames: string[];\n  street: string;\n  postalCode: string;\n  city: string;\n  countryCode: string;\n  notes: string;\n  contacts: SubcontractorForEdit_subcontractor_contacts[];\n  isBanned: boolean;\n}\n\nconst SubcontractorsForm: React.FC<Props> = ({\n  type,\n  subcontractor = {},\n  workCategories,\n  closeModal,\n}) => {\n  const { t } = useTranslation('subcontractors');\n\n  const [createOrUpdateSubcontractor, { loading: mutating }] = useMutation(\n    type === FormTypes.edit ? mutationUpdateSubcontractor : mutationCreateSubcontractor,\n    {\n      refetchQueries: () => ['SubcontractorsForFilterableList', 'WorkCategories'],\n      awaitRefetchQueries: true,\n    },\n  );\n\n  const allWorkCategoryNames = workCategories.map(({ name }) => name);\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        name: subcontractor.name || '',\n        website: subcontractor.website || '',\n        companySize: subcontractor.companySize || '',\n        workCategoryNames: (subcontractor.workCategories || []).map(category => category.name),\n        street: subcontractor.street || '',\n        postalCode: subcontractor.postalCode || '',\n        city: subcontractor.city || '',\n        countryCode: subcontractor.countryCode || 'DE',\n        notes: subcontractor.notes || '',\n        contacts: subcontractor.contacts || [],\n        isBanned: subcontractor.isBanned || false,\n      }}\n      validations={{\n        name: [Form.is.required(), Form.is.maxLength(100)],\n        website: Form.is.url(),\n        street: Form.is.maxLength(200),\n        postalCode: Form.is.maxLength(100),\n        city: Form.is.maxLength(100),\n        countryCode: Form.is.maxLength(100),\n        contacts: Form.is.minLength(1),\n      }}\n      onSubmit={async (values, form) => {\n        const contacts = values.contacts.map(contact => ({\n          id: contact.id,\n          isPerson: contact.isPerson,\n          email: contact.email,\n          phone: contact.phone,\n          mobilePhone: contact.mobilePhone,\n          fax: contact.fax,\n          ...(contact.isPerson && {\n            title: contact.title || null,\n            firstName: contact.firstName,\n            lastName: contact.lastName,\n            jobTitle: contact.jobTitle,\n          }),\n        }));\n        const input = {\n          ...values,\n          contacts,\n          companySize: values.companySize || null,\n        };\n\n        await createOrUpdateSubcontractor({ variables: { id: subcontractor.id, input } })\n          .then(() => {\n            toast.success(t(type === FormTypes.edit ? 'updated' : 'created'));\n            closeModal();\n          }, toast.error)\n          .then(() => form.setSubmitting(false));\n      }}\n    >\n      {({ values, errors }) => (\n        <ModalFormBody close={closeModal} working={mutating}>\n          <HeadingMedium>\n            {t(type === FormTypes.edit ? 'editSubcontractor' : 'newSubcontractor')}\n          </HeadingMedium>\n          <Field.Input required name=\"name\" label={t('subcontractor.name')} />\n          <Field.Input name=\"website\" label={t('subcontractor.website')} />\n          <Field.SelectSingle\n            name=\"companySize\"\n            label={t('subcontractor.companySize')}\n            options={orderedCompanySizes.map(value => ({\n              value,\n              label: getHumanReadableCompanySize(value),\n            }))}\n          />\n          <Field.SelectMulti\n            onCreate={(name, selectOptionValue) => selectOptionValue(name)}\n            name=\"workCategoryNames\"\n            label={t('subcontractor.workCategories')}\n            options={uniq([...values.workCategoryNames, ...allWorkCategoryNames]).map(name => ({\n              value: name,\n              label: name,\n            }))}\n          />\n          <Field.Input name=\"street\" label={t('subcontractor.street')} />\n          <Field.Input name=\"postalCode\" label={t('subcontractor.postalCode')} />\n          <Field.Input name=\"city\" label={t('subcontractor.city')} />\n          <Field.SelectSingle\n            name=\"countryCode\"\n            label={t('subcontractor.country')}\n            options={countryCodes\n              .map(code => ({ value: code, label: t(`countries:${code}`) }))\n              .sort((country, otherCountry) => country.label.localeCompare(otherCountry.label))}\n          />\n          <Field.Textarea name=\"notes\" label={t('subcontractor.notes')} />\n          <Field.Checkbox name=\"isBanned\" checkboxLabel={t('subcontractor.isBanned')} />\n          <Contacts values={values.contacts} hasError={Boolean(errors.contacts)} />\n          <Form.RequiredFieldsNote />\n        </ModalFormBody>\n      )}\n    </Form>\n  );\n};\n\nexport default SubcontractorsForm;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { PageLoader, QueryErrors } from 'shared/components';\nimport { WorkCategories_workCategories } from 'shared/utils/__graphql__/WorkCategories';\nimport { FormTypes } from 'shared/constants';\n\nimport Form from './Form';\nimport { querySubcontractorForEdit } from './api';\nimport {\n  SubcontractorForEdit,\n  SubcontractorForEditVariables,\n} from './__graphql__/SubcontractorForEdit';\n\ninterface EditSubcontractorProps {\n  subcontractorId: string;\n\n  // TODO: Have these properties inherit from Form when it is ported to TS\n  workCategories: WorkCategories_workCategories[];\n  type: FormTypes;\n  closeModal: () => void;\n}\n\nconst EditSubcontractor: React.FC<EditSubcontractorProps> = ({ subcontractorId, ...rest }) => {\n  const { error: subcontractorError, ...queryData } = useQuery<\n    SubcontractorForEdit,\n    SubcontractorForEditVariables\n  >(querySubcontractorForEdit, { variables: { id: subcontractorId } });\n\n  if (!isDoneLoading(queryData)) return <PageLoader />;\n\n  if (subcontractorError) return <QueryErrors error={subcontractorError} />;\n\n  const {\n    data: { subcontractor },\n  } = queryData;\n\n  return <Form subcontractor={subcontractor} {...rest} />;\n};\n\nexport default EditSubcontractor;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  HtmlHeadTags,\n  Button,\n  DeletionModal,\n  Modal,\n  PageLoader,\n  QueryErrors,\n  Page,\n  IconClickable,\n} from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\nimport { FormTypes, MODAL_VARIANTS } from 'shared/constants';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport { queryWorkCategories } from 'shared/utils/queries';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport SubcontractorsList from 'shared/components/SubcontractorsList';\nimport SubcontractorsListItem from 'shared/components/SubcontractorsListItem';\nimport { WorkCategories } from 'shared/utils/__graphql__/WorkCategories';\n\nimport { mutationDeleteSubcontractor } from './api';\nimport Form from './Form';\nimport Edit from './Edit';\n\nconst Subcontractors: React.FC<void> = () => {\n  const { t } = useTranslation('subcontractors');\n\n  const { error, ...queryResults } = useQuery<WorkCategories>(queryWorkCategories);\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const {\n    data: { workCategories },\n  } = queryResults;\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"subcontractors\" />\n      <HeadingLarge>{t('subcontractors')}</HeadingLarge>\n      <SubcontractorsList\n        withShadow\n        renderHeaderAction={() => (\n          <Modal\n            variant={MODAL_VARIANTS.aside}\n            renderLink={modal => (\n              <Button data-cy-button-name=\"new\" onClick={modal.open}>\n                {t('newSubcontractor')}\n              </Button>\n            )}\n            renderContent={modal => (\n              <Form workCategories={workCategories} type={FormTypes.new} closeModal={modal.close} />\n            )}\n          />\n        )}\n        renderNoResults={isFiltered =>\n          isFiltered ? null : (\n            <div>\n              <EmptyContent.CallToAction>\n                {t('newSubcontractorCallToAction')}\n              </EmptyContent.CallToAction>\n              <EmptyContent.Explanation>\n                {t('newSubcontractorExplanation')}\n              </EmptyContent.Explanation>\n              <Modal\n                variant={MODAL_VARIANTS.aside}\n                renderLink={modal => (\n                  <EmptyContent.Button data-cy-button-name=\"new\" onClick={modal.open} hollow>\n                    {t('newSubcontractor')}\n                  </EmptyContent.Button>\n                )}\n                renderContent={modal => (\n                  <Form\n                    workCategories={workCategories}\n                    type={FormTypes.new}\n                    closeModal={modal.close}\n                  />\n                )}\n              />\n            </div>\n          )\n        }\n      >\n        {subcontractors =>\n          subcontractors.map(subcontractor => (\n            <SubcontractorsListItem\n              key={subcontractor.id}\n              showContactsWithoutEmails\n              subcontractor={subcontractor}\n              renderActions={subcontractorId => (\n                <>\n                  <Modal\n                    variant={MODAL_VARIANTS.aside}\n                    renderLink={modal => <IconClickable onClick={modal.open} type=\"edit\" />}\n                    renderContent={modal => (\n                      <Edit\n                        type={FormTypes.edit}\n                        workCategories={workCategories}\n                        subcontractorId={subcontractor.id}\n                        closeModal={modal.close}\n                      />\n                    )}\n                  />\n                  <DeletionModal\n                    id={subcontractorId}\n                    mutation={mutationDeleteSubcontractor}\n                    refetchQueries={() => ['SubcontractorsForFilterableList', 'WorkCategories']}\n                    renderLink={modal => <IconClickable onClick={modal.open} type=\"delete\" />}\n                  />\n                </>\n              )}\n            />\n          ))\n        }\n      </SubcontractorsList>\n    </Page>\n  );\n};\n\nexport default Subcontractors;\n","import gql from 'graphql-tag';\n\nimport { fragmentBidModal } from 'shared/components/BidModal';\n\nexport const queryBids = gql`\n  query Bids(\n    $offset: Int!\n    $limit: Int!\n    $sortBy: BIDS_SORT_FIELD!\n    $sortDirection: SortDirection!\n  ) {\n    bids(offset: $offset, limit: $limit, sortBy: $sortBy, sortDirection: $sortDirection) {\n      totalRecords\n      bids {\n        id\n        totalAmount\n        message\n        submittedAt\n        ...BidModal_bid\n        bidRequest {\n          id\n          ...BidModal_bidRequest\n          subcontractor {\n            name\n          }\n          bidPackage {\n            name\n            project {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n  ${fragmentBidModal}\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {\n  HtmlHeadTags,\n  Table,\n  Cell,\n  RowBadge,\n  BidModal,\n  QueryErrors,\n  PageLoader,\n  Page,\n} from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\nimport CurrencyFormatter from 'shared/components/CurrencyFormatter';\nimport EmptyContent from 'shared/components/EmptyContent';\nimport { formatDateTime } from 'shared/utils/dateTime';\nimport { TABLE_ITEMS_PER_PAGE, SortDirection } from 'shared/constants';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport { queryBids } from './api';\nimport { Bids as BidsQuery } from './__graphql__/Bids';\n\nexport function hasTotalAmount<T extends { totalAmount: number | null }>(\n  bid: T,\n): bid is T & { totalAmount: number } {\n  return bid.totalAmount !== null;\n}\n\nconst Bids: React.FC<void> = () => {\n  const { t } = useTranslation('bids');\n  const { error, ...queryResults } = useQuery<BidsQuery>(queryBids, {\n    variables: {\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'submittedAt',\n      sortDirection: SortDirection.desc,\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const {\n    bids: { bids, totalRecords },\n  } = queryResults.data;\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"bids\" />\n      <HeadingLarge data-cy-bids-title>{t('bids')}</HeadingLarge>\n      <Table\n        columns={[\n          { label: t('tableHeader.project'), testIdentifier: 'project', sortField: 'projectName' },\n          { label: t('tableHeader.bidPackage'), testIdentifier: 'bidPackage' },\n          { label: t('tableHeader.subcontractor'), testIdentifier: 'subcontractor' },\n          { label: t('tableHeader.amount'), testIdentifier: 'amount' },\n          { label: t('tableHeader.date'), testIdentifier: 'date', sortField: 'submittedAt' },\n        ]}\n        rows={bids.filter(hasTotalAmount).map(bid => (\n          <Table.Row rowId={bid.id}>\n            <RowBadge displayName={bid.bidRequest.bidPackage.project.name} />\n            <Cell.Text>{bid.bidRequest.bidPackage.name}</Cell.Text>\n            <Cell.Text>{bid.bidRequest.subcontractor.name}</Cell.Text>\n            <BidModal\n              bid={bid}\n              subcontractor={bid.bidRequest.subcontractor}\n              bidInvites={bid.bidRequest.bidInvites}\n              renderLink={modal => (\n                <Cell.Link onClick={modal.open}>\n                  <CurrencyFormatter value={bid.totalAmount} />\n                </Cell.Link>\n              )}\n            />\n            <Cell.Text data-cy-submitted-at-timestamp={bid.submittedAt}>\n              {formatDateTime(bid.submittedAt)}\n            </Cell.Text>\n          </Table.Row>\n        ))}\n        totalRecords={totalRecords}\n        refetch={queryResults.refetch}\n        variables={queryResults.variables}\n        contentIfEmpty={() => (\n          <>\n            <EmptyContent.CallToAction>{t('emptyContentTitle')}</EmptyContent.CallToAction>\n            <EmptyContent.Explanation>{t('emptyContentExplanation')}</EmptyContent.Explanation>\n          </>\n        )}\n      />\n    </Page>\n  );\n};\n\nexport default Bids;\n","import styled from 'styled-components/macro';\n\nimport { font } from 'shared/utils/styles';\n\nexport const BiddersPrintContainer = styled.div`\n  /* Keeps IE from printing an extra blank page */\n  height: 100%;\n  margin-top: 20px;\n\n  @media print {\n    margin-top: 0;\n    @page {\n      /* Forces landscape for Chrome and Opera; other browsers entirely depend on user input. */\n      size: landscape;\n    }\n  }\n`;\n\nexport const Header = styled.h3`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const InnerTable = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  break-before: avoid;\n  break-inside: avoid;\n  break-after: auto;\n`;\n\nexport const OuterTable = styled.table`\n  width: 100%; /* required for IE */\n  table-layout: fixed;\n  break-before: avoid;\n  break-inside: auto;\n  break-after: auto;\n`;\n\nexport const TableHeader = styled.th`\n  padding-left: 7px;\n  text-align: left;\n\n  @media print {\n    ${font.size(12)}\n  }\n`;\n\nexport const StatusColumn = styled.col`\n  width: 12%;\n`;\n\nexport const NameColumn = styled.col`\n  width: 18%;\n`;\n\nexport const EmailColumn = styled.col`\n  width: 16.67%;\n`;\n\nexport const PhoneColumn = styled.col`\n  width: 16.67%;\n`;\n\nexport const FaxColumn = styled.col`\n  width: 16.67%;\n`;\n\nexport const CurrentBidColumn = styled.col`\n  width: 16.67%;\n`;\n\nexport const BidRequestRow = styled.tr`\n  border-top: 1px solid gray;\n  ${font.bold}\n  break-before: avoid;\n  break-inside: avoid;\n  break-after: avoid;\n`;\n\nexport const ContactRow = styled.tr`\n  break-before: avoid;\n  break-inside: avoid;\n  break-after: avoid;\n`;\n\nexport const Cell = styled.td`\n  padding: 7px;\n  max-width: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  @media print {\n    ${font.size(12)}\n  }\n`;\n","import React, { FunctionComponent } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { getContactNameWithTitle } from 'shared/utils/getContactName';\nimport { QueryErrors, PageLoader, PrintDialog } from 'shared/components';\nimport { SortDirection, nullString } from 'shared/constants';\nimport { formatCurrency } from 'shared/components/CurrencyFormatter';\n\nimport { queryBidRequestsForPrint, queryBidPackageHeaderForPrint } from './api';\nimport {\n  Header,\n  OuterTable,\n  InnerTable,\n  TableHeader,\n  BiddersPrintContainer,\n  BidRequestRow,\n  ContactRow,\n  Cell,\n  StatusColumn,\n  NameColumn,\n  EmailColumn,\n  PhoneColumn,\n  FaxColumn,\n  CurrentBidColumn,\n} from './Print.styles';\nimport {\n  BidRequestsForPrint,\n  BidRequestsForPrint_bidRequests_bidRequests_bidInvites,\n} from './__graphql__/BidRequestsForPrint';\nimport { BidPackageHeaderForPrint } from './__graphql__/BidPackageHeaderForPrint';\n\ninterface BiddersRouteProps {\n  bidPackageId: string;\n}\n\nfunction hasContactEmail<T extends { contact: { email: string | null } }>(\n  bidInvite: T,\n): bidInvite is T & {\n  contact: {\n    email: string;\n  };\n} {\n  return !!bidInvite.contact.email;\n}\n\nconst filterAndSortBidInvites = (\n  bidInvites: BidRequestsForPrint_bidRequests_bidRequests_bidInvites[],\n) =>\n  bidInvites.filter(hasContactEmail).sort((a, b) => {\n    if (a.contact.email < b.contact.email) {\n      return -1;\n    }\n    if (a.contact.email > b.contact.email) {\n      return 1;\n    }\n    return 0;\n  });\n\nexport const PrintBidders: FunctionComponent<RouteComponentProps<BiddersRouteProps>> = ({\n  match,\n}) => {\n  const { t, i18n } = useTranslation('bidInvites');\n\n  const { error: biddersError, ...biddersQueryResults } = useQuery<BidRequestsForPrint>(\n    queryBidRequestsForPrint,\n    {\n      variables: {\n        bidPackageId: match.params.bidPackageId,\n        sortBy: 'subcontractorName',\n        sortDirection: SortDirection.asc,\n      },\n      fetchPolicy: 'no-cache',\n    },\n  );\n\n  const { error: bidPackageHeaderError, ...bidPackageHeaderResults } = useQuery<\n    BidPackageHeaderForPrint\n  >(queryBidPackageHeaderForPrint, {\n    variables: {\n      bidPackageId: match.params.bidPackageId,\n    },\n    fetchPolicy: 'no-cache',\n  });\n\n  const error = biddersError || bidPackageHeaderError;\n\n  if (error) return <QueryErrors error={error} />;\n\n  if (!isDoneLoading(biddersQueryResults) || !isDoneLoading(bidPackageHeaderResults))\n    return <PageLoader />;\n\n  const {\n    data: {\n      bidRequests: { bidRequests },\n    },\n  } = biddersQueryResults;\n\n  const {\n    data: {\n      bidPackage: {\n        name: bidPackageName,\n        project: { name: projectName },\n      },\n    },\n  } = bidPackageHeaderResults;\n\n  const ColumnGroup = () => (\n    <colgroup>\n      <StatusColumn />\n      <NameColumn />\n      <EmailColumn />\n      <PhoneColumn />\n      <FaxColumn />\n      <CurrentBidColumn />\n    </colgroup>\n  );\n\n  return (\n    <BiddersPrintContainer>\n      <PrintDialog />\n      <Header>\n        {t('printBidders.title', { bidPackage: `${projectName} - ${bidPackageName}` })}\n      </Header>\n      <OuterTable>\n        <ColumnGroup />\n        <thead>\n          <tr>\n            <TableHeader>{t('printBidders.tableHeader.status')}</TableHeader>\n            <TableHeader>{t('printBidders.tableHeader.name')}</TableHeader>\n            <TableHeader>{t('printBidders.tableHeader.email')}</TableHeader>\n            <TableHeader>{t('printBidders.tableHeader.phone')}</TableHeader>\n            <TableHeader>{t('printBidders.tableHeader.fax')}</TableHeader>\n            <TableHeader>{t('printBidders.tableHeader.currentBid')}</TableHeader>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td colSpan={6}>\n              {bidRequests.map(({ id, status, subcontractor, currentBid, bidInvites }) => (\n                <InnerTable key={id}>\n                  <ColumnGroup />\n                  <BidRequestRow>\n                    <Cell>{t(`request.${status}`)}</Cell>\n                    <Cell colSpan={2}>{subcontractor.name}</Cell>\n                    <Cell />\n                    <Cell />\n                    <Cell>\n                      {typeof currentBid?.totalAmount === 'number'\n                        ? formatCurrency(i18n.language, currentBid.totalAmount)\n                        : nullString}\n                    </Cell>\n                  </BidRequestRow>\n                  {filterAndSortBidInvites(bidInvites).map(\n                    (\n                      { contact: { isPerson, title, firstName, lastName, email, phone, fax } },\n                      index,\n                    ) => {\n                      return (\n                        <ContactRow key={index}>\n                          <Cell />\n                          <Cell>\n                            {isPerson\n                              ? getContactNameWithTitle({ firstName, lastName, isPerson, title })\n                              : nullString}\n                          </Cell>\n                          <Cell>{email}</Cell>\n                          <Cell>{phone || nullString}</Cell>\n                          <Cell>{fax || nullString}</Cell>\n                          <Cell />\n                        </ContactRow>\n                      );\n                    },\n                  )}\n                </InnerTable>\n              ))}\n            </td>\n          </tr>\n        </tbody>\n      </OuterTable>\n    </BiddersPrintContainer>\n  );\n};\n","import styled from 'styled-components/macro';\n\nimport { font, mixin } from 'shared/utils/styles';\n\nexport const BidRequestHeading = styled.div`\n  margin-bottom: 15px;\n  text-align: center;\n  ${font.size(18)}\n`;\n\nexport const BidRequestOffice = styled.div`\n  margin-bottom: 30px;\n  text-align: center;\n  ${font.medium}\n  ${font.size(28)}\n`;\n\nexport const TopLink = styled.div`\n  padding: 10px 0;\n  text-align: center;\n  ${font.size(14)}\n  a {\n    display: inline-block;\n    padding: 3px 0;\n    ${mixin.link()}\n  }\n`;\n\nexport const FormElementRow = styled.div`\n  display: flex;\n  margin: 0 -10px;\n`;\n\nexport const FormElementRowItem = styled.div`\n  width: 100%;\n  padding: 0 10px;\n`;\n","import gql from 'graphql-tag';\n\nimport { fragmentCurrentUserForAuthentication } from 'shared/hooks/useAuthentication';\n\nexport const queryBidInvite = gql`\n  query BidInvite($bidInviteId: ID!) {\n    bidInvite(bidInviteId: $bidInviteId) {\n      id\n      bidRequest {\n        id\n        bidPackage {\n          id\n          project {\n            id\n            name\n            forceSubcontractorSignup\n            office {\n              id\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const mutationClaimBidInvite = gql`\n  mutation ClaimBidInvite($bidInviteId: ID!) {\n    claimBidInvite(bidInviteId: $bidInviteId)\n  }\n`;\n\nexport const mutationAgentSignup = gql`\n  mutation AgentSignup($input: AgentSignupInput!) {\n    agentSignup(input: $input) {\n      token\n      user {\n        ...CurrentUserForAuthentication\n      }\n    }\n  }\n  ${fragmentCurrentUserForAuthentication}\n`;\n","import React, { useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport { Form, Field, ExternalLink } from 'shared/components';\nimport { Heading, Message, SubmitButton } from 'shared/components/UnauthenticatedStyles';\nimport Console from 'shared/utils/console';\nimport AuthContext from 'shared/contexts/authContext';\nimport UnauthenticatedPage from 'shared/components/UnauthenticatedPage';\nimport { ContentBox, ContentBoxSmall } from 'shared/components/UnauthenticatedPage/Styles';\nimport routes from 'shared/constants/routes';\nimport { COLOR } from 'shared/utils/styles';\n\nimport {\n  BidRequestHeading,\n  BidRequestOffice,\n  TopLink,\n  FormElementRow,\n  FormElementRowItem,\n} from './Signup.styles';\nimport { mutationAgentSignup } from './api';\nimport { AgentSignup, AgentSignupVariables } from './__graphql__/AgentSignup';\nimport { BidInvite_bidInvite } from './__graphql__/BidInvite';\n\ninterface Props {\n  bidInvite: BidInvite_bidInvite;\n}\n\ninterface FormValues {\n  companyName: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  termsAccepted: boolean;\n}\n\nconst BidInviteSignup: React.FC<Props> = ({ bidInvite }) => {\n  const { t } = useTranslation('auth');\n  const { login } = useContext(AuthContext);\n\n  const [agentSignup, { error: mutationError, loading: mutating }] = useMutation<\n    AgentSignup,\n    AgentSignupVariables\n  >(mutationAgentSignup);\n\n  return (\n    <UnauthenticatedPage title=\"signup\">\n      <BidRequestHeading>{t('bidRequestHeading')}</BidRequestHeading>\n      <BidRequestOffice>{bidInvite.bidRequest.bidPackage.project.office.name}</BidRequestOffice>\n      <ContentBoxSmall>\n        <TopLink>\n          {t('alreadyHaveAnAccount')} <Link to={routes.login()}>{t('goToLogin')}</Link>\n        </TopLink>\n      </ContentBoxSmall>\n      <Form<FormValues>\n        initialValues={{\n          companyName: '',\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n          termsAccepted: false,\n        }}\n        validations={{\n          companyName: [Form.is.required()],\n          firstName: [Form.is.required(), Form.is.maxLength(100)],\n          lastName: [Form.is.required(), Form.is.maxLength(100)],\n          email: [Form.is.required()],\n          password: [Form.is.required(), Form.is.minLength(8), Form.is.maxLength(250)],\n          termsAccepted: Form.is.match(value => !!value, t('validation:termsMustBeAccepted')),\n        }}\n        onSubmit={async values => {\n          const { termsAccepted, ...submitValues } = values;\n\n          try {\n            const { data: signupData } = await agentSignup({\n              variables: { input: { bidInviteId: bidInvite.id, ...submitValues } },\n            });\n            if (signupData) {\n              login({\n                ...signupData.agentSignup,\n                redirectTo: routes.bidInvite(bidInvite.id),\n              });\n            }\n          } catch (signupError) {\n            Console.error(signupError);\n          }\n        }}\n      >\n        <ContentBox as={Form.Element}>\n          <Heading>{t('bidRequestSignupHeading')}</Heading>\n          {mutationError && <Message color={COLOR.danger}>{mutationError.message}</Message>}\n          <Field.Input required name=\"companyName\" label={t('company.name')} />\n          <FormElementRow>\n            <FormElementRowItem>\n              <Field.Input required name=\"firstName\" label={t('user.firstName')} />\n            </FormElementRowItem>\n            <FormElementRowItem>\n              <Field.Input required name=\"lastName\" label={t('user.lastName')} />\n            </FormElementRowItem>\n          </FormElementRow>\n          <Field.Input required name=\"email\" label={t('email')} type=\"email\" />\n          <Field.Input required name=\"password\" label={t('password')} type=\"password\" />\n          <Field.Checkbox\n            name=\"termsAccepted\"\n            checkboxLabel={\n              <Trans i18nKey=\"termsAccepted\" t={t}>\n                I accept the{' '}\n                <ExternalLink to=\"https://www.cosuno.de/terms\">terms and conditions</ExternalLink>{' '}\n                and the{' '}\n                <ExternalLink to=\"https://www.cosuno.de/privacy\">privacy policy</ExternalLink>.\n              </Trans>\n            }\n          />\n          <Form.RequiredFieldsNote />\n          <SubmitButton type=\"submit\" working={mutating}>\n            {t('signupSubmit')}\n          </SubmitButton>\n        </ContentBox>\n      </Form>\n    </UnauthenticatedPage>\n  );\n};\n\nexport default BidInviteSignup;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { PageLoader, QueryErrors } from 'shared/components';\n\nimport { mutationClaimBidInvite } from './api';\nimport {\n  ClaimBidInvite as ClaimBidInviteQuery,\n  ClaimBidInviteVariables,\n} from './__graphql__/ClaimBidInvite';\n\ninterface Props {\n  bidInviteId: string;\n  children: React.ReactNode;\n}\n\nconst ClaimBidInvite: React.FC<Props> = ({ bidInviteId, children }) => {\n  const [claimBidInvite, { error, loading }] = useMutation<\n    ClaimBidInviteQuery,\n    ClaimBidInviteVariables\n  >(mutationClaimBidInvite, {\n    variables: { bidInviteId },\n  });\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    claimBidInvite();\n  }, [claimBidInvite]);\n\n  if (error) {\n    return <QueryErrors error={error} />;\n  }\n\n  if (loading) {\n    return <PageLoader />;\n  }\n\n  return <>{children}</>;\n};\n\nexport default ClaimBidInvite;\n","import React, { useContext } from 'react';\nimport { Redirect, useRouteMatch } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport PageNotFound from 'components/PageNotFound';\nimport { ERROR_TYPES, AUTH_STATUS } from 'shared/constants';\nimport { doesErrorMatchCode, isDoneLoading } from 'shared/utils/apollo';\nimport { PageLoader, QueryErrors } from 'shared/components';\nimport routes from 'shared/constants/routes';\nimport AuthContext from 'shared/contexts/authContext';\n\nimport BidInviteSignup from './Signup';\nimport ClaimBidInvite from './Claim';\nimport { queryBidInvite } from './api';\nimport { BidInvite as BidInviteQuery, BidInviteVariables } from './__graphql__/BidInvite';\n\nconst BidInvite: React.FC<{}> = () => {\n  const { params } = useRouteMatch();\n  const { authState } = useContext(AuthContext);\n\n  const { error, ...results } = useQuery<BidInviteQuery, BidInviteVariables>(queryBidInvite, {\n    variables: { bidInviteId: params.bidInviteId },\n  });\n\n  if (error) {\n    if (doesErrorMatchCode(error, ERROR_TYPES.notFound)) {\n      return <PageNotFound.Authenticated />;\n    }\n    return <QueryErrors error={error} />;\n  }\n\n  if (!isDoneLoading(results)) {\n    return <PageLoader />;\n  }\n\n  const { bidInvite } = results.data;\n\n  // If the `forceSubcontractorSignup` flag is set on the project, the agent user\n  // needs to sign up (or login) before being able to view this bid invite.\n  if (\n    authState.status === AUTH_STATUS.anonymous &&\n    bidInvite.bidRequest.bidPackage.project.forceSubcontractorSignup\n  ) {\n    return <BidInviteSignup bidInvite={bidInvite} />;\n  }\n\n  return (\n    <ClaimBidInvite bidInviteId={params.bidInviteId}>\n      <Redirect to={routes.bidRequest(bidInvite.bidRequest.id)} />\n    </ClaimBidInvite>\n  );\n};\n\nexport default BidInvite;\n","import React, { FC } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { DOCUMENT_ENTITY } from '__graphql__/globalTypes';\nimport { DocumentsTableSingle } from 'shared/components/DocumentsTable';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\n\nimport { queryProjectForPrintingDocuments } from './api';\nimport { ProjectForPrintingDocuments } from './__graphql__/ProjectForPrintingDocuments';\n\ninterface PrintDocumentsProps {\n  projectId: string;\n}\n\nconst PrintDocuments: FC<RouteComponentProps<PrintDocumentsProps>> = ({ match }) => {\n  const {\n    params: { projectId },\n  } = match;\n\n  const { error, ...documentsQueryResults } = useQuery<ProjectForPrintingDocuments>(\n    queryProjectForPrintingDocuments,\n    {\n      variables: {\n        id: projectId,\n      },\n    },\n  );\n\n  if (error) return <QueryErrors error={error} />;\n\n  if (!isDoneLoading(documentsQueryResults)) return <PageLoader />;\n\n  const {\n    data: {\n      project: { name },\n    },\n  } = documentsQueryResults;\n\n  return (\n    <DocumentsTableSingle\n      attachableId={projectId}\n      attachableType={DOCUMENT_ENTITY.Project}\n      attachableName={name}\n      printDocuments\n    />\n  );\n};\n\nexport default PrintDocuments;\n","import React, { FC } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { buildAttachableName } from 'shared/utils/documents';\nimport { DOCUMENT_ENTITY } from '__graphql__/globalTypes';\nimport { DocumentsTableSingle } from 'shared/components/DocumentsTable';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport PageLoader from 'shared/components/PageLoader';\nimport QueryErrors from 'shared/components/QueryErrors';\n\nimport { queryBidPackageForPrintingDocuments } from './api';\nimport { BidPackageForPrintingDocuments } from './__graphql__/BidPackageForPrintingDocuments';\n\ninterface PrintDocumentsProps {\n  bidPackageId: string;\n}\n\nconst PrintDocuments: FC<RouteComponentProps<PrintDocumentsProps>> = ({ match }) => {\n  const {\n    params: { bidPackageId },\n  } = match;\n\n  const { error, ...documentsQueryResults } = useQuery<BidPackageForPrintingDocuments>(\n    queryBidPackageForPrintingDocuments,\n    {\n      variables: {\n        id: bidPackageId,\n      },\n    },\n  );\n\n  if (error) return <QueryErrors error={error} />;\n\n  if (!isDoneLoading(documentsQueryResults)) return <PageLoader />;\n\n  const {\n    data: {\n      bidPackage: {\n        name: bidPackageName,\n        project: { name: projectName },\n      },\n    },\n  } = documentsQueryResults;\n\n  return (\n    <DocumentsTableSingle\n      attachableId={bidPackageId}\n      attachableType={DOCUMENT_ENTITY.BidPackage}\n      attachableName={buildAttachableName([projectName, bidPackageName])}\n      printDocuments\n    />\n  );\n};\n\nexport default PrintDocuments;\n","import gql from 'graphql-tag';\n\nexport const queryAdminCompanies = gql`\n  query AdminCompanies(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    adminCompanies(\n      query: $query\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      companies {\n        id\n        name\n        status\n        remindersEnabled\n      }\n      totalRecords\n    }\n  }\n`;\n\nexport const mutationAdminUpdateCompany = gql`\n  mutation AdminUpdateCompany($id: ID!, $input: CompanyInput!) {\n    adminUpdateCompany(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n\nexport const mutationAdminActivateCompany = gql`\n  mutation AdminActivateCompany($id: ID!) {\n    adminActivateCompany(id: $id)\n  }\n`;\n\nexport const mutationAdminInviteUsers = gql`\n  mutation AdminInviteUsers($companyId: ID!, $users: [UserToInviteInput!]!) {\n    adminInviteUsers(companyId: $companyId, users: $users)\n  }\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { Form, ModalFormBody, Field } from 'shared/components';\nimport { HeadingMedium } from 'shared/components/Styles';\n\nimport { mutationAdminUpdateCompany } from './api';\nimport { AdminUpdateCompany, AdminUpdateCompanyVariables } from './__graphql__/AdminUpdateCompany';\nimport { AdminCompanies_adminCompanies_companies } from './__graphql__/AdminCompanies';\n\ninterface Props {\n  company: AdminCompanies_adminCompanies_companies;\n  closeModal: () => void;\n}\n\ninterface FormValues {\n  name: string;\n  remindersEnabled?: boolean;\n}\n\nconst EditForm: React.FC<Props> = ({ company, closeModal }) => {\n  const { t } = useTranslation('admin');\n  const [updateCompany, { loading: mutating }] = useMutation<\n    AdminUpdateCompany,\n    AdminUpdateCompanyVariables\n  >(mutationAdminUpdateCompany, {\n    refetchQueries: () => ['AdminCompanies'],\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        name: company.name,\n        remindersEnabled: company.remindersEnabled,\n      }}\n      validations={{\n        name: [Form.is.required(), Form.is.maxLength(100)],\n      }}\n      onSubmit={async (values, form) => {\n        await updateCompany({ variables: { id: company.id, input: values } })\n          .then(() => {\n            toast.success(t('companyUpdated'));\n            closeModal();\n          }, toast.error)\n          .then(() => form.setSubmitting(false));\n      }}\n    >\n      <ModalFormBody close={closeModal} working={mutating}>\n        <HeadingMedium>{t('editCompany')}</HeadingMedium>\n        <Field.Input name=\"name\" label={t('company.name')} />\n        <Field.Checkbox name=\"remindersEnabled\" checkboxLabel={t('company.remindersEnabled')} />\n      </ModalFormBody>\n    </Form>\n  );\n};\n\nexport default EditForm;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport { Icon, UsersInviteModal, ConfirmationModal, DropdownMenu, Modal } from 'shared/components';\nimport Clickable from 'shared/components/Clickable';\nimport { COMPANY_STATUS } from '__graphql__/globalTypes';\nimport { DropdownMenuWrapper } from 'shared/components/Styles';\nimport toast from 'shared/utils/toast';\nimport { MODAL_VARIANTS } from 'shared/constants';\n\nimport EditForm from './EditForm';\nimport { mutationAdminInviteUsers, mutationAdminActivateCompany } from './api';\nimport { AdminCompanies_adminCompanies_companies } from './__graphql__/AdminCompanies';\nimport { AdminInviteUsers, AdminInviteUsersVariables } from './__graphql__/AdminInviteUsers';\n\ninterface Props {\n  company: AdminCompanies_adminCompanies_companies;\n}\n\nconst CompaniesDropdown: React.FC<Props> = ({ company }) => {\n  const { t } = useTranslation('admin');\n\n  const [adminInviteUsers, { loading: inviteMutating }] = useMutation<\n    AdminInviteUsers,\n    AdminInviteUsersVariables\n  >(mutationAdminInviteUsers, {\n    refetchQueries: () => ['Users', 'AdminUsers'],\n  });\n\n  const [adminActivateCompany, { loading: activateMutating }] = useMutation(\n    mutationAdminActivateCompany,\n    {\n      variables: { id: company.id },\n      refetchQueries: () => ['AdminCompanies'],\n    },\n  );\n\n  return (\n    <DropdownMenuWrapper>\n      <DropdownMenu.Container\n        renderTrigger={({ isTriggered, toggleTrigger }) => (\n          <Clickable onClick={toggleTrigger}>\n            <Icon type={isTriggered ? 'chevron-up' : 'chevron-down'} size={18} />\n          </Clickable>\n        )}\n      >\n        <Modal\n          variant={MODAL_VARIANTS.aside}\n          renderLink={modal => (\n            <DropdownMenu.Action onClick={modal.open}>{t('edit')}</DropdownMenu.Action>\n          )}\n          renderContent={modal => <EditForm company={company} closeModal={modal.close} />}\n        />\n        {company.status === COMPANY_STATUS.pendingApproval && (\n          <ConfirmationModal\n            title={t('activateCompanyTitle')}\n            message={t('activateCompanyMessage')}\n            isWorking={activateMutating}\n            renderLink={modal => (\n              <DropdownMenu.Action onClick={modal.open}>{t('activateCompany')}</DropdownMenu.Action>\n            )}\n            onConfirm={async () => {\n              try {\n                await adminActivateCompany();\n                toast.success(t('activateCompanySuccess'));\n              } catch (error) {\n                toast.error(error);\n              }\n            }}\n          />\n        )}\n        {company.status === COMPANY_STATUS.active && (\n          <UsersInviteModal\n            loading={inviteMutating}\n            renderLink={modal => (\n              <DropdownMenu.Action onClick={modal.open}>{t('inviteUsers')}</DropdownMenu.Action>\n            )}\n            onSubmit={({ users }, confirm) => {\n              adminInviteUsers({ variables: { users, companyId: company.id } }).then(() => {\n                toast.success(t('company:invitationsSent'));\n                confirm();\n              }, toast.error);\n            }}\n          />\n        )}\n      </DropdownMenu.Container>\n    </DropdownMenuWrapper>\n  );\n};\n\nexport default CompaniesDropdown;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport { QueryErrors, PageLoader, Table, Cell } from 'shared/components';\nimport { TableSearch } from 'shared/components/Styles';\nimport { CompanyStatusTag } from 'shared/components/TagStyles';\nimport { TABLE_ITEMS_PER_PAGE } from 'shared/constants';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport { queryAdminCompanies } from './api';\nimport Dropdown from './Dropdown';\nimport { AdminCompanies } from './__graphql__/AdminCompanies';\n\nconst Companies = () => {\n  const { t } = useTranslation('admin');\n\n  const { error, ...queryResults } = useQuery<AdminCompanies>(queryAdminCompanies, {\n    variables: { offset: 0, limit: TABLE_ITEMS_PER_PAGE },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data, refetch, variables } = queryResults;\n\n  return (\n    <>\n      <TableSearch onChange={(search: string) => refetch({ query: search })} />\n      <Table\n        columns={[\n          { label: t('company.name'), sortField: 'name' },\n          { label: t('company.status'), sortField: 'status' },\n          { fixedWidth: 50 },\n        ]}\n        rows={data.adminCompanies.companies.map(company => (\n          <Table.Row rowId={company.id}>\n            <Cell.Text>{company.name}</Cell.Text>\n            <CompanyStatusTag inList status={company.status}>\n              {t(`company.${company.status}`)}\n            </CompanyStatusTag>\n            <Dropdown company={company} />\n          </Table.Row>\n        ))}\n        totalRecords={data.adminCompanies.totalRecords}\n        refetch={refetch}\n        variables={variables}\n      />\n    </>\n  );\n};\n\nexport default Companies;\n","import gql from 'graphql-tag';\n\nimport { fragmentUsersTableDropdown } from 'shared/components/UsersTableDropdown';\n\nexport const queryAdminUsers = gql`\n  query AdminUsers(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    adminUsers(\n      query: $query\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      users {\n        id\n        email\n        firstName\n        lastName\n        status\n        ...UsersTableDropdown_user\n        company {\n          id\n          name\n        }\n      }\n      totalRecords\n    }\n  }\n  ${fragmentUsersTableDropdown}\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { Table, Cell, PageLoader, QueryErrors, UsersTableDropdown } from 'shared/components';\nimport { TableSearch } from 'shared/components/Styles';\nimport { UserStatusTag } from 'shared/components/TagStyles';\nimport { nullString, TABLE_ITEMS_PER_PAGE } from 'shared/constants';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { queryCurrentUser } from 'shared/utils/queries';\nimport { CurrentUser as CurrentUserData } from 'shared/utils/__graphql__/CurrentUser';\n\nimport { queryAdminUsers } from './api';\nimport { AdminUsers as AdminUsersData } from './__graphql__/AdminUsers';\n\nconst formatUserName = (firstName: string | null, lastName: string | null) =>\n  `${firstName || nullString} ${lastName || ''}`;\n\nconst AdminUsers = () => {\n  const { t } = useTranslation('admin');\n\n  // For components that have multiple useQuery hooks, we have to use the\n  // no-cache fetch policy, otherwise errors are not handled correctly.\n  // We do not know the reason for this issue.\n\n  const adminUsersRequest = useQuery<AdminUsersData>(queryAdminUsers, {\n    variables: { offset: 0, limit: TABLE_ITEMS_PER_PAGE },\n    fetchPolicy: 'no-cache',\n  });\n\n  const currentUserRequest = useQuery<CurrentUserData>(queryCurrentUser, {\n    fetchPolicy: 'no-cache',\n  });\n\n  for (const error of [adminUsersRequest.error, currentUserRequest.error]) {\n    if (error) return <QueryErrors error={error} />;\n  }\n\n  if (!isDoneLoading(adminUsersRequest) || !isDoneLoading(currentUserRequest)) {\n    return <PageLoader />;\n  }\n\n  const { data, refetch, variables } = adminUsersRequest;\n\n  return (\n    <>\n      <TableSearch onChange={(search: string) => refetch({ query: search })} />\n      <Table\n        columns={[\n          { label: t('user.name'), sortField: 'name' },\n          { label: t('user.companyName'), sortField: 'company' },\n          { label: t('user.email') },\n          { label: t('user.type') },\n          { label: t('user.status') },\n          { fixedWidth: 50 },\n        ]}\n        rows={data.adminUsers.users.map(user => (\n          <Table.Row rowId={user.id}>\n            <Cell.Text>{formatUserName(user.firstName, user.lastName)}</Cell.Text>\n            <Cell.Text>{user.company.name}</Cell.Text>\n            <Cell.Text>{user.email}</Cell.Text>\n            <Cell.Text>{t(`user.${user.type}`)}</Cell.Text>\n            <UserStatusTag inList status={user.status}>\n              {t(`userStatus.${user.status}`)}\n            </UserStatusTag>\n            <UsersTableDropdown\n              user={user}\n              isAdmin\n              isCurrentUser={user.id === currentUserRequest.data.me.id}\n            />\n          </Table.Row>\n        ))}\n        totalRecords={data.adminUsers.totalRecords}\n        refetch={refetch}\n        variables={variables}\n      />\n    </>\n  );\n};\n\nexport default AdminUsers;\n","import gql from 'graphql-tag';\n\nexport const queryAdminBidRequests = gql`\n  query AdminBidRequests(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    adminBidRequests(\n      query: $query\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      bidRequests {\n        id\n        status\n        bidPackage {\n          id\n          name\n          project {\n            id\n            name\n          }\n        }\n        subcontractor {\n          id\n          name\n        }\n      }\n      totalRecords\n    }\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\n\nimport { DropdownMenuWrapper } from 'shared/components/Styles';\nimport { DropdownMenu, Clickable, Icon } from 'shared/components';\nimport { BID_REQUEST_STATUS } from '__graphql__/globalTypes';\nimport routes from 'shared/constants/routes';\n\nimport { AdminBidRequests_adminBidRequests_bidRequests } from './__graphql__/AdminBidRequests';\n\ninterface DropdownProps {\n  bidRequest: AdminBidRequests_adminBidRequests_bidRequests;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({ bidRequest }) => {\n  const { t } = useTranslation('admin');\n  return (\n    <DropdownMenuWrapper>\n      <DropdownMenu.Container\n        renderTrigger={({ isTriggered, toggleTrigger }) => (\n          <Clickable\n            onClick={toggleTrigger}\n            disabled={bidRequest.status === BID_REQUEST_STATUS.pendingInvite}\n          >\n            <Icon type={isTriggered ? 'chevron-up' : 'chevron-down'} size={18} />\n          </Clickable>\n        )}\n      >\n        <DropdownMenu.Action\n          forwardedAs={NavLink}\n          to={routes.bidRequest(bidRequest.id)}\n          data-cy-link-name={bidRequest.id}\n          target=\"_blank\"\n        >\n          {t('viewAsSubcontractor')}\n        </DropdownMenu.Action>\n      </DropdownMenu.Container>\n    </DropdownMenuWrapper>\n  );\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { TABLE_ITEMS_PER_PAGE, SortDirection } from 'shared/constants';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { PageLoader, QueryErrors, Table, Cell } from 'shared/components';\nimport { TableSearch } from 'shared/components/Styles';\nimport { BidRequestStatusTag } from 'shared/components/TagStyles';\n\nimport { queryAdminBidRequests } from './api';\nimport Dropdown from './Dropdown';\nimport { AdminBidRequests as AdminBidRequestsData } from './__graphql__/AdminBidRequests';\n\nconst AdminBidRequests: React.FC = () => {\n  const { t } = useTranslation('admin');\n\n  const { error, ...queryResults } = useQuery<AdminBidRequestsData>(queryAdminBidRequests, {\n    variables: {\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'projectName',\n      sortDirection: SortDirection.asc,\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const {\n    refetch,\n    variables,\n    data: {\n      adminBidRequests: { bidRequests, totalRecords },\n    },\n  } = queryResults;\n\n  return (\n    <>\n      <TableSearch onChange={(search: string) => refetch({ query: search || undefined })} />\n      <Table\n        columns={[\n          { label: t('bidRequestTableHeader.project'), sortField: 'projectName' },\n          { label: t('bidRequestTableHeader.bidPackage'), sortField: 'bidPackageName' },\n          { label: t('bidRequestTableHeader.subcontractor'), sortField: 'subcontractorName' },\n          { label: t('request.status') },\n          { fixedWidth: 50 },\n        ]}\n        rows={bidRequests.map(bidRequest => {\n          const {\n            id: bidRequestId,\n            status,\n            bidPackage: {\n              name: bidPackageName,\n              project: { name: projectName },\n            },\n            subcontractor: { name: subcontractorName },\n          } = bidRequest;\n          return (\n            <Table.Row rowId={bidRequestId}>\n              <Cell.Text>{projectName}</Cell.Text>\n              <Cell.Text>{bidPackageName}</Cell.Text>\n              <Cell.Text>{subcontractorName}</Cell.Text>\n              <BidRequestStatusTag inList status={status}>\n                {t(`request.${status}`)}\n              </BidRequestStatusTag>\n              <Dropdown bidRequest={bidRequest} />\n            </Table.Row>\n          );\n        })}\n        totalRecords={totalRecords}\n        refetch={refetch}\n        variables={variables}\n      />\n    </>\n  );\n};\n\nexport default AdminBidRequests;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { HtmlHeadTags, Tabs, Page } from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\n\nimport Companies from './Companies';\nimport Users from './Users';\nimport BidRequests from './BidRequests';\n\nconst Admin = () => {\n  const { t } = useTranslation('admin');\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"adminPanel\" />\n      <HeadingLarge>{t('adminPanel')}</HeadingLarge>\n      <Tabs.Container>\n        <Tabs.Links>\n          <Tabs.Link isDefault to=\"companies\">\n            {t('companies')}\n          </Tabs.Link>\n          <Tabs.Link to=\"users\">{t('users')}</Tabs.Link>\n          <Tabs.Link to=\"bid-requests\">{t('bidRequests')}</Tabs.Link>\n        </Tabs.Links>\n        <Tabs.Content>\n          <Tabs.Route path=\"companies\" component={Companies} />\n          <Tabs.Route path=\"users\" component={Users} />\n          <Tabs.Route path=\"bid-requests\" component={BidRequests} />\n        </Tabs.Content>\n      </Tabs.Container>\n    </Page>\n  );\n};\n\nexport default Admin;\n","import gql from 'graphql-tag';\n\nexport const mutationUpdateProfile = gql`\n  mutation UpdateMe($input: UserInput!) {\n    updateMe(input: $input) {\n      id\n      email\n      firstName\n      lastName\n      jobTitle\n      phone\n      fax\n    }\n  }\n`;\n\nexport const mutationUpdatePassword = gql`\n  mutation UpdatePassword($currentPassword: String!, $newPassword: String!) {\n    updatePassword(currentPassword: $currentPassword, newPassword: $newPassword)\n  }\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { Form, Field, Button } from 'shared/components';\nimport { CurrentUserQuery } from 'shared/utils/queries';\n\nimport { mutationUpdateProfile } from './api';\n\ninterface Props {\n  currentUser: CurrentUserQuery['me'];\n}\n\ninterface FormValues {\n  firstName: string;\n  lastName: string;\n  email: string;\n  jobTitle: string;\n  phone: string;\n  fax: string;\n}\n\nconst ProfilePersonal: React.FC<Props> = ({ currentUser }) => {\n  const { t } = useTranslation('profile');\n  const [updateProfile, { loading: mutating }] = useMutation(mutationUpdateProfile);\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        firstName: currentUser.firstName || '',\n        lastName: currentUser.lastName || '',\n        email: currentUser.email || '',\n        jobTitle: currentUser.jobTitle || '',\n        phone: currentUser.phone || '',\n        fax: currentUser.fax || '',\n      }}\n      validations={{\n        firstName: [Form.is.required(), Form.is.maxLength(100)],\n        lastName: [Form.is.required(), Form.is.maxLength(100)],\n        email: [Form.is.required(), Form.is.maxLength(200), Form.is.email()],\n        jobTitle: [Form.is.maxLength(100)],\n        phone: [Form.is.maxLength(100)],\n        fax: [Form.is.maxLength(100)],\n      }}\n      onSubmit={values =>\n        updateProfile({ variables: { input: values } }).then(() => {\n          toast.success(t('updated'));\n        }, toast.error)\n      }\n    >\n      <Form.Element style={{ maxWidth: 500 }}>\n        <Field.Input required name=\"firstName\" label={t('user.firstName')} />\n        <Field.Input required name=\"lastName\" label={t('user.lastName')} />\n        <Field.Input required name=\"email\" label={t('user.email')} />\n        <Field.Input name=\"jobTitle\" label={t('user.jobTitle')} />\n        <Field.Input name=\"phone\" label={t('user.phone')} />\n        <Field.Input name=\"fax\" label={t('user.fax')} />\n        <Form.RequiredFieldsNote />\n        <Button type=\"submit\" working={mutating}>\n          {t('save')}\n        </Button>\n      </Form.Element>\n    </Form>\n  );\n};\n\nexport default ProfilePersonal;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { Form, Field, Button } from 'shared/components';\n\nimport { mutationUpdatePassword } from './api';\n\ninterface FormValues {\n  currentPassword: string;\n  newPassword: string;\n}\n\nconst ProfilePassword: React.FC<{}> = () => {\n  const { t } = useTranslation('profile');\n  const [updatePassword, { loading: mutating }] = useMutation(mutationUpdatePassword);\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        currentPassword: '',\n        newPassword: '',\n      }}\n      validations={{\n        currentPassword: Form.is.required(),\n        newPassword: [Form.is.required(), Form.is.maxLength(250)],\n      }}\n      onSubmit={(values, { resetForm }) =>\n        updatePassword({ variables: values }).then(() => {\n          resetForm();\n          toast.success(t('passwordUpdated'));\n        }, toast.error)\n      }\n    >\n      <Form.Element style={{ maxWidth: 500 }}>\n        <Field.Input name=\"currentPassword\" label={t('currentPassword')} type=\"password\" />\n        <Field.Input name=\"newPassword\" label={t('newPassword')} type=\"password\" />\n        <Button type=\"submit\" working={mutating}>\n          {t('updatePassword')}\n        </Button>\n      </Form.Element>\n    </Form>\n  );\n};\n\nexport default ProfilePassword;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { Tabs, HtmlHeadTags, PageLoader, QueryErrors, Page } from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\nimport { queryCurrentUser, CurrentUserQuery } from 'shared/utils/queries';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport Personal from './Personal';\nimport Password from './Password';\n\nconst Profile: React.FC<void> = () => {\n  const { t } = useTranslation('profile');\n\n  const { error, ...queryResults } = useQuery<CurrentUserQuery>(queryCurrentUser);\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"account\" />\n      <HeadingLarge>{t('myAccount')}</HeadingLarge>\n      <Tabs.Container>\n        <Tabs.Links>\n          <Tabs.Link to=\"personal\" isDefault>\n            {t('personalInfo')}\n          </Tabs.Link>\n          <Tabs.Link to=\"password\">{t('password')}</Tabs.Link>\n        </Tabs.Links>\n        <Tabs.Content>\n          <Tabs.Route\n            path=\"personal\"\n            render={() => <Personal currentUser={queryResults.data.me} />}\n          />\n          <Tabs.Route path=\"password\" render={() => <Password />} />\n        </Tabs.Content>\n      </Tabs.Container>\n    </Page>\n  );\n};\n\nexport default Profile;\n","import gql from 'graphql-tag';\n\nimport { fragmentUsersTableDropdown } from 'shared/components/UsersTableDropdown';\n\nexport const queryUsers = gql`\n  query Users(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    users(\n      query: $query\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      users {\n        id\n        email\n        firstName\n        lastName\n        jobTitle\n        type\n        status\n        ...UsersTableDropdown_user\n      }\n      totalRecords\n    }\n  }\n  ${fragmentUsersTableDropdown}\n`;\n\nexport const queryCompany = gql`\n  query Company {\n    company {\n      name\n      id\n    }\n  }\n`;\n\nexport const mutationUpdateCompany = gql`\n  mutation UpdateCompany($id: ID!, $input: CompanyInput!) {\n    updateCompany(id: $id, input: $input) {\n      name\n    }\n  }\n`;\n\nexport const mutationInviteUsers = gql`\n  mutation InviteUsers($users: [UserToInviteInput!]!) {\n    inviteUsers(users: $users)\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport {\n  Button,\n  Table,\n  Cell,\n  PageLoader,\n  QueryErrors,\n  UsersTableDropdown,\n} from 'shared/components';\nimport { SpaceBetween, TableSearch } from 'shared/components/Styles';\nimport { UserStatusTag } from 'shared/components/TagStyles';\nimport UsersInviteModal from 'shared/components/UsersInviteModal';\nimport { nullString, TABLE_ITEMS_PER_PAGE } from 'shared/constants';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport { queryCurrentUser } from 'shared/utils/queries';\nimport { CurrentUser } from 'shared/utils/__graphql__/CurrentUser';\nimport toast from 'shared/utils/toast';\nimport { SortDirection } from '__graphql__/globalTypes';\n\nimport { queryUsers, mutationInviteUsers } from './api';\nimport { InviteUsers } from './__graphql__/InviteUsers';\nimport { Users } from './__graphql__/Users';\n\nconst formatUserName = (firstName: null | string = nullString, lastName: null | string) =>\n  [firstName, lastName].filter(Boolean).join(' ');\n\nconst CompanyUsers = () => {\n  const { t } = useTranslation('company');\n\n  // For components that have multiple useQuery hooks, we have to use the\n  // no-cache fetch policy, otherwise errors are not handled correctly.\n  // We do not know the reason for this issue.\n\n  const currentUserRequest = useQuery<CurrentUser>(queryCurrentUser, {\n    fetchPolicy: 'no-cache',\n  });\n\n  const usersRequest = useQuery<Users>(queryUsers, {\n    variables: {\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'name',\n      sortDirection: SortDirection.ASC,\n    },\n    fetchPolicy: 'no-cache',\n  });\n\n  const [inviteUsers, { loading: inviteUsersMutating }] = useMutation<InviteUsers>(\n    mutationInviteUsers,\n    {\n      refetchQueries: () => ['Users'],\n      awaitRefetchQueries: true,\n    },\n  );\n\n  for (const error of [currentUserRequest.error, usersRequest.error]) {\n    if (error) return <QueryErrors error={error} />;\n  }\n\n  if (!isDoneLoading(currentUserRequest) || !isDoneLoading(usersRequest)) {\n    return <PageLoader />;\n  }\n\n  const { data, refetch, variables } = usersRequest;\n\n  return (\n    <>\n      <SpaceBetween>\n        <TableSearch onChange={search => refetch({ query: search })} />\n        <UsersInviteModal\n          loading={inviteUsersMutating}\n          renderLink={modal => (\n            <Button onClick={modal.open} data-cy-button-name=\"inviteUsers\">\n              {t('inviteUsers')}\n            </Button>\n          )}\n          onSubmit={({ users }, confirm) => {\n            inviteUsers({ variables: { users } }).then(() => {\n              toast.success(t('invitationsSent'));\n              confirm();\n            }, toast.error);\n          }}\n        />\n      </SpaceBetween>\n      <Table\n        columns={[\n          { label: t('user.name'), sortField: 'name' },\n          { label: t('user.jobTitle'), sortField: 'jobTitle' },\n          { label: t('user.email') },\n          { label: t('user.type') },\n          { label: t('user.status') },\n          { fixedWidth: 50 },\n        ]}\n        rows={data.users.users.map(user => (\n          <Table.Row rowId={user.id}>\n            <Cell.Text>{formatUserName(user.firstName, user.lastName)}</Cell.Text>\n            <Cell.Text>{user.jobTitle || nullString}</Cell.Text>\n            <Cell.Text>{user.email}</Cell.Text>\n            <Cell.Text>{t(`user.${user.type}`)}</Cell.Text>\n            <UserStatusTag inList status={user.status}>\n              {t(`userStatus.${user.status}`)}\n            </UserStatusTag>\n            <UsersTableDropdown\n              isCurrentUser={currentUserRequest.data.me.id === user.id}\n              user={user}\n            />\n          </Table.Row>\n        ))}\n        totalRecords={data.users.totalRecords}\n        refetch={refetch}\n        variables={variables}\n      />\n    </>\n  );\n};\n\nexport default CompanyUsers;\n","import gql from 'graphql-tag';\n\nexport const queryOffices = gql`\n  query OfficesForIndex(\n    $query: String\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String\n    $sortDirection: SortDirection\n  ) {\n    offices(\n      query: $query\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      offices {\n        id\n        name\n        logoKey\n        email\n        phone\n        fax\n        website\n        street\n        postalCode\n        city\n        countryCode\n      }\n      totalRecords\n    }\n  }\n`;\n\nexport const mutationCreateOffice = gql`\n  mutation CreateOffice($input: OfficeInput!) {\n    createOffice(input: $input) {\n      id\n    }\n  }\n`;\n\nexport const mutationUpdateOffice = gql`\n  mutation UpdateOffice($id: ID!, $input: OfficeInput!) {\n    updateOffice(id: $id, input: $input) {\n      id\n    }\n  }\n`;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport toast from 'shared/utils/toast';\nimport { Form, Field, ModalFormBody } from 'shared/components';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { countryCodes, FormTypes } from 'shared/constants';\n\nimport { mutationUpdateOffice, mutationCreateOffice } from './api';\nimport { OfficesForIndex_offices_offices } from './__graphql__/OfficesForIndex';\n\ninterface Props {\n  type: FormTypes;\n  office?: OfficesForIndex_offices_offices;\n  closeModal: () => void;\n}\n\ninterface FormValues {\n  name: string;\n  logoKey: string | null;\n  email: string;\n  phone: string;\n  fax: string;\n  website: string;\n  street: string;\n  postalCode: string;\n  city: string;\n  countryCode: string;\n}\n\nconst OfficesForm: React.FC<Props> = ({ type, office = {}, closeModal }) => {\n  const { t } = useTranslation('company');\n\n  const [createOrUpdateOffice, { loading: mutating }] = useMutation(\n    type === FormTypes.edit ? mutationUpdateOffice : mutationCreateOffice,\n    {\n      refetchQueries: () => ['OfficesForIndex', 'OfficesForProjectForm'],\n      awaitRefetchQueries: true,\n    },\n  );\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        name: office.name || '',\n        logoKey: office.logoKey || null,\n        email: office.email || '',\n        phone: office.phone || '',\n        fax: office.fax || '',\n        website: office.website || '',\n        street: office.street || '',\n        postalCode: office.postalCode || '',\n        city: office.city || '',\n        countryCode: office.countryCode || '',\n      }}\n      validations={{\n        name: [Form.is.required(), Form.is.maxLength(100)],\n        email: Form.is.email(),\n      }}\n      onSubmit={async (values, form) => {\n        await createOrUpdateOffice({ variables: { id: office.id, input: values } })\n          .then(() => {\n            toast.success(t(type === FormTypes.edit ? 'officeUpdated' : 'officeCreated'));\n            closeModal();\n          }, toast.error)\n          .then(() => form.setSubmitting(false));\n      }}\n    >\n      <ModalFormBody close={closeModal} working={mutating}>\n        <HeadingMedium>{t(type === FormTypes.edit ? 'editOffice' : 'newOffice')}</HeadingMedium>\n        <Field.Input required name=\"name\" label={t('office.name')} />\n        <Field.Input name=\"email\" label={t('office.email')} type=\"email\" />\n        <Field.Input name=\"phone\" label={t('office.phone')} />\n        <Field.Input name=\"fax\" label={t('office.fax')} />\n        <Field.Input name=\"website\" label={t('office.website')} />\n        <Field.Input name=\"street\" label={t('office.street')} />\n        <Field.Input name=\"postalCode\" label={t('office.postalCode')} />\n        <Field.Input name=\"city\" label={t('office.city')} />\n        <Field.SelectSingle\n          name=\"countryCode\"\n          label={t('office.country')}\n          options={countryCodes\n            .map(code => ({ value: code, label: t(`countries:${code}`) }))\n            .sort((country, otherCountry) => country.label.localeCompare(otherCountry.label))}\n        />\n        <Field.ImageUploader name=\"logoKey\" label={t('office.logo')} />\n        <Form.RequiredFieldsNote />\n      </ModalFormBody>\n    </Form>\n  );\n};\n\nexport default OfficesForm;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { SpaceBetween, TableSearch } from 'shared/components/Styles';\nimport { Table, Cell, PageLoader, QueryErrors, Icon, Button, Modal } from 'shared/components';\nimport { formatAddress } from 'shared/utils/address';\nimport { FormTypes, TABLE_ITEMS_PER_PAGE, MODAL_VARIANTS, SortDirection } from 'shared/constants';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport { queryOffices } from './api';\nimport Form from './Form';\nimport { OfficesForIndex } from './__graphql__/OfficesForIndex';\n\nconst Offices = () => {\n  const { t } = useTranslation('company');\n\n  const { error, ...queryResults } = useQuery<OfficesForIndex>(queryOffices, {\n    variables: {\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'name',\n      sortDirection: SortDirection.asc,\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data, refetch, variables } = queryResults;\n\n  return (\n    <>\n      <SpaceBetween>\n        <TableSearch onChange={search => refetch({ query: search })} />\n        <Modal\n          variant={MODAL_VARIANTS.aside}\n          renderContent={modal => <Form type={FormTypes.new} closeModal={modal.close} />}\n          renderLink={modal => (\n            <Button data-cy-button-name=\"new\" onClick={modal.open}>\n              {t('newOffice')}\n            </Button>\n          )}\n        />\n      </SpaceBetween>\n      <Table\n        columns={[\n          { label: t('office.name'), sortField: 'name', percentWidth: 30 },\n          { label: t('office.address') },\n          { fixedWidth: 50 },\n        ]}\n        rows={data.offices.offices.map(office => (\n          <Table.Row rowId={office.id}>\n            <Cell.Text>{office.name}</Cell.Text>\n            <Cell.Text>{formatAddress({ t, ...office }) || '–'}</Cell.Text>\n            <Cell.Icon>\n              <Modal\n                variant={MODAL_VARIANTS.aside}\n                renderContent={modal => (\n                  <Form type={FormTypes.edit} office={office} closeModal={modal.close} />\n                )}\n                renderLink={modal => <Icon type=\"edit\" onClick={modal.open} />}\n              />\n            </Cell.Icon>\n          </Table.Row>\n        ))}\n        totalRecords={data.offices.totalRecords}\n        refetch={refetch}\n        variables={variables}\n      />\n    </>\n  );\n};\n\nexport default Offices;\n","import React from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { Form, Field, Button } from 'shared/components';\nimport toast from 'shared/utils/toast';\n\nimport { mutationUpdateCompany } from './api';\nimport { Company_company } from './__graphql__/Company';\nimport { UpdateCompany, UpdateCompanyVariables } from './__graphql__/UpdateCompany';\n\ninterface Props {\n  company: Company_company;\n}\n\ninterface FormValues {\n  name: string;\n}\n\nconst CompanyProfile: React.FC<Props> = ({ company }) => {\n  const { t } = useTranslation('company');\n  const [updateCompany, { loading: mutating }] = useMutation<UpdateCompany, UpdateCompanyVariables>(\n    mutationUpdateCompany,\n    {\n      refetchQueries: () => ['Company'],\n      awaitRefetchQueries: true,\n    },\n  );\n\n  return (\n    <Form<FormValues>\n      initialValues={{\n        name: company.name,\n      }}\n      validations={{\n        name: [Form.is.required(), Form.is.maxLength(200)],\n      }}\n      onSubmit={async values => {\n        try {\n          await updateCompany({ variables: { id: company.id, input: values } });\n          toast.success(t('updated'));\n        } catch (error) {\n          toast.error(error);\n        }\n      }}\n    >\n      <Form.Element style={{ maxWidth: 350 }}>\n        <Field.Input name=\"name\" label={t('company.name')} />\n        <Button type=\"submit\" working={mutating}>\n          {t('save')}\n        </Button>\n      </Form.Element>\n    </Form>\n  );\n};\n\nexport default CompanyProfile;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { Tabs, HtmlHeadTags, PageLoader, QueryErrors, Page } from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\nimport { isDoneLoading } from 'shared/utils/apollo';\n\nimport Users from './Users';\nimport Offices from './Offices';\nimport CompanyProfile from './CompanyProfile';\nimport { queryCompany } from './api';\nimport { Company as CompanyQuery } from './__graphql__/Company';\n\nconst Company: React.FC<void> = () => {\n  const { t } = useTranslation('company');\n\n  const { error, ...queryResults } = useQuery<CompanyQuery>(queryCompany);\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const { data } = queryResults;\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"company\" />\n      <HeadingLarge>{`${t('company')}: ${data.company.name}`}</HeadingLarge>\n      <Tabs.Container>\n        <Tabs.Links>\n          <Tabs.Link to=\"profile\">{t('profile')}</Tabs.Link>\n          <Tabs.Link to=\"offices\">{t('offices')}</Tabs.Link>\n          <Tabs.Link to=\"users\" isDefault>\n            {t('users')}\n          </Tabs.Link>\n        </Tabs.Links>\n        <Tabs.Content>\n          <Tabs.Route path=\"profile\" render={() => <CompanyProfile company={data.company} />} />\n          <Tabs.Route path=\"offices\" render={() => <Offices />} />\n          <Tabs.Route path=\"users\" render={() => <Users />} />\n        </Tabs.Content>\n      </Tabs.Container>\n    </Page>\n  );\n};\n\nexport default Company;\n","import gql from 'graphql-tag';\n\nimport { fragmentBidModal } from 'shared/components/BidModal';\n\nexport const queryBidRequestsForAgent = gql`\n  query BidRequestsForAgent(\n    $offset: Int!\n    $limit: Int!\n    $sortBy: String!\n    $sortDirection: SortDirection!\n  ) {\n    bidRequestsForAgent(\n      offset: $offset\n      limit: $limit\n      sortBy: $sortBy\n      sortDirection: $sortDirection\n    ) {\n      totalRecords\n      bidRequests {\n        id\n        status\n        recipientUserId\n        ...BidModal_bidRequest\n        bidPackage {\n          id\n          name\n          bidsDueAt\n          project {\n            id\n            name\n            imageKey\n            location\n            customer\n            startsOn\n            endsOn\n            description\n            status\n            office {\n              id\n              name\n            }\n          }\n        }\n        currentBid {\n          id\n          message\n          totalAmount\n          submittedAt\n          ...BidModal_bid\n        }\n      }\n    }\n  }\n  ${fragmentBidModal}\n`;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Page,\n  HtmlHeadTags,\n  Table,\n  QueryErrors,\n  PageLoader,\n  Cell,\n  BidModal,\n  CurrencyFormatter,\n} from 'shared/components';\nimport { HeadingLarge } from 'shared/components/Styles';\nimport { BidRequestStatusTag } from 'shared/components/TagStyles';\nimport { nullString, TABLE_ITEMS_PER_PAGE } from 'shared/constants';\nimport { formatDateTime } from 'shared/utils/dateTime';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport routes from 'shared/constants/routes';\nimport { SortDirection } from '__graphql__/globalTypes';\n\nimport { queryBidRequestsForAgent } from './api';\nimport { BidRequestsForAgent } from './__graphql__/BidRequestsForAgent';\n\nfunction hasTotalAmount<T extends { totalAmount: number | null }>(\n  bid: T,\n): bid is NonNullable<T> & { totalAmount: number } {\n  return bid.totalAmount !== null;\n}\n\nconst BidRequests: React.FC<void> = () => {\n  const { t } = useTranslation('bidInvites');\n\n  const { error, ...queryResults } = useQuery<BidRequestsForAgent>(queryBidRequestsForAgent, {\n    variables: {\n      offset: 0,\n      limit: TABLE_ITEMS_PER_PAGE,\n      sortBy: 'createdAt',\n      sortDirection: SortDirection.ASC,\n    },\n  });\n\n  if (error) return <QueryErrors error={error} />;\n  if (!isDoneLoading(queryResults)) return <PageLoader />;\n\n  const {\n    bidRequestsForAgent: { bidRequests, totalRecords },\n  } = queryResults.data;\n\n  const { variables, refetch } = queryResults;\n\n  return (\n    <Page>\n      <HtmlHeadTags title=\"bidRequests\" />\n      <HeadingLarge>{t('requests.bidRequests')}</HeadingLarge>\n      <Table\n        columns={[\n          { label: t('requests.tableHeader.project') },\n          { label: t('requests.tableHeader.customer') },\n          { label: t('requests.tableHeader.bidsDueAt'), percentWidth: 20 },\n          { label: t('requests.tableHeader.status'), percentWidth: 15 },\n          { label: t('requests.tableHeader.currentBid'), percentWidth: 15 },\n        ]}\n        rows={bidRequests.map(bidRequest => {\n          const { currentBid } = bidRequest;\n          return (\n            <Table.Row rowId={bidRequest.id}>\n              <Cell.Link to={routes.bidRequest(bidRequest.id)}>\n                {bidRequest.bidPackage.project.name}\n              </Cell.Link>\n              <Cell.Text>{bidRequest.bidPackage.project.office.name}</Cell.Text>\n              <Cell.Text>{formatDateTime(bidRequest.bidPackage.bidsDueAt)}</Cell.Text>\n              <BidRequestStatusTag inList status={bidRequest.status}>\n                {t(`request.${bidRequest.status}`)}\n              </BidRequestStatusTag>\n              {currentBid && hasTotalAmount(currentBid) ? (\n                <BidModal\n                  bid={currentBid}\n                  bidInvites={bidRequest.bidInvites}\n                  renderLink={modal => (\n                    <Cell.Link onClick={modal.open}>\n                      <CurrencyFormatter value={currentBid.totalAmount} />\n                    </Cell.Link>\n                  )}\n                />\n              ) : (\n                <Cell.Text>{nullString}</Cell.Text>\n              )}\n            </Table.Row>\n          );\n        })}\n        totalRecords={totalRecords}\n        refetch={refetch}\n        variables={variables}\n      />\n    </Page>\n  );\n};\n\nexport default BidRequests;\n","import gql from 'graphql-tag';\n\nimport { fragmentBidModal } from 'shared/components/BidModal';\nimport { fragmentBidFormModal } from 'shared/components/BidFormModal';\nimport { fragmentBidsList } from 'shared/components/BidsList';\nimport { fragmentMessages } from 'shared/components/Messages';\n\nexport const queryBidRequestForSubcontractor = gql`\n  query BidRequestForSubcontractor($bidRequestId: ID!) {\n    bidRequestForSubcontractor(mysteriousId: $bidRequestId) {\n      id\n      status\n      declinedReason\n      currentBidId\n      ...BidModal_bidRequest\n      ...BidFormModal_bidRequest\n      ...BidsList_bidsList\n      currentBid {\n        totalAmount\n      }\n      bids {\n        id\n        message\n        totalAmount\n        submittedAt\n        ...BidModal_bid\n        ...BidFormModal_bid\n      }\n      bidPackage {\n        id\n        name\n        bidsDueAt\n        startsOn\n        endsOn\n        status\n        description\n        project {\n          id\n          name\n          location\n          customer\n          startsOn\n          endsOn\n          description\n          status\n          forceSubcontractorSignup\n          imageKey\n          office {\n            id\n            name\n            logoKey\n            email\n            website\n            phone\n            fax\n            street\n            postalCode\n            city\n            countryCode\n            company {\n              id\n              name\n            }\n          }\n          projectUsers {\n            id\n            user {\n              id\n              firstName\n              lastName\n              email\n              phone\n              fax\n              jobTitle\n            }\n            userRole\n          }\n          primaryUser {\n            id\n          }\n        }\n      }\n    }\n  }\n  ${fragmentBidModal}\n  ${fragmentBidFormModal}\n  ${fragmentBidsList}\n`;\n\nexport const queryMessageThreadsInBidRequest = gql`\n  query MessageThreadsInBidRequest($bidRequestId: ID!) {\n    messageThreadsInBidRequest(bidRequestId: $bidRequestId) {\n      messageThreads {\n        ...Messages_messageThread\n      }\n    }\n  }\n  ${fragmentMessages}\n`;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport { ExternalLink } from 'shared/components';\n\nexport const Name = styled.div`\n  ${font.medium}\n  ${font.size(17)}\n`;\n\nexport const Role = styled.div`\n  margin: 5px 0;\n  color: ${COLOR.textDark};\n  ${font.size(14)};\n`;\n\nexport const ContactInfoItems = styled.div`\n  padding-top: 5px;\n`;\n\nexport const ContactInfoItem = styled.div`\n  padding: 2px 0;\n  color: ${COLOR.textDark};\n  ${font.size(14)};\n`;\n\nexport const Anchor = styled(ExternalLink)`\n  display: inline-block;\n  position: relative;\n  top: -3px;\n  padding-left: 3px;\n  ${font.size(14)};\n`;\n\nexport const ProjectContacts = styled.div`\n  margin-top: -20px;\n`;\n\nexport const ProjectContact = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding-top: 25px;\n`;\n\nexport const ContactInfo = styled.div`\n  margin-top: -5px;\n  padding-left: 13px;\n`;\n","import React from 'react';\n\nimport { Avatar, Icon } from 'shared/components';\n\nimport {\n  Name,\n  Role,\n  ContactInfoItem,\n  ContactInfoItems,\n  Anchor,\n  ProjectContacts,\n  ProjectContact,\n  ContactInfo,\n} from './Contacts.styles';\nimport { BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage_project_projectUsers } from './__graphql__/BidRequestForSubcontractor';\n\ninterface ContactsInput {\n  contacts: BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage_project_projectUsers[];\n}\n\nexport const Contacts = ({ contacts }: ContactsInput) => (\n  <ProjectContacts>\n    {contacts.map(({ user: { firstName, lastName, email, phone, fax }, userRole: role }, i) => (\n      <ProjectContact key={i}>\n        <Avatar name={`${firstName} ${lastName}`} size={36} />\n        <ContactInfo>\n          <Name>{`${firstName} ${lastName}`}</Name>\n          <Role>{role}</Role>\n          <ContactInfoItems>\n            <ContactInfoItem>\n              <Icon type=\"email\" /> <Anchor to={`mailto:${email}`}>{email}</Anchor>\n            </ContactInfoItem>\n            {phone && (\n              <ContactInfoItem>\n                <Icon type=\"phone\" /> <Anchor to={`tel:${phone}`}>{phone}</Anchor>\n              </ContactInfoItem>\n            )}\n            {fax && (\n              <ContactInfoItem>\n                <Icon type=\"printer\" /> <Anchor to={`tel:${fax}`}>{fax}</Anchor>\n              </ContactInfoItem>\n            )}\n          </ContactInfoItems>\n        </ContactInfo>\n      </ProjectContact>\n    ))}\n  </ProjectContacts>\n);\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font } from 'shared/utils/styles';\nimport { ExternalLink } from 'shared/components';\n\nexport const Name = styled.div`\n  padding-bottom: 15px;\n  ${font.medium}\n  ${font.size(17)}\n`;\n\nexport const Text = styled.div`\n  padding: 2px 0;\n  color: ${COLOR.textDark};\n  ${font.size(14)};\n`;\n\nexport const Anchor = styled(ExternalLink)`\n  ${font.size(14)};\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage_project_office } from './__graphql__/BidRequestForSubcontractor';\nimport { Name, Text, Anchor } from './CustomerInfo.styles';\n\ntype Props = BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage_project_office;\n\nconst CustomerInfo: React.FC<Props> = ({\n  name,\n  street,\n  postalCode,\n  city,\n  countryCode,\n  email,\n  phone,\n  fax,\n  website,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <Name>{name}</Name>\n      {street && <Text>{street}</Text>}\n      {(postalCode || city) && <Text>{[postalCode, city].join(' ')}</Text>}\n      {countryCode && <Text>{t(`countries:${countryCode}`)}</Text>}\n      <br />\n      {email && (\n        <Text>\n          {`${t('companyInfo.email')}: `}\n          <Anchor to={`mailto:${email}`}>{email}</Anchor>\n        </Text>\n      )}\n      {phone && (\n        <Text>\n          {`${t('companyInfo.phone')}: `}\n          <Anchor to={`tel:${phone}`}>{phone}</Anchor>\n        </Text>\n      )}\n      {fax && (\n        <Text>\n          {`${t('companyInfo.fax')}: `}\n          <Anchor to={`tel:${fax}`}>{fax}</Anchor>\n        </Text>\n      )}\n      {website && (\n        <Text>\n          {`${t('companyInfo.website')}: `}\n          <Anchor to={website}>{website}</Anchor>\n        </Text>\n      )}\n    </>\n  );\n};\n\nexport default CustomerInfo;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mediaQueries } from 'shared/utils/styles';\nimport { SectionTitle } from 'shared/components/Styles';\n\nexport const OverviewWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Left = styled.div`\n  @media ${mediaQueries.desktop} {\n    width: 70%;\n    padding-right: 40px;\n  }\n`;\n\nexport const Right = styled.div`\n  width: 30%;\n  padding-left: 30px;\n  border-left: 1px solid ${COLOR.borderLight};\n`;\n\nexport const Image = styled.img`\n  display: block;\n  margin-top: 45px;\n  width: 100%;\n  border-radius: 4px;\n`;\n\nexport const InfoItem = styled.div`\n  @media ${mediaQueries.mobile} {\n    margin-bottom: 15px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    display: inline-block;\n    padding-right: 40px;\n  }\n`;\n\nexport const InfoLabel = styled.div`\n  padding-bottom: 10px;\n  color: ${COLOR.textMedium};\n  ${font.size(13)}\n`;\n\nexport const InfoValue = styled.div`\n  ${font.size(17)}\n`;\n\nexport const Description = styled.p`\n  max-width: 600px;\n  white-space: pre-wrap;\n  color: ${COLOR.textDark};\n  ${font.size(14)}\n`;\n\nexport const StyledSectionTitle = styled(SectionTitle)`\n  &:first-child {\n    padding-top: 6px;\n  }\n`;\n\nexport const CustomerLogo = styled.img`\n  margin-bottom: 15px;\n  height: 65px;\n  border-radius: 4px;\n`;\n","import React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { getImageUrl, IMAGE_TYPE } from 'shared/utils/images';\nimport { formatDate, formatDateTime } from 'shared/utils/dateTime';\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\n\nimport { Contacts } from './Contacts';\nimport CustomerInfo from './CustomerInfo';\nimport {\n  OverviewWrapper,\n  Left,\n  Right,\n  Image,\n  InfoItem,\n  InfoLabel,\n  InfoValue,\n  Description,\n  StyledSectionTitle,\n  CustomerLogo,\n} from './Overview.styles';\nimport {\n  BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage,\n  BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage_project_projectUsers,\n} from './__graphql__/BidRequestForSubcontractor';\n\ninterface Props {\n  bidPackage: BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage;\n}\n\ntype ProjectUser = BidRequestForSubcontractor_bidRequestForSubcontractor_bidPackage_project_projectUsers;\n\nconst Overview: React.FC<Props> = ({ bidPackage }) => {\n  const { primaryUser, projectUsers, ...project } = bidPackage.project;\n\n  const primaryUserWithRole = (projectUsers || []).find(user => user?.id === primaryUser.id);\n  const secondaryUsers = (projectUsers || []).filter(user => user?.id !== primaryUser.id);\n\n  const projectContacts = [\n    primaryUserWithRole,\n    ...secondaryUsers,\n  ].filter((user): user is ProjectUser => Boolean(user));\n\n  const { startsOn, endsOn } = startsAndEndsOn(bidPackage, project);\n  const { isMobile, isDesktop } = useContext(QueryMatchesContext);\n  const { t } = useTranslation('bidInvites');\n\n  const customerSection = (\n    <>\n      <StyledSectionTitle>{t('overview.customer')}</StyledSectionTitle>\n      {project.office.logoKey && (\n        <CustomerLogo\n          src={getImageUrl(project.office.logoKey, IMAGE_TYPE.logo)}\n          alt={project.office.name}\n        />\n      )}\n      <CustomerInfo {...project.office} />\n      <StyledSectionTitle>{t('overview.contactPersons')}</StyledSectionTitle>\n      <Contacts contacts={projectContacts} />\n      {project.imageKey && (\n        <Image src={getImageUrl(project.imageKey, IMAGE_TYPE.project)} alt={project.name} />\n      )}\n    </>\n  );\n\n  return (\n    <OverviewWrapper>\n      <Left>\n        {isMobile && customerSection}\n        <StyledSectionTitle>{t('overview.importantDates')}</StyledSectionTitle>\n        <InfoItem>\n          <InfoLabel>{t('overview.bidsDue')}</InfoLabel>\n          <InfoValue>{formatDateTime(bidPackage.bidsDueAt)}</InfoValue>\n        </InfoItem>\n        {startsOn && (\n          <InfoItem>\n            <InfoLabel>{t('overview.expectedStart')}</InfoLabel>\n            <InfoValue>{startsOn}</InfoValue>\n          </InfoItem>\n        )}\n        {endsOn && (\n          <InfoItem>\n            <InfoLabel>{t('overview.expectedFinish')}</InfoLabel>\n            <InfoValue>{endsOn}</InfoValue>\n          </InfoItem>\n        )}\n        <StyledSectionTitle>{t('overview.projectDetails')}</StyledSectionTitle>\n        <InfoItem>\n          <InfoLabel>{t('overview.siteLocation')}</InfoLabel>\n          <InfoValue>{project.location}</InfoValue>\n        </InfoItem>\n        {project.customer && (\n          <InfoItem>\n            <InfoLabel>{t('overview.owner')}</InfoLabel>\n            <InfoValue>{project.customer}</InfoValue>\n          </InfoItem>\n        )}\n        <StyledSectionTitle>{t('overview.projectDescription')}</StyledSectionTitle>\n        <Description>{project.description}</Description>\n        <StyledSectionTitle>{t('overview.bidPackageDescription')}</StyledSectionTitle>\n        <Description>{bidPackage.description}</Description>\n      </Left>\n      {isDesktop && <Right>{customerSection}</Right>}\n    </OverviewWrapper>\n  );\n};\n\nconst startsAndEndsOn = (\n  bidPackage: { startsOn: string | null; endsOn: string | null },\n  project: { startsOn: string | null; endsOn: string | null },\n) => {\n  if (bidPackage.startsOn || bidPackage.endsOn) {\n    return {\n      startsOn: formatDate(bidPackage.startsOn || ''),\n      endsOn: formatDate(bidPackage.endsOn || ''),\n    };\n  }\n  if (project.startsOn || project.endsOn) {\n    return {\n      startsOn: formatDate(project.startsOn || ''),\n      endsOn: formatDate(project.endsOn || ''),\n    };\n  }\n  return { startsOn: null, endsOn: null };\n};\n\nexport default Overview;\n","import styled from 'styled-components/macro';\n\nimport { font, mediaQueries } from 'shared/utils/styles';\nimport { HeadingLarge } from 'shared/components/Styles';\n\nexport const Header = styled.div`\n  display: flex;\n  margin-bottom: 30px;\n\n  @media ${mediaQueries.mobile} {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  @media ${mediaQueries.desktop} {\n    align-items: flex-end;\n    justify-content: space-between;\n    margin-top: 20px;\n  }\n`;\n\nexport const ProjectName = styled(HeadingLarge)`\n  padding-top: 0;\n  padding-bottom: 15px;\n\n  @media ${mediaQueries.mobile} {\n    text-align: center;\n  }\n`;\n\nexport const BidPackageName = styled.div`\n  ${font.regular}\n  ${font.size(20)}\n\n  @media ${mediaQueries.mobile} {\n    margin-bottom: 30px;\n    text-align: center;\n  }\n`;\n","import styled from 'styled-components/macro';\n\nexport const DeclinedReasonAsk = styled.div`\n  padding-bottom: 35px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMutation } from '@apollo/react-hooks';\n\nimport toast from 'shared/utils/toast';\nimport { Form, Field, ModalFormBody, Modal } from 'shared/components';\nimport { ModalProps } from 'shared/components/Modal';\nimport { HeadingMedium } from 'shared/components/Styles';\nimport { MODAL_VARIANTS } from 'shared/constants';\nimport { mutationUpdateBidRequestDeclinedReasonBySubcontractor } from 'shared/utils/queries';\nimport {\n  mutationUpdateBidRequestDeclinedReasonVariables,\n  mutationUpdateBidRequestDeclinedReason,\n} from 'shared/utils/__graphql__/mutationUpdateBidRequestDeclinedReason';\n\nimport { DeclinedReasonAsk } from './DeclinedReasonForm.styles';\nimport { BidRequestForSubcontractor_bidRequestForSubcontractor } from './__graphql__/BidRequestForSubcontractor';\n\ninterface Props {\n  renderLink: NonNullable<ModalProps['renderLink']>;\n  bidRequest: BidRequestForSubcontractor_bidRequestForSubcontractor;\n  onSubmit: () => Promise<void>;\n}\n\nconst DeclinedReasonForm: React.FC<Props> = ({ renderLink, bidRequest, onSubmit }) => {\n  const { t } = useTranslation('bidInvites');\n  const [mutateDeclinedReason, { loading }] = useMutation<\n    mutationUpdateBidRequestDeclinedReason,\n    mutationUpdateBidRequestDeclinedReasonVariables\n  >(mutationUpdateBidRequestDeclinedReasonBySubcontractor, {\n    refetchQueries: () => ['BidRequestForSubcontractor'],\n    awaitRefetchQueries: true,\n  });\n\n  return (\n    <Modal\n      renderLink={modal => renderLink(modal)}\n      variant={MODAL_VARIANTS.center}\n      renderContent={modal => (\n        <Form<{ declinedReason: string }>\n          initialValues={{\n            declinedReason: bidRequest.declinedReason || '',\n          }}\n          onSubmit={async ({ declinedReason }) => {\n            try {\n              await mutateDeclinedReason({ variables: { id: bidRequest.id, declinedReason } });\n              toast.success(t('overview.declinedReasonSuccess'));\n              await onSubmit();\n            } catch (error) {\n              toast.error(error);\n            }\n            modal.close();\n          }}\n        >\n          <ModalFormBody useFullPageHeight={false} working={loading} close={modal.close}>\n            <HeadingMedium>{t('overview.declinedReasonHeader')}</HeadingMedium>\n            <DeclinedReasonAsk>{t('overview.declinedReasonAsk')}</DeclinedReasonAsk>\n            <Field.Textarea name=\"declinedReason\" />\n          </ModalFormBody>\n        </Form>\n      )}\n    />\n  );\n};\n\nexport default DeclinedReasonForm;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mediaQueries } from 'shared/utils/styles';\nimport { PageContent } from 'shared/components/Page';\nimport { Button, Icon, ClickableText } from 'shared/components';\nimport { ProjectClosedMessage } from 'shared/components/Styles';\n\nexport const ActionsBar = styled.div`\n  background: ${COLOR.backgroundLight};\n`;\n\nexport const ActionsContent = styled(PageContent)`\n  min-height: 80px;\n  padding-top: 20px !important;\n  padding-bottom: 20px !important;\n\n  h3 {\n    ${font.bold}\n    ${font.size(16)}\n\n    @media ${mediaQueries.desktop} {\n      margin-right: 30px;\n    }\n  }\n\n  @media ${mediaQueries.mobile} {\n    text-align: center;\n  }\n\n  @media ${mediaQueries.desktop} {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nexport const StyledProjectClosedMessage = styled(ProjectClosedMessage)`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const DecisionButton = styled(Button)`\n  margin: 0 12px 0 0;\n\n  @media ${mediaQueries.mobile} {\n    display: block;\n    width: 100%;\n    margin-top: 12px;\n  }\n`;\n\nexport const ChangeFeedbackButton = styled(ClickableText)`\n  @media ${mediaQueries.mobile} {\n    margin-top: 12px;\n  }\n`;\n\nexport const DecisionIcon = styled(Icon)`\n  height: 28px;\n  margin-right: 15px;\n  color: ${COLOR.textDark};\n\n  @media ${mediaQueries.mobile} {\n    margin-bottom: 15px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useTranslation } from 'react-i18next';\n\nimport { BID_REQUEST_STATUS, PROJECT_STATUS, BID_PACKAGE_STATUS } from '__graphql__/globalTypes';\nimport toast from 'shared/utils/toast';\nimport { mutationUpdateBidRequestStatusBySubcontractor } from 'shared/utils/queries';\nimport {\n  UpdateBidRequestStatusBySubcontractor,\n  UpdateBidRequestStatusBySubcontractorVariables,\n} from 'shared/utils/__graphql__/UpdateBidRequestStatusBySubcontractor';\nimport useQueryParamInitialAction from 'shared/hooks/useQueryParamInitialAction';\n\nimport DeclinedReasonForm from './DeclinedReasonForm';\nimport {\n  ActionsBar,\n  ActionsContent,\n  StyledProjectClosedMessage,\n  ChangeFeedbackButton,\n  DecisionButton,\n  DecisionIcon,\n} from './Actions.styles';\nimport { BidRequestForSubcontractor_bidRequestForSubcontractor } from './__graphql__/BidRequestForSubcontractor';\n\ninterface Props {\n  bidRequest: BidRequestForSubcontractor_bidRequestForSubcontractor;\n}\n\nconst Actions: React.FC<Props> = ({ bidRequest }) => {\n  const { t } = useTranslation('bidInvites');\n  const [selectedStatus, setSelectedStatus] = useState<BID_REQUEST_STATUS | null>(\n    bidRequest.status,\n  );\n\n  const [mutateStatus, { loading: statusLoading }] = useMutation<\n    UpdateBidRequestStatusBySubcontractor,\n    UpdateBidRequestStatusBySubcontractorVariables\n  >(mutationUpdateBidRequestStatusBySubcontractor, {\n    refetchQueries: () => ['BidRequestForSubcontractor'],\n    awaitRefetchQueries: true,\n  });\n\n  useQueryParamInitialAction('status', setSelectedStatus);\n\n  const selectStatus = (status: BID_REQUEST_STATUS | null) => {\n    const updateStatus = async () => {\n      if (status !== null) {\n        try {\n          await mutateStatus({ variables: { id: bidRequest.id, status } });\n        } catch {\n          toast.error();\n        }\n      }\n    };\n\n    // Run the mutation before setting `selectedStatus` to trigger the loading\n    // state, but don't wait until it finishes\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    updateStatus();\n    setSelectedStatus(status);\n  };\n\n  useEffect(() => {\n    setSelectedStatus(bidRequest.status);\n  }, [bidRequest.status]);\n\n  if (bidRequest.bidPackage.project.status === PROJECT_STATUS.closed) {\n    return (\n      <ActionsBar>\n        <ActionsContent>\n          <StyledProjectClosedMessage>{t('overview.projectClosed')}</StyledProjectClosedMessage>\n        </ActionsContent>\n      </ActionsBar>\n    );\n  }\n\n  if (bidRequest.bidPackage.status === BID_PACKAGE_STATUS.bidAwarded) {\n    return (\n      <ActionsBar>\n        <ActionsContent>\n          <StyledProjectClosedMessage>\n            {t('overview.actionsBar.bidAwarded')}\n          </StyledProjectClosedMessage>\n        </ActionsContent>\n      </ActionsBar>\n    );\n  }\n\n  if (!statusLoading && selectedStatus === BID_REQUEST_STATUS.bidSubmitted) {\n    return null;\n  }\n\n  if (\n    !statusLoading &&\n    (selectedStatus === BID_REQUEST_STATUS.inviteAccepted ||\n      selectedStatus === BID_REQUEST_STATUS.inviteDeclined)\n  ) {\n    return (\n      <ActionsBar>\n        <ActionsContent>\n          {selectedStatus === BID_REQUEST_STATUS.inviteAccepted && (\n            <>\n              <DecisionIcon type=\"check-fat\" size={28} />\n              <h3>{t('overview.youWillBid')}</h3>\n            </>\n          )}\n          {selectedStatus === BID_REQUEST_STATUS.inviteDeclined && (\n            <>\n              <DecisionIcon type=\"close-fat\" size={28} />\n              <h3>{t('overview.youWillNotBid')}</h3>\n            </>\n          )}\n          <ChangeFeedbackButton\n            onClick={() => {\n              selectStatus(null);\n            }}\n          >\n            {t('overview.changeFeedback')}\n          </ChangeFeedbackButton>\n        </ActionsContent>\n      </ActionsBar>\n    );\n  }\n\n  return (\n    <ActionsBar>\n      <ActionsContent>\n        <h3>{t('overview.willYouBid')}</h3>\n        <DecisionButton\n          hollow={bidRequest.status !== BID_REQUEST_STATUS.inviteAccepted}\n          icon={bidRequest.status === BID_REQUEST_STATUS.inviteAccepted ? 'check-fat' : undefined}\n          working={statusLoading && selectedStatus === BID_REQUEST_STATUS.inviteAccepted}\n          onClick={() => {\n            if (bidRequest.status !== BID_REQUEST_STATUS.inviteAccepted) {\n              selectStatus(BID_REQUEST_STATUS.inviteAccepted);\n            }\n          }}\n        >\n          {t('overview.yes')}\n        </DecisionButton>\n        <DeclinedReasonForm\n          bidRequest={bidRequest}\n          onSubmit={() => Promise.resolve(selectStatus(BID_REQUEST_STATUS.inviteDeclined))}\n          renderLink={modal => (\n            <DecisionButton\n              hollow={bidRequest.status !== BID_REQUEST_STATUS.inviteDeclined}\n              icon={\n                bidRequest.status === BID_REQUEST_STATUS.inviteDeclined ? 'check-fat' : undefined\n              }\n              working={statusLoading && selectedStatus === BID_REQUEST_STATUS.inviteDeclined}\n              onClick={() => {\n                if (bidRequest.status !== BID_REQUEST_STATUS.inviteDeclined) {\n                  modal.open();\n                }\n              }}\n            >\n              {t('overview.no')}\n            </DecisionButton>\n          )}\n        />\n        <DecisionButton\n          hollow={bidRequest.status !== BID_REQUEST_STATUS.undecided}\n          icon={bidRequest.status === BID_REQUEST_STATUS.undecided ? 'check-fat' : undefined}\n          working={statusLoading && selectedStatus === BID_REQUEST_STATUS.undecided}\n          onClick={() => {\n            if (bidRequest.status !== BID_REQUEST_STATUS.undecided) {\n              selectStatus(BID_REQUEST_STATUS.undecided);\n            }\n          }}\n        >\n          {t('overview.maybe')}\n        </DecisionButton>\n      </ActionsContent>\n    </ActionsBar>\n  );\n};\n\nexport default Actions;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mediaQueries } from 'shared/utils/styles';\nimport { Icon } from 'shared/components';\n\nexport const BidsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 600px;\n\n  @media ${mediaQueries.mobile} {\n    margin: 20px auto;\n  }\n\n  @media ${mediaQueries.desktop} {\n    margin: 50px auto;\n  }\n`;\n\nexport const StatusMessage = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  h3 {\n    padding: 4px 0 4px 12px;\n    ${font.medium}\n    ${font.size(17)}\n  }\n\n  @media ${mediaQueries.mobile} {\n    flex-direction: column;\n  }\n\n  @media ${mediaQueries.desktop} {\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const StatusIcon = styled(Icon)`\n  vertical-align: middle;\n  color: ${COLOR.success};\n\n  @media ${mediaQueries.mobile} {\n    font-size: 36px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    font-size: 24px;\n  }\n`;\n\nexport const BidsListContainer = styled.div`\n  width: 100%;\n  padding: 20px 0 25px;\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { BID_REQUEST_STATUS, BID_PACKAGE_STATUS, PROJECT_STATUS } from '__graphql__/globalTypes';\nimport { Button, BidsList, BidFormModal } from 'shared/components';\nimport { ProjectClosedMessage } from 'shared/components/Styles';\nimport { bidRequestStatusIconKey } from 'shared/components/Icon/utils';\n\nimport { BidsWrapper, StatusMessage, StatusIcon, BidsListContainer } from './Bids.styles';\nimport {\n  BidRequestForSubcontractor_bidRequestForSubcontractor,\n  BidRequestForSubcontractor_bidRequestForSubcontractor_bids,\n} from './__graphql__/BidRequestForSubcontractor';\n\ninterface Props {\n  bidRequest: BidRequestForSubcontractor_bidRequestForSubcontractor;\n}\n\nfunction isBidSubmittedToBidRequest<\n  T extends { status: BID_REQUEST_STATUS; bids: unknown },\n  C extends T['bids'] extends infer U ? U : never\n>(\n  bidRequest: T,\n): bidRequest is T & {\n  bids: NonNullable<C>;\n} {\n  return bidRequest.status === BID_REQUEST_STATUS.bidSubmitted;\n}\n\nfunction getBidsWithTotalAmount<\n  B extends BidRequestForSubcontractor_bidRequestForSubcontractor_bids = BidRequestForSubcontractor_bidRequestForSubcontractor_bids\n>(bids: B[]) {\n  return bids.filter((bid): bid is B & { totalAmount: number } => bid.totalAmount !== null);\n}\n\nconst Bids: React.FC<Props> = ({ bidRequest }) => {\n  const { t } = useTranslation('bidInvites');\n\n  const isProjectClosed = bidRequest.bidPackage.project.status === PROJECT_STATUS.closed;\n  const isAnyBidRequestAwarded = bidRequest.bidPackage.status === BID_PACKAGE_STATUS.bidAwarded;\n  const isBidRequestAwardedToOther =\n    isAnyBidRequestAwarded && bidRequest.status !== BID_REQUEST_STATUS.bidAwarded;\n  const isBidRequestAwardedToUs =\n    isAnyBidRequestAwarded && bidRequest.status === BID_REQUEST_STATUS.bidAwarded;\n\n  if (isBidRequestAwardedToOther || isBidRequestAwardedToUs) {\n    return (\n      <BidsWrapper>\n        {isProjectClosed && (\n          <ProjectClosedMessage addBottomMargin>{t('overview.projectClosed')}</ProjectClosedMessage>\n        )}\n        <StatusMessage>\n          <StatusIcon type={bidRequestStatusIconKey[BID_REQUEST_STATUS.bidAwarded]} />\n          <h3>\n            {isBidRequestAwardedToOther ? t('overview.otherWasAwarded') : t('overview.bidAwarded')}\n          </h3>\n        </StatusMessage>\n      </BidsWrapper>\n    );\n  }\n\n  if (isBidSubmittedToBidRequest(bidRequest)) {\n    const { subcontractor, currentBidId, bidInvites } = bidRequest;\n    const bids = getBidsWithTotalAmount(bidRequest.bids);\n\n    return (\n      <BidsWrapper>\n        <StatusMessage>\n          <StatusIcon type={bidRequestStatusIconKey[BID_REQUEST_STATUS.bidSubmitted]} />\n          <h3>{t('overview.bidSubmitted')}</h3>\n        </StatusMessage>\n        <BidsListContainer>\n          <BidsList\n            bids={bids}\n            subcontractor={subcontractor}\n            currentBidId={currentBidId}\n            bidInvites={bidInvites}\n            isResponsive\n          />\n        </BidsListContainer>\n        {!isProjectClosed && (\n          <BidFormModal\n            bidRequest={bidRequest}\n            isUserSubcontractor\n            refetchQueries={() => ['BidRequestForSubcontractor']}\n            renderLink={modal => <Button onClick={modal.open}>{t('overview.reviseBid')}</Button>}\n          />\n        )}\n      </BidsWrapper>\n    );\n  }\n\n  return (\n    <BidsWrapper>\n      <StatusMessage>\n        <h3>{t('overview.bidNotSubmitted')}</h3>\n      </StatusMessage>\n      {!isProjectClosed && (\n        <BidFormModal\n          bidRequest={bidRequest}\n          isUserSubcontractor\n          refetchQueries={() => ['BidRequestForSubcontractor']}\n          renderLink={modal => <Button onClick={modal.open}>{t('overview.submitBid')}</Button>}\n        />\n      )}\n    </BidsWrapper>\n  );\n};\n\nexport default Bids;\n","import styled from 'styled-components/macro';\n\nimport { Button } from 'shared/components';\nimport { mediaQueries, font } from 'shared/utils/styles';\nimport { HeadingMedium, SectionTitle } from 'shared/components/Styles';\n\nexport const Header = styled(SectionTitle)`\n  padding-top: 0;\n  padding-bottom: 5px;\n`;\n\nexport const CurrentPrice = styled(HeadingMedium)`\n  padding-bottom: 10px;\n\n  @media ${mediaQueries.mobile} {\n    ${font.size(24)}\n  }\n`;\n\nexport const SubmitBidButton = styled(Button)`\n  height: 48px;\n  padding: 0 27px;\n  ${font.size(16)};\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { PROJECT_STATUS, BID_REQUEST_STATUS, BID_PACKAGE_STATUS } from '__graphql__/globalTypes';\nimport { BidFormModal, CurrencyFormatter, ClickableText } from 'shared/components';\n\nimport { SubmitBidButton, CurrentPrice, Header } from './CurrentBid.styles';\nimport { BidRequestForSubcontractor_bidRequestForSubcontractor } from './__graphql__/BidRequestForSubcontractor';\n\ninterface Props {\n  bidRequest: BidRequestForSubcontractor_bidRequestForSubcontractor;\n}\n\nfunction hasCurrentBid(\n  bidRequest: BidRequestForSubcontractor_bidRequestForSubcontractor,\n): bidRequest is BidRequestForSubcontractor_bidRequestForSubcontractor & {\n  currentBid: NonNullable<BidRequestForSubcontractor_bidRequestForSubcontractor['currentBid']>;\n} {\n  return !!bidRequest.currentBid;\n}\n\nfunction getCurrentBidTotalAmount(\n  bidRequest: BidRequestForSubcontractor_bidRequestForSubcontractor,\n) {\n  return bidRequest.currentBid?.totalAmount;\n}\n\nconst CurrentBid: React.FC<Props> = ({ bidRequest }) => {\n  const { t } = useTranslation('bidInvites');\n\n  const isProjectClosed = bidRequest.bidPackage.project.status === PROJECT_STATUS.closed;\n  const isBidAwarded = bidRequest.bidPackage.status === BID_PACKAGE_STATUS.bidAwarded;\n  const isBidSubmittedToBidRequest = bidRequest.status === BID_REQUEST_STATUS.bidSubmitted;\n  const canSubmitBid = !isProjectClosed && !isBidAwarded;\n  const totalAmount = getCurrentBidTotalAmount(bidRequest);\n\n  if (isBidSubmittedToBidRequest && hasCurrentBid(bidRequest) && totalAmount) {\n    return (\n      <div>\n        <Header>{t('overview.bidAmount')}</Header>\n        <CurrentPrice>\n          <CurrencyFormatter value={totalAmount} />\n        </CurrentPrice>\n        {canSubmitBid && (\n          <BidFormModal\n            bidRequest={bidRequest}\n            isUserSubcontractor\n            refetchQueries={() => ['BidRequestForSubcontractor']}\n            renderLink={modal => (\n              <ClickableText onClick={modal.open} data-cy-button-name=\"reviseBid\">\n                {t('overview.reviseBid')}\n              </ClickableText>\n            )}\n          />\n        )}\n      </div>\n    );\n  }\n\n  if (canSubmitBid) {\n    return (\n      <BidFormModal\n        bidRequest={bidRequest}\n        isUserSubcontractor\n        refetchQueries={() => ['BidRequestForSubcontractor']}\n        renderLink={modal => (\n          <SubmitBidButton icon=\"edit\" onClick={modal.open} data-cy-button-name=\"submitBid\">\n            {t('overview.submitBid')}\n          </SubmitBidButton>\n        )}\n      />\n    );\n  }\n\n  return null;\n};\n\nexport default CurrentBid;\n","import React from 'react';\nimport { useLazyQuery } from '@apollo/react-hooks';\n\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport Messages from 'shared/components/Messages';\n\nimport { queryMessageThreadsInBidRequest } from './api';\n\ninterface Props {\n  bidRequestId: string;\n  bidPackageId: string;\n  potentialRecipients: {\n    bidRequestId: string;\n    name: string;\n  }[];\n}\n\nconst MessagesTab: React.FC<Props> = ({ bidRequestId, bidPackageId, potentialRecipients }) => {\n  const activeUserType = COMPANY_TYPE.agent;\n  const threadsQuery = useLazyQuery<{}>(queryMessageThreadsInBidRequest, {\n    variables: { bidRequestId },\n  });\n\n  return (\n    <Messages\n      threadsQuery={threadsQuery}\n      threadsQueryName=\"messageThreadsInBidRequest\"\n      refetchQueries={['MessageThreadsInBidRequest']}\n      activeUserType={activeUserType}\n      potentialRecipients={potentialRecipients}\n      bidPackageId={bidPackageId}\n    />\n  );\n};\n\nexport default MessagesTab;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  Tabs,\n  HtmlHeadTags,\n  DocumentsTableCombined,\n  Page,\n  PageLoader,\n  QueryErrors,\n} from 'shared/components';\nimport routes from 'shared/constants/routes';\nimport PageNotFound from 'components/PageNotFound';\nimport { isDoneLoading } from 'shared/utils/apollo';\nimport useUserAuthStatus from 'shared/hooks/useUserAuthStatus';\nimport { BID_REQUEST_STATUS, DOCUMENT_ENTITY } from '__graphql__/globalTypes';\n\nimport { queryBidRequestForSubcontractor } from './api';\nimport Overview from './Overview';\nimport { BidPackageName, ProjectName, Header } from './Styles';\nimport Actions from './Actions';\nimport Bids from './Bids';\nimport CurrentBid from './CurrentBid';\nimport MessagesTab from './MessagesTab';\nimport {\n  BidRequestForSubcontractor,\n  BidRequestForSubcontractorVariables,\n} from './__graphql__/BidRequestForSubcontractor';\n\nconst BidRequest: React.FC<void> = () => {\n  const { t } = useTranslation('bidInvites');\n  const { isUserAuthenticated, isUserAdmin } = useUserAuthStatus();\n  const { bidRequestId } = useParams<{ bidRequestId: string }>();\n\n  const { error, ...queryResults } = useQuery<\n    BidRequestForSubcontractor,\n    BidRequestForSubcontractorVariables\n  >(queryBidRequestForSubcontractor, {\n    variables: { bidRequestId },\n  });\n\n  if (error) {\n    return <QueryErrors error={error} />;\n  }\n\n  if (!isDoneLoading(queryResults)) {\n    return <PageLoader />;\n  }\n\n  const bidRequest = queryResults.data.bidRequestForSubcontractor;\n\n  if (bidRequest.status === BID_REQUEST_STATUS.withdrawn) {\n    return <PageNotFound.RequestWithdrawn isAuthenticated={isUserAuthenticated} />;\n  }\n\n  const potentialMessageRecipients = [\n    {\n      bidRequestId: bidRequest.id,\n      name: bidRequest.bidPackage.project.office.name,\n    },\n  ];\n\n  const isNonAdminUser = isUserAuthenticated && !isUserAdmin;\n\n  return (\n    <>\n      <HtmlHeadTags title={bidRequest.bidPackage.name} />\n      <Actions bidRequest={bidRequest} />\n      <Page\n        data-cy-page=\"bid-invite\"\n        withTopbar={isNonAdminUser}\n        isResponsive\n        backLink={\n          isNonAdminUser ? { to: routes.bidRequests(), label: t('backToBidRequests') } : undefined\n        }\n      >\n        <Header>\n          <div>\n            <ProjectName>{bidRequest.bidPackage.project.name}</ProjectName>\n            <BidPackageName>{bidRequest.bidPackage.name}</BidPackageName>\n          </div>\n          <CurrentBid bidRequest={bidRequest} />\n        </Header>\n        <Tabs.Container>\n          <Tabs.Links>\n            <Tabs.Link to=\"overview\" isDefault>\n              {t('overview.overviewTabName')}\n            </Tabs.Link>\n            <Tabs.Link to=\"documents\">{t('documents.documents')}</Tabs.Link>\n            <Tabs.Link to=\"bids\">{t('overview.bidsTabName')}</Tabs.Link>\n            {process.env.REACT_APP_ENABLE_MESSAGING === 'true' && (\n              <Tabs.Link to=\"messages\">{t('overview.messagesTabName')}</Tabs.Link>\n            )}\n          </Tabs.Links>\n          <Tabs.Content>\n            <Tabs.Route\n              path=\"overview\"\n              render={() => <Overview bidPackage={bidRequest.bidPackage} />}\n            />\n            <Tabs.Route\n              path=\"documents\"\n              render={() => (\n                <DocumentsTableCombined\n                  attachables={[\n                    {\n                      attachableType: DOCUMENT_ENTITY.BidPackage,\n                      attachableId: bidRequest.bidPackage.id,\n                      attachableName: bidRequest.bidPackage.name,\n                    },\n                    {\n                      attachableType: DOCUMENT_ENTITY.Project,\n                      attachableId: bidRequest.bidPackage.project.id,\n                      attachableName: bidRequest.bidPackage.project.name,\n                    },\n                  ]}\n                />\n              )}\n            />\n            <Tabs.Route path=\"bids\" render={() => <Bids bidRequest={bidRequest} />} />\n            {process.env.REACT_APP_ENABLE_MESSAGING === 'true' && (\n              <Tabs.Route\n                path=\"messages\"\n                render={() => (\n                  <MessagesTab\n                    bidRequestId={bidRequest.id}\n                    bidPackageId={bidRequest.bidPackage.id}\n                    potentialRecipients={potentialMessageRecipients}\n                  />\n                )}\n              />\n            )}\n          </Tabs.Content>\n        </Tabs.Container>\n      </Page>\n    </>\n  );\n};\n\nexport default BidRequest;\n","import styled from 'styled-components/macro';\nimport { NavLink } from 'react-router-dom';\n\nimport { font, sizes, COLOR, mixin, zIndexValues, mediaQueries } from 'shared/utils/styles';\nimport Logo from 'shared/components/Logo';\nimport Icon, { IconProps } from 'shared/components/Icon';\n\nconst desktopBarHeight = 60;\n\nexport const Bar = styled.aside`\n  z-index: ${zIndexValues.navbar};\n  position: absolute;\n  background: ${COLOR.primary};\n\n  @media ${mediaQueries.mobile} {\n    bottom: 0;\n    left: 0;\n    display: flex;\n    justify-content: center;\n    height: ${sizes.navbarHeightMobile}px;\n    width: 100%;\n    overflow-x: auto;\n    box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.6);\n  }\n\n  @media ${mediaQueries.desktop} {\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: ${sizes.navbarWidthDesktop}px;\n    transition: all 0.1s;\n    overflow-x: hidden;\n    ${mixin.hardwareAccelerate}\n    &:hover {\n      width: 260px;\n      box-shadow: 0 0 50px 0 rgba(0, 0, 0, 0.6);\n    }\n  }\n`;\n\nexport const LogoLink = styled(NavLink)`\n  display: block;\n  position: relative;\n  left: 0;\n  margin: 40px 0 40px;\n  transition: left 0.1s;\n  &::before {\n    display: inline-block;\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    height: 50px;\n    width: 20px;\n    background: ${COLOR.primary};\n  }\n  ${/* sc-selector */ Bar}:hover & {\n    left: 3px;\n    &::before {\n      display: none;\n    }\n  }\n\n  @media ${mediaQueries.mobile} {\n    display: none;\n  }\n`;\n\nexport const StyledLogo = styled(Logo)`\n  display: inline-block;\n  margin-left: 13px;\n  padding: 10px;\n  ${mixin.clickable}\n`;\n\nexport const IconLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  position: relative;\n  color: rgba(255, 255, 255, 0.75);\n  transition: color 0.1s;\n  ${mixin.clickable};\n\n  @media ${mediaQueries.mobile} {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    min-width: 70px;\n    max-width: 140px;\n    margin: 0 5px;\n    padding: 0 10px;\n    text-align: center;\n\n    &.active {\n      color: #fff;\n    }\n\n    &::before {\n      content: '';\n      display: none;\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      height: 2px;\n      width: 100%;\n      background: #fff;\n      border-radius: 6px 6px 0 0;\n    }\n\n    &.active::before {\n      display: inline-block;\n    }\n  }\n\n  @media ${mediaQueries.desktop} {\n    width: 100%;\n    height: ${desktopBarHeight}px;\n    line-height: ${desktopBarHeight}px;\n    padding-left: 67px;\n\n    &::before {\n      content: '';\n      display: none;\n      position: absolute;\n      top: 5px;\n      right: 0;\n      height: 50px;\n      width: 5px;\n      background: #fff;\n      border-radius: 6px 0 0 6px;\n    }\n    &.active,\n    &:hover {\n      color: #fff;\n    }\n    &.active::before {\n      display: inline-block;\n    }\n    &:hover {\n      background: ${COLOR.highlightPrimary};\n    }\n  }\n`;\n\nexport const StyledIcon = styled(Icon)<IconProps>`\n  @media ${mediaQueries.mobile} {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 30px;\n    margin-top: 5px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    position: absolute;\n    left: 27px;\n    top: ${props => (desktopBarHeight - (props.size || 16)) / 2}px;\n  }\n`;\n\nexport const LinkText = styled.div`\n  text-transform: uppercase;\n  white-space: no-wrap;\n  ${font.bold};\n  ${font.size(12)};\n\n  @media ${mediaQueries.mobile} {\n    margin: 5px 0 5px;\n    ${mixin.truncateText}\n  }\n\n  @media ${mediaQueries.desktop} {\n    position: relative;\n    right: 12px;\n    visibility: hidden;\n    opacity: 0;\n    transition: all 0.1s;\n    transition-property: right, visibility, opacity;\n\n    ${/* sc-selector */ Bar}:hover & {\n      right: 0;\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { COMPANY_TYPE } from '__graphql__/globalTypes';\nimport routes from 'shared/constants/routes';\nimport { COLOR } from 'shared/utils/styles';\n\nimport { Bar, LogoLink, StyledLogo, IconLink, LinkText, StyledIcon } from './Styles';\n\ninterface NavbarProps {\n  companyType: COMPANY_TYPE;\n}\n\nconst Navbar: React.FC<NavbarProps> = ({ companyType }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Bar data-cy-main-navbar>\n      <LogoLink to={routes.root()}>\n        <StyledLogo color={COLOR.white} />\n      </LogoLink>\n      {companyType === COMPANY_TYPE.principal && (\n        <>\n          <IconLink to={routes.projectsRoot()}>\n            <StyledIcon type=\"archive\" size={16} />\n            <LinkText>{t('projects:projects')}</LinkText>\n          </IconLink>\n          <IconLink to={routes.subcontractors()}>\n            <StyledIcon type=\"briefcase\" size={16} />\n            <LinkText>{t('subcontractors:subcontractors')}</LinkText>\n          </IconLink>\n          <IconLink to={routes.bids()}>\n            <StyledIcon type=\"file-text\" size={20} left={-2} />\n            <LinkText>{t('bids:bids')}</LinkText>\n          </IconLink>\n        </>\n      )}\n      {companyType === COMPANY_TYPE.agent && (\n        <IconLink to={routes.bidRequests()}>\n          <StyledIcon type=\"file-text\" size={20} left={-2} />\n          <LinkText>{t('bidInvites:requests.bidRequests')}</LinkText>\n        </IconLink>\n      )}\n    </Bar>\n  );\n};\n\nexport default Navbar;\n","import styled from 'styled-components/macro';\n\nimport { mediaQueries, sizes } from 'shared/utils/styles';\n\nexport const Main = styled.main`\n  position: relative;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  overflow: hidden;\n\n  @media ${mediaQueries.mobile} {\n    padding-bottom: ${sizes.navbarHeightMobile}px;\n  }\n\n  @media ${mediaQueries.desktop} {\n    padding-left: ${sizes.navbarWidthDesktop}px;\n  }\n`;\n","import React from 'react';\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\n\nimport Navbar from 'shared/components/Navbar';\nimport { ContentWithScroll } from 'shared/components/Styles';\nimport useUserAuthStatus from 'shared/hooks/useUserAuthStatus';\n\nimport { Main } from './Styles';\n\ninterface AuthRouteProps {\n  path?: string;\n  component: RouteProps['component'];\n  exact?: boolean;\n  withLayout?: boolean;\n  mountRoute: boolean;\n}\n\ntype ExposedRouteProps = Omit<AuthRouteProps, 'mountRoute'>;\n\nconst AuthRoute: React.FC<AuthRouteProps> = ({\n  path,\n  component,\n  exact,\n  withLayout = false,\n  mountRoute,\n}) => {\n  const { pathname } = useLocation();\n  const { companyType, userBaseUrl } = useUserAuthStatus();\n\n  if (!mountRoute) {\n    return <Redirect from={path} to={{ pathname: userBaseUrl, state: { redirect: pathname } }} />;\n  }\n\n  const route = <Route path={path} component={component} exact={exact} />;\n\n  if (withLayout && companyType) {\n    return (\n      <Main>\n        <Navbar companyType={companyType} />\n        <ContentWithScroll>{route}</ContentWithScroll>\n      </Main>\n    );\n  }\n  return route;\n};\nconst PrincipalRoute = (props: ExposedRouteProps) => {\n  const { isUserPrincipal } = useUserAuthStatus();\n  return <AuthRoute {...props} mountRoute={isUserPrincipal} />;\n};\nconst AgentRoute = (props: ExposedRouteProps) => {\n  const { isUserAgent } = useUserAuthStatus();\n  return <AuthRoute {...props} mountRoute={isUserAgent} />;\n};\nconst UserRoute = (props: ExposedRouteProps) => {\n  const { isUserAuthenticated } = useUserAuthStatus();\n  return <AuthRoute {...props} mountRoute={isUserAuthenticated} />;\n};\nconst EmployeeRoute = (props: ExposedRouteProps) => {\n  const { isUserEmployee } = useUserAuthStatus();\n  return <AuthRoute {...props} mountRoute={isUserEmployee} />;\n};\nconst AdminRoute = (props: ExposedRouteProps) => {\n  const { isUserAdmin } = useUserAuthStatus();\n  return <AuthRoute {...props} mountRoute={isUserAdmin} />;\n};\nconst AnonymousRoute = (props: ExposedRouteProps) => {\n  const { isUserAnonymous } = useUserAuthStatus();\n  return <AuthRoute {...props} mountRoute={isUserAnonymous} />;\n};\n\nexport { PrincipalRoute, AgentRoute, UserRoute, EmployeeRoute, AdminRoute, AnonymousRoute };\n","import React from 'react';\nimport { Router, Switch, Redirect, Route } from 'react-router-dom';\n\nimport history from 'browserHistory';\nimport { PageLoader } from 'shared/components';\nimport routes, { PROJECTS_ROUTE_TYPE } from 'shared/constants/routes';\nimport Login from 'components/Auth/Login';\nimport BidInviteFeedback from 'components/Auth/BidInviteFeedback';\nimport Signup from 'components/Auth/Signup';\nimport ResetPassword from 'components/Auth/ResetPassword';\nimport CreatePassword from 'components/Auth/CreatePassword';\nimport Invitation from 'components/Auth/Invitation';\nimport Projects from 'components/Projects';\nimport Project from 'components/Project';\nimport BidPackage from 'components/BidPackage';\nimport Subcontractors from 'components/Subcontractors';\nimport Bids from 'components/Bids';\nimport { PrintBidders } from 'components/BidPackage/Bidders/Print';\nimport BidInvite from 'components/BidInvite';\nimport PrintProjectDocuments from 'components/Project/PrintDocuments';\nimport PrintBidPackageDocuments from 'components/BidPackage/PrintDocuments';\nimport Admin from 'components/Admin';\nimport Profile from 'components/Profile';\nimport Company from 'components/Company';\nimport BidRequests from 'components/BidRequests';\nimport BidRequest from 'components/BidRequest';\nimport useUserAuthStatus from 'shared/hooks/useUserAuthStatus';\nimport PageNotFound from 'components/PageNotFound';\n\nimport {\n  PrincipalRoute,\n  AdminRoute,\n  UserRoute,\n  AgentRoute,\n  AnonymousRoute,\n  EmployeeRoute,\n} from './AuthRoute';\n\nconst Routes: React.FC = () => {\n  const {\n    isUserAdmin,\n    isUserAuthenticating,\n    isUserAuthenticated,\n    isUserAnonymous,\n    isUserAgent,\n    userBaseUrl,\n  } = useUserAuthStatus();\n\n  if (isUserAuthenticating) {\n    return <PageLoader />;\n  }\n\n  return (\n    <Router history={history}>\n      <Switch>\n        {/* Routes for all users */}\n        <UserRoute withLayout path={routes.profile()} component={Profile} />\n        <EmployeeRoute withLayout path={routes.company()} component={Company} />\n\n        {/* Routes for admin users */}\n        <AdminRoute withLayout path={routes.admin()} component={Admin} />\n        {isUserAdmin && <AdminRoute withLayout path={routes.bidRequest()} component={BidRequest} />}\n\n        {/* Routes for principal users */}\n        <Redirect\n          exact\n          from={routes.projectsRoot()}\n          to={routes.projects(PROJECTS_ROUTE_TYPE.open)}\n        />\n        <PrincipalRoute withLayout path={routes.projects()} component={Projects} />\n        <PrincipalRoute withLayout path={routes.createBidPackage()} component={BidPackage} />\n        <PrincipalRoute withLayout path={routes.showBidPackage()} component={BidPackage} />\n        <Redirect from={routes.showBidPackageLegacy()} to={routes.showBidPackage()} />\n        <PrincipalRoute withLayout path={routes.createProject()} component={Project} />\n        <PrincipalRoute withLayout path={routes.showProject()} component={Project} />\n        <PrincipalRoute withLayout path={routes.subcontractors()} component={Subcontractors} />\n        <PrincipalRoute withLayout path={routes.bids()} component={Bids} />\n        <PrincipalRoute path={routes.printBidders()} component={PrintBidders} />\n        <PrincipalRoute path={routes.printProjectDocuments()} component={PrintProjectDocuments} />\n        <PrincipalRoute\n          path={routes.printBidPackageDocuments()}\n          component={PrintBidPackageDocuments}\n        />\n\n        {/* Routes for agent users */}\n        {isUserAgent && (\n          <AgentRoute path={routes.bidInviteAction()} component={BidInviteFeedback} />\n        )}\n        {isUserAgent && <AgentRoute withLayout path={routes.bidInvite()} component={BidInvite} />}\n        {isUserAgent && <AgentRoute withLayout path={routes.bidRequest()} component={BidRequest} />}\n        <AgentRoute exact withLayout path={routes.bidRequests()} component={BidRequests} />\n\n        {/* Unauthenticated routes */}\n        <AnonymousRoute path={routes.invitation()} component={Invitation} />\n        <AnonymousRoute path={routes.login()} component={Login} />\n        <AnonymousRoute path={routes.signup()} component={Signup} />\n        <AnonymousRoute path={routes.resetPassword()} component={ResetPassword} />\n        <AnonymousRoute path={routes.createPassword()} component={CreatePassword} />\n        {isUserAnonymous && (\n          <AnonymousRoute path={routes.bidInviteAction()} component={BidInviteFeedback} />\n        )}\n        {isUserAnonymous && <AnonymousRoute path={routes.bidInvite()} component={BidInvite} />}\n        <AnonymousRoute path={routes.bidRequest()} component={BidRequest} />\n\n        {/* Shared redirects */}\n        <Redirect exact from={routes.root()} to={userBaseUrl} />\n        <Redirect from={routes.bidInviteActionLegacy()} to={routes.bidInviteAction()} />\n\n        {/* PageNotFound handling */}\n        {isUserAuthenticated ? (\n          <UserRoute withLayout component={PageNotFound.Authenticated} />\n        ) : (\n          <Route component={PageNotFound.Unauthenticated} />\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\n\nconst padding = '12px';\n\nexport const AppOutdatedBar = styled.div`\n  width: 100%;\n  padding: ${padding};\n  background: ${mixin.darken(COLOR.backgroundDark, 0.5)};\n  text-align: center;\n  cursor: pointer;\n  color: #fff;\n  ${font.size(14)}\n  ${font.medium}\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport axios from 'axios';\n\nimport Console from 'shared/utils/console';\n\nimport { AppOutdatedBar } from './Styles';\n\nexport const CheckPeriodInSeconds = 300;\n\nconst useIsOutdated = () => {\n  const [isOutdated, setIsOutdated] = useState(false);\n\n  useEffect(() => {\n    let version: string | null = null;\n\n    function checkVersion() {\n      axios.get('/version').then(\n        ({ data, status }: { data: string; status: number }) => {\n          if (status === 200 && data) {\n            const latestVersion = data.trim();\n            if (version && version !== latestVersion) {\n              setIsOutdated(true);\n            }\n            version = latestVersion;\n          }\n        },\n        error => {\n          Console.error(`Error while retrieving version number: ${error}`);\n        },\n      );\n    }\n\n    checkVersion();\n    setInterval(checkVersion, CheckPeriodInSeconds * 1000);\n  }, []);\n\n  return isOutdated;\n};\n\nconst VersionCheck: React.FC = () => {\n  const { t } = useTranslation();\n  const isOutdated = useIsOutdated();\n\n  const reload = () => window.location.reload();\n\n  if (isOutdated) {\n    return <AppOutdatedBar onClick={reload}>{t('appOutdated')}</AppOutdatedBar>;\n  }\n  return null;\n};\n\nexport default VersionCheck;\n","import styled from 'styled-components/macro';\n\nimport { COLOR, font, mixin, zIndexValues } from 'shared/utils/styles';\n\nexport const Container = styled.div`\n  z-index: ${zIndexValues.toast};\n  position: fixed;\n  right: 30px;\n  top: 50px;\n`;\n\nexport const StyledToast = styled.div<{ type: keyof typeof COLOR }>`\n  position: relative;\n  margin-bottom: 5px;\n  width: 300px;\n  padding: 15px 20px;\n  border-radius: 4px;\n  color: #fff;\n  background: ${props => COLOR[props.type]};\n  cursor: pointer;\n  transition: all 0.15s;\n  ${mixin.clearfix}\n  ${mixin.hardwareAccelerate}\n\n  &.cosuno-toast-enter,\n  &.cosuno-toast-exit.cosuno-toast-exit-active {\n    opacity: 0;\n    right: -10px;\n  }\n\n  &.cosuno-toast-exit,\n  &.cosuno-toast-enter.cosuno-toast-enter-active {\n    opacity: 1;\n    right: 0;\n  }\n\n  i {\n    position: absolute;\n    top: 13px;\n    right: 14px;\n    font-size: 22px;\n    cursor: pointer;\n    color: #fff;\n  }\n`;\n\nexport const Title = styled.div`\n  padding-right: 22px;\n  ${font.size(16)}\n  ${font.medium}\n`;\n\nexport const Message = styled.div`\n  padding: 8px 10px 0 0;\n  white-space: pre-wrap;\n  ${font.size(14)}\n  ${font.medium}\n`;\n","import React, { useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport pubsub from 'sweet-pubsub';\n\nimport { uniqueId } from 'shared/utils/javascript';\nimport { Icon } from 'shared/components';\nimport { COLOR } from 'shared/utils/styles';\n\nimport { Container, StyledToast, Title, Message } from './Styles';\n\nconst TRANSITION_TIME = 200;\n\ninterface Loaf {\n  id: string;\n  type: keyof typeof COLOR;\n  duration?: number;\n  title: string;\n  message: string;\n}\n\nconst Toast: React.FC<{ transitionTime?: number }> = ({ transitionTime = TRANSITION_TIME }) => {\n  const [toasts, setToasts] = useState<Loaf[]>([]);\n\n  const addToast = ({ type = 'success', title, message, duration = 5 }: Loaf) => {\n    const id = uniqueId('toast-');\n\n    setToasts(currentToasts => [...currentToasts, { id, type, title, message }]);\n\n    if (duration) {\n      setTimeout(() => removeToast(id), duration * 1000);\n    }\n  };\n\n  const removeToast = (id: string) => {\n    setToasts(currentToasts => currentToasts.filter(toast => toast.id !== id));\n  };\n\n  useEffect(() => {\n    pubsub.on('toast', addToast);\n\n    return () => pubsub.off('toast', addToast);\n  });\n\n  return (\n    <Container>\n      <TransitionGroup>\n        {toasts.map(toast => (\n          <CSSTransition key={toast.id} classNames=\"cosuno-toast\" timeout={transitionTime}>\n            <StyledToast\n              data-testid=\"toast\"\n              data-cy-toast\n              key={toast.id}\n              type={toast.type}\n              onClick={() => removeToast(toast.id)}\n            >\n              <Icon type=\"close\" />\n              {toast.title && <Title>{toast.title}</Title>}\n              {toast.message && <Message>{toast.message}</Message>}\n            </StyledToast>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </Container>\n  );\n};\n\nexport default Toast;\n","import { createGlobalStyle } from 'styled-components/macro';\n\n/** DO NOT ALTER THIS FILE. It is a copy of https://necolas.github.io/normalize.css/ */\n// stylelint-disable\n\nexport default createGlobalStyle`\n  html {\n    line-height: 1.15;\n    -webkit-text-size-adjust: 100%;\n  }\n  body {\n    margin: 0;\n  }\n  main {\n    display: block;\n  }\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n  hr {\n    box-sizing: content-box;\n    height: 0;\n    overflow: visible;\n  }\n  pre {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  a {\n    background-color: transparent;\n  }\n  abbr[title] {\n    border-bottom: none;\n    text-decoration: underline;\n    text-decoration: underline dotted;\n  }\n  b,\n  strong {\n    font-weight: bolder;\n  }\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  sup {\n    top: -0.5em;\n  }\n  img {\n    border-style: none;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit;\n    font-size: 100%;\n    line-height: 1.15;\n    margin: 0;\n  }\n  button,\n  input {\n    overflow: visible;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    -webkit-appearance: button;\n  }\n  button::-moz-focus-inner,\n  [type=\"button\"]::-moz-focus-inner,\n  [type=\"reset\"]::-moz-focus-inner,\n  [type=\"submit\"]::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n  button:-moz-focusring,\n  [type=\"button\"]:-moz-focusring,\n  [type=\"reset\"]:-moz-focusring,\n  [type=\"submit\"]:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n  legend {\n    box-sizing: border-box;\n    color: inherit;\n    display: table;\n    max-width: 100%;\n    padding: 0;\n    white-space: normal;\n  }\n  progress {\n    vertical-align: baseline;\n  }\n  textarea {\n    overflow: auto;\n  }\n  [type=\"checkbox\"],\n  [type=\"radio\"] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  [type=\"number\"]::-webkit-inner-spin-button,\n  [type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n  [type=\"search\"] {\n    -webkit-appearance: textfield;\n    outline-offset: -2px;\n  }\n  [type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button;\n    font: inherit;\n  }\n  details {\n    display: block;\n  }\n  summary {\n    display: list-item;\n  }\n  template {\n    display: none;\n  }\n  [hidden] {\n    display: none;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components/macro';\n\nimport { COLOR, font, mixin } from 'shared/utils/styles';\n\nexport default createGlobalStyle`\n  html, body, #root {\n    height: 100%;\n    min-height: 100%;\n  }\n\n  body {\n    color: ${COLOR.textDarkest};\n    -webkit-tap-highlight-color: transparent;\n    line-height: 1.2;\n    ${font.size(16)}\n    ${font.regular}\n  }\n\n  #root {\n    display: flex;\n    flex-direction: column;\n  }\n\n  @media print {\n    #root {\n      /* Makes Firefox multi-page printing possible */\n      display: block;\n    }\n  }\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    ${font.regular}\n  }\n\n  *, *::after, *::before, input[type=\"search\"] {\n    box-sizing: border-box;\n  }\n\n  a, a:hover, a:visited, a:active {\n    text-decoration: none;\n  }\n\n  ul {\n    list-style: none;\n  }\n\n  ul, li, ol, dd, h1, h2, h3, h4, h5, h6, p {\n    padding: 0;\n    margin: 0;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    ${font.bold}\n  }\n\n  button {\n    background: none;\n    border: none;\n  }\n\n  /* Workaround for IE11 focus highlighting for select elements */\n  select::-ms-value {\n    background: none;\n    color: #42413d;\n  }\n\n  [role=\"button\"], button, input, select, textarea {\n    outline: none;\n    &:focus {\n      outline: none;\n    }\n    &:disabled {\n      opacity: 1;\n    }\n  }\n  [role=\"button\"], button, input, textarea {\n    appearance: none;\n  }\n  select:-moz-focusring {\n    color: transparent;\n    text-shadow: 0 0 0 #000;\n  }\n  select::-ms-expand {\n    display: none;\n  }\n  select option {\n    color: ${COLOR.textDarkest};\n  }\n\n  p {\n    line-height: 1.6;\n    a {\n      ${mixin.link()}\n    }\n  }\n\n  textarea {\n    line-height: 1.6;\n  }\n\n  body, select {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    touch-action: manipulation;\n  }\n\n  ${mixin.placeholderColor(COLOR.textLightBlue)}\n`;\n","import React from 'react';\nimport { useApolloClient } from '@apollo/react-hooks';\n\nimport GoogleAutoCompleteStyles from 'shared/components/LocationSearch/Styles';\nimport useAuthentication from 'shared/hooks/useAuthentication';\nimport useModalsManager from 'shared/hooks/useModalsManager';\nimport useQueryMatches from 'shared/hooks/useQueryMatches';\nimport AuthContext from 'shared/contexts/authContext';\nimport ModalsContext from 'shared/contexts/modalsContext';\nimport QueryMatchesContext from 'shared/contexts/queryMatchesContext';\nimport Routes from 'components/Routes';\nimport { ApolloClientWithLogout } from 'apolloClient';\n\nimport VersionCheck from './VersionCheck';\nimport Toast from './Toast';\nimport NormalizeStyles from './NormalizeStyles';\nimport BaseStyles from './BaseStyles';\n\nimport './fontStyles.css';\n\nconst App = () => {\n  const { authState, login, logout } = useAuthentication();\n  const modalManagerProps = useModalsManager();\n  const queryMatches = useQueryMatches();\n\n  // This is an ugly workaround needed so we can trigger a logout from within\n  // the Apollo error link. We should find a better solution if we can.\n  const apolloClient: ApolloClientWithLogout = useApolloClient();\n  apolloClient.logout = logout;\n\n  return (\n    <AuthContext.Provider value={{ authState, login, logout }}>\n      <ModalsContext.Provider value={modalManagerProps}>\n        <QueryMatchesContext.Provider value={queryMatches}>\n          <NormalizeStyles />\n          <BaseStyles />\n          <GoogleAutoCompleteStyles />\n          <VersionCheck />\n          <Toast />\n          <Routes />\n        </QueryMatchesContext.Provider>\n      </ModalsContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import { BID_INVITE_STATUS, BID_REQUEST_STATUS, USER_STATUS } from '__graphql__/globalTypes';\n\n/* eslint-disable @typescript-eslint/camelcase */\nexport default {\n  common: {\n    search: 'Suche',\n    add: 'Hinzufügen',\n    addMore: 'Weitere hinzufügen',\n    showingResults: '{{startIndex}} – {{endIndex}} von {{count}} Ergebnis',\n    showingResults_plural: '{{startIndex}} – {{endIndex}} von {{count}} Ergebnissen',\n    showingManyResults_plural: '{{startIndex}} – {{endIndex}} von über {{count}} Ergebnissen',\n    cancel: 'Abbrechen',\n    delete: 'Löschen',\n    save: 'Speichern',\n    submit: 'Abschicken',\n    select: 'Auswählen',\n    noResults: 'Es können keine Ergebnisse angezeigt werden.',\n    warning: 'Warnung',\n    confirmMessage: 'Sind Sie sicher, dass Sie mit dieser Aktion fortfahren möchten?',\n    confirm: 'Bestätigen',\n    confirmDeleteMessage: 'Sind Sie sicher, dass Sie dieses Objekt löschen möchten?',\n    confirmDeleteDescription: 'Dieser Vorgang kann nicht rückgängig gemacht werden.',\n    itemDeleted: 'Objekt erfolgreich gelöscht',\n    appOutdated:\n      'Diese Version von Cosuno ist nicht mehr aktuell. Klicken Sie hier um die Seite zu aktualisieren.',\n    itemRemoved: 'Objekt erfolgreich entfernt',\n    networkError:\n      'Wir haben Probleme mit dem Server zu kommunizieren, bitte prüfen Sie Ihre Internet-Verbindung.',\n    year: 'Jahr',\n    edit: 'Bearbeiten',\n    error: 'Fehler',\n    requiredFieldsNote: '* Pflichtfeld',\n    help: 'Hilfe',\n    internalData: 'Interne Daten',\n    internalDataHint:\n      'Diese Informationen werden nicht mit Nachunternehmern geteilt und dienen ausschließlich internen Zwecken.',\n    documentsTable: {\n      download: 'Herunterladen',\n      downloadAll: 'Alle herunterladen',\n      noResults: 'Keine Dokumente gefunden',\n      dragToEmptyTable: 'Ziehen Sie Dateien und Ordner in diesen Bereich',\n      dragToRoot: 'Ziehen Sie Dateien und Ordner in diesen Bereich',\n      createFolder: 'Neuer Ordner',\n      renameFolder: 'Ordner umbenennen',\n      renameFile: 'Datei umbenennen',\n      name: 'Name',\n      uploadFiles: 'Dateien hochladen',\n      uploadFolder: 'Ordner hochladen',\n      uploadProgress: '{{uploadedCount}}/{{totalCount}} Dateien hochgeladen',\n      preparingFiles: 'Dateien vorbereiten...',\n      documentsUploaded: 'Dokumente erfolgreich hochgeladen',\n      documentsRemoved: 'Dokumente erfolgreich gelöscht',\n      empty: '(leer)',\n      rename: 'Umbenennen',\n      delete: 'Löschen',\n      emptyFolderUpload:\n        \"Leere Ordner können nicht hochgeladen werden. Klicken Sie stattdessen auf 'Neuer Ordner'.\",\n      bidDocuments: 'Angebotsdokumente',\n    },\n    selectComponent: {\n      noResults: 'Keine Ergebnisse',\n      moreResults: '{{count}} Optionen nicht angezeigt',\n      create: '\"{{itemName}}\" anlegen',\n      creating: 'Lege \"{{itemName}}\" an...',\n      clearButtonLabel: 'Eingabe zurücksetzen',\n    },\n    imageUploader: {\n      uploadImage: 'Bild hochladen',\n      uploadedImage: 'Hochgeladenes Bild',\n      removeImage: 'Bild entfernen',\n    },\n    bidList: {\n      latest: '(aktuell)',\n    },\n    bidModal: {\n      bidSummary: 'Angebot',\n      details: 'Details',\n      documents: 'Dokumente',\n    },\n    bidFormModal: {\n      addBid: 'Neues Angebot',\n      enterDetails: 'Details angeben',\n      uploadDocuments: 'Dokumente hochladen',\n      totalAmountPlaceholder: 'z.B. 25000,00',\n      documentsError: 'Bitte laden Sie mindestens ein Dokument hoch.',\n      bidAdded: 'Angebot erfolgreich abgeschickt',\n    },\n    companyInfo: {\n      email: 'E-Mail',\n      phone: 'Telefon',\n      mobilePhone: 'Mobil',\n      fax: 'Fax',\n      website: 'Webseite',\n      title: {\n        mr: 'Herr',\n        ms: 'Frau',\n      },\n    },\n    bidPackage: {\n      number: 'Nummer',\n      numberShort: '#',\n      name: 'Name',\n      bidsDueAt: 'Submissionsdatum',\n      startsOn: 'Arbeitsbeginn',\n      endsOn: 'Arbeitsende',\n      status: 'Status',\n      published: 'Veröffentlicht',\n      draft: 'Entwurf',\n      bidAwarded: 'Vergeben',\n      bidders: 'Bieter',\n      viewed: 'Gesehen',\n      bids: 'Angebote',\n      accepted: 'Akzeptiert',\n      declined: 'Abgesagt',\n      budget: 'Plankosten',\n      description: 'Beschreibung',\n      notes: 'Notizen',\n      validation: {\n        mustBeBeforeStartDate: 'Muss vor dem Startdatum liegen.',\n        mustBeBeforeEndDate: 'Muss vor dem Enddatum liegen.',\n        mustBeAfterStartDate: 'Muss nach dem Startdatum liegen.',\n      },\n    },\n    document: {\n      name: 'Name',\n      size: 'Größe',\n      lastChanged: 'Zuletzt geändert',\n    },\n    project: {\n      number: 'Nummer',\n      numberShort: '#',\n      name: 'Name',\n      image: 'Promo-Bild',\n      customer: 'Kunde',\n      location: 'Bauadresse',\n      startsOn: 'Arbeitsbeginn',\n      endsOn: 'Arbeitsende',\n      description: 'Projektbeschreibung',\n      user: 'Mitarbeiter',\n      manager: 'Manager',\n      defaultUserRole: 'Ansprechpartner',\n      budget: 'Plankosten',\n      office: 'Niederlassung',\n      forceSubcontractorSignup:\n        'Nachunternehmer zur Anmeldung zwingen (Experimentell: bitte mit Cosuno-Team Rücksprache halten)',\n      draft: 'Entwurf',\n      published: 'Veröffentlicht',\n      completed: 'Vergeben',\n      closed: 'Geschlossen',\n      status: 'Status',\n      notes: 'Notizen',\n      createdAt: 'Erstellt am',\n      validation: {\n        mustBeBeforeEndDate: 'Muss vor dem Enddatum liegen.',\n        mustBeAfterStartDate: 'Muss nach dem Startdatum liegen.',\n      },\n    },\n    subcontractor: {\n      name: 'Name',\n      contactName: 'Ansprechpartner',\n      email: 'E-Mail',\n      phone: 'Telefon',\n      fax: 'Fax',\n      website: 'Webseite',\n      companySize: 'Anzahl Mitarbeiter',\n      street: 'Straße',\n      postalCode: 'PLZ',\n      city: 'Ort',\n      country: 'Land',\n      notes: 'Notizen',\n      workCategories: 'Gewerke',\n      showAllContacts: 'Alle Kontakte anzeigen',\n      showFewerContacts: 'Weniger Kontakte anzeigen',\n      unknownContact: 'Unbekannter Kontakt',\n      isBanned: 'Nachunternehmer für zukünftige Projekte sperren',\n      contactPerson: {\n        title: {\n          mr: 'Herr',\n          ms: 'Frau',\n        },\n      },\n    },\n    subcontractorForm: {\n      contacts: {\n        heading: 'Kontakte',\n        oneContactRequired: 'Mindestens ein Kontakt muss vorhanden sein.',\n        removeModalTitle: 'Sind Sie sicher, dass Sie diesen Kontakt entfernen möchten?',\n        addAnotherButton: 'Kontakt hinzufügen',\n        isPerson: 'Dies ist eine Person',\n        email: 'E-Mail',\n        titleLabel: 'Anrede',\n        firstName: 'Vorname',\n        lastName: 'Nachname',\n        jobTitle: 'Jobtitel',\n        phone: 'Telefon',\n        mobilePhone: 'Mobil',\n        fax: 'Fax',\n        title: {\n          mr: 'Herr',\n          ms: 'Frau',\n        },\n        modalHeading: {\n          newContact: 'Neuer Kontakt',\n          existingContact: 'Kontakt bearbeiten',\n        },\n      },\n    },\n    company: {\n      name: 'Name des Unternehmens',\n      status: 'Status',\n      active: 'Aktiv',\n      pendingApproval: 'Nicht aktiviert',\n      remindersEnabled: 'Erinnerungsmails an NUs aktivieren',\n    },\n    office: {\n      name: 'Name',\n      logo: 'Logo',\n      email: 'E-Mail',\n      phone: 'Telefon',\n      fax: 'Fax',\n      website: 'Webseite',\n      street: 'Straße',\n      postalCode: 'PLZ',\n      city: 'Ort',\n      country: 'Land',\n      address: 'Adresse',\n    },\n    user: {\n      firstName: 'Vorname',\n      lastName: 'Nachname',\n      name: 'Name',\n      email: 'E-Mail',\n      jobTitle: 'Jobtitel',\n      type: 'Kategorie',\n      status: 'Status',\n      companyName: 'Unternehmen',\n      phone: 'Telefon',\n      fax: 'Fax',\n      role: 'Rolle',\n      employee: 'Mitarbeiter',\n      external: 'Extern',\n    },\n    request: {\n      invitees: 'Empfänger',\n      status: 'Status',\n      updatedAt: 'Zuletzt geändert',\n      bids: 'Angebote',\n      invitedContacts: '{{contact}} und {{n}} weitere.',\n      allInvitesFailed: 'Einladung fehlgeschlagen',\n      [BID_REQUEST_STATUS.pendingInvite]: 'Nicht eingeladen',\n      [BID_REQUEST_STATUS.invited]: 'Eingeladen',\n      [BID_REQUEST_STATUS.opened]: 'Geöffnet',\n      [BID_REQUEST_STATUS.viewed]: 'Gesehen',\n      [BID_REQUEST_STATUS.undecided]: 'Unentschlossen',\n      [BID_REQUEST_STATUS.inviteAccepted]: 'Akzeptiert',\n      [BID_REQUEST_STATUS.inviteDeclined]: 'Nicht interessiert',\n      [BID_REQUEST_STATUS.bidSubmitted]: 'Abgeschickt',\n      [BID_REQUEST_STATUS.bidAwarded]: 'Vergeben',\n      [BID_REQUEST_STATUS.bidRejected]: 'Abgesagt',\n      [BID_REQUEST_STATUS.withdrawn]: 'Storniert',\n    },\n    bid: {\n      message: 'Anmerkungen',\n      totalAmount: 'Gesamtbetrag (netto)',\n      submittedOn: 'Abgeschickt am',\n    },\n    bidInviteStatus: {\n      [BID_INVITE_STATUS.draft]: 'Nicht eingeladen',\n      [BID_INVITE_STATUS.failed]: 'Einladung fehlgeschlagen',\n      [BID_INVITE_STATUS.sent]: 'Eingeladen',\n      [BID_INVITE_STATUS.opened]: 'Geöffnet',\n      [BID_INVITE_STATUS.viewed]: 'Gesehen',\n    },\n    userStatus: {\n      [USER_STATUS.invited]: 'Eingeladen',\n      [USER_STATUS.active]: 'Aktiv',\n      [USER_STATUS.inactive]: 'Deaktiviert',\n      [USER_STATUS.inviteCanceled]: 'Einladung zurückgenommen',\n      [USER_STATUS.inviteFailed]: 'Einladung fehlgeschlagen',\n    },\n  },\n  datesAndTime: {\n    yesterday: 'Gestern',\n  },\n  pageTitles: {\n    invitation: 'Cosuno beitreten',\n    projects: 'Projekte',\n    account: 'Mein Konto',\n    company: 'Mein Unternehmen',\n    subcontractors: 'Nachunternehmer',\n    bids: 'Angebote',\n    notFound: 'Nicht gefunden',\n    requestWithdrawn: 'Anfrage abgelaufen',\n    login: 'Einloggen',\n    resetPassword: 'Passwort zurücksetzen',\n    createPassword: 'Passwort erstellen',\n    adminPanel: 'Administration',\n    signup: 'Anmeldung',\n    bidRequests: 'Angebote',\n    inviteDeclined: 'Danke für die Rückmeldung',\n  },\n  validation: {\n    required: 'Muss ausgefüllt werden',\n    minLength: 'Muss mindestens {{min}} Zeichen lang sein',\n    maxLength: 'Darf höchstens {{max}} Zeichen lang sein',\n    min: 'Muss mindestens {{minValue}} sein',\n    notEmptyArray: 'Bitte fügen Sie mindestens ein Objekt hinzu',\n    date: 'Muss ein gültiges Datum sein',\n    time: 'Muss eine gültige Zeit sein',\n    email: 'Muss eine gültige E-Mail sein',\n    in: 'Muss einer der folgenden Werte sein: {{allowedItems}}',\n    url: 'Muss eine gültige URL sein',\n    validFileTreeString:\n      'Muss ein gültiger Verzeichnisbaum sein. Dies ist ein interner Fehler, kontaktieren Sie bitte unser Support-Team.',\n    termsMustBeAccepted: 'Die Nutzungsbedingungen müssen akzeptiert werden.',\n    contactEmailNotUnique: 'Mehrere Kontakte mit der gleichen E-Mail sind nicht erlaubt.',\n  },\n  apiErrors: {\n    downloadError: 'Konnte Dateien nicht herunterladen: {{error}}',\n    bidPackageAlreadyAwarded: '{{packageName}} wurde bereits vergeben',\n    bidCreationDeniedOnAwardedPackages:\n      'Die Vergabeeinheit {{packageName}} ist bereits vergeben. Keine neuen Angebote können hinzugefügt werden.',\n    bidCreationDeniedOnUninvitedRequests:\n      'Der Nachunternehmer wurde noch nicht eingeladen. Keine Angebote können hinzugefügt werden.',\n    notFound: '{{entityName}} nicht gefunden',\n    cannotDeleteBidRequest:\n      'Dieser Bieter kann nicht gelöscht werden, da er bereits eingeladen wurde.',\n    bidPackageAlreadyPublished: 'Diese Vergabeeinheit wurde bereits veröffentlicht.',\n    cannotDeletePublishedBidPackage:\n      'Eine Vergabeeinheit kann nicht gelöscht werden, nachdem sie veröffentlicht wurde.',\n    cannotDeleteProjectWithPublishedBidPackages:\n      'Ein Projekt kann nicht gelöscht werden, wenn es veröffentlichte Vergabeeinheiten hat.',\n    cannotModifyClosedProject:\n      'Dieses Projekt kann nicht bearbeitet werden, da es geschlossen ist.',\n    thereWereValidationErrors: 'Es gab Fehler bei der Validierung:',\n    invalidEmailOrPassword: 'Ungültige E-Mail oder Passwort',\n    userNotActive: 'Sie können sich nicht einloggen, da Ihr Konto nicht aktiviert ist.',\n    invalidCurrentPassword: 'Aktuelles Passwort ungültig',\n    resetPasswordTokenExpired:\n      'Token ist ungültig oder abgelaufen, bitte tragen Sie Ihre E-Mail-Adresse ein und versuchen Sie es erneut',\n    inviteTokenExpired:\n      'Die Einladung ist abgelaufen, bitten Sie die Person, die Sie eingeladen hat, dies erneut zu tun.',\n    emailsNotDelivered: 'Die Einladung ist fehlgeschlagen für die folgenden Nutzer',\n    emailFailed: '{{email}}: E-Mail konnte nicht zugestellt werden',\n    emailAlreadyExists: '{{email}}: E-Mail existiert bereits',\n    fileUploadFailed: 'Datei-Upload fehlgeschlagen: {{filename}}',\n    userNotInvited: 'Sie haben keine gültige Einladung.',\n    userInvitationAccepted:\n      'Ein Nutzer mit der E-Mail {{email}} hat bereits eine Einladung angenommen.',\n    unauthorized: 'Sie sind nicht autorisiert, diese Aktion auszuführen.',\n    companyAlreadyActivated: 'Das Unternehmen wurde bereits aktiviert.',\n    bidRequestBelongsToOtherCompany: 'Die Anfrage ist einem anderen Unternehmen zugeordnet.',\n    mustBeAgentToClaimBidInvite: 'Ihr Unternehmen muss Auftragnehmer sein um die Anfrage zu sehen.',\n    userMustHaveInvitedStatus:\n      'Der Nutzer muss eingeladen sein, damit seine Einladung zurückgenommen werden kann.',\n    userMustHaveInviteCanceledStatus:\n      'Die Einladung des Nutzers muss zurückgenommen worden sein, bevor sie wiederhergestellt werden kann.',\n    localStorageNotPermitted: 'Sie müssen Cookies aktivieren, um Cosuno nutzen zu können.',\n    primaryUserMustBeProjectUser: 'Ein Projektmanager muss dem Projekt zugewiesen sein.',\n    messages: {\n      recipientsAreRequired: 'Mindestens ein Empfänger muss ausgewählt werden.',\n    },\n  },\n  auth: {\n    login: 'Anmelden',\n    email: 'E-Mail-Adresse',\n    password: 'Passwort',\n    forgotPassword: 'Passwort vergessen?',\n    signOut: 'Abmelden',\n    newPassword: 'Neues Passwort',\n    createPassword: 'Passwort erstellen',\n    createPasswordSuccess: 'Passwort erfolgreich erstellt',\n    invitationHeading: '{{firstName}} {{lastName}} hat Sie eingeladen zu {{company}} auf Cosuno',\n    invitationMessage: 'Bitte geben Sie die folgenden Daten ein um Ihr Konto zu erstellen:',\n    signupHeading: 'Starten Sie jetzt mit Cosuno',\n    signupMessage: 'Bitte füllen Sie die folgenden Felder aus um Ihr Konto zu erstellen.',\n    signupSubmit: 'Registrierung abschließen',\n    signupSuccessHeading: 'Vielen Dank für Ihre Anmeldung!',\n    signupSuccessMessage:\n      'Wir werden uns zeitnah mit Ihnen in Verbindung setzen, um Ihr Konto zu aktivieren.',\n    accountCreated: 'Konto erfolgreich erstellt',\n    invitationNotActiveHeading: 'Einladung bereits angenommen',\n    invitationNotActiveTip:\n      'Sie haben in der Vergangenheit die Einladung bereits angenommen und ein Nutzerkonto erstellt.',\n    loginNow: 'Jetzt einloggen',\n    termsAccepted: 'Ich akzeptiere die <2>AGBs</2> und die <6>Datenschutzerklärung</6>.',\n    bidRequestHeading: 'Sie haben eine Anfrage erhalten von',\n    alreadyHaveAnAccount: 'Haben Sie schon ein Konto?',\n    goToLogin: 'Zur Anmeldung',\n    bidRequestSignupHeading: 'Jetzt registrieren und Details einsehen',\n    resetPassword: {\n      success:\n        'Vielen Dank. Der Link zum Zurücksetzen sollte bald in Ihrem E-Mail-Postfach eintreffen.',\n      instructions:\n        'Geben Sie die E-Mail-Adresse ein, die mit Ihrem Konto verbunden ist, und wir senden Ihnen einen Link zum Zurücksetzen des Passworts.',\n      remember: 'Erinnern Sie sich an Ihr Passwort?',\n      submit: 'Link senden',\n      emailNotFound: 'Es wurde kein Nutzer mit dieser E-Mail gefunden.',\n    },\n  },\n  profile: {\n    myAccount: 'Mein Konto',\n    personalInfo: 'Persönliche Daten',\n    password: 'Passwort',\n    currentPassword: 'Aktuelles Passwort',\n    newPassword: 'Neues Passwort',\n    updatePassword: 'Passwort ändern',\n    passwordUpdated: 'Passwort erfolgreich geändert',\n    updated: 'Daten aktualisiert',\n  },\n  company: {\n    company: 'Mein Unternehmen',\n    profile: 'Profil',\n    users: 'Nutzer',\n    inviteUsers: 'Nutzer einladen',\n    deactivate: 'Deaktivieren',\n    confirmDeactivateMessage: 'Sind Sie sicher, dass Sie diesen Nutzer deaktivieren möchten?',\n    confirmDeactivateDescription:\n      'Der Nutzer wird ausgeloggt, und wird sich nicht mehr einloggen können.',\n    cancelInviteMessage: 'Sind Sie sicher, dass Sie die Einladung zurücknehmen möchten?',\n    restoreInviteMessage: 'Sind Sie sicher, dass Sie die Einladung wiederherstellen möchten?',\n    restoreInviteDescription: 'Es wird keine zusätzliche E-Mail an den Nutzer versendet.',\n    userDeactivated: 'Nutzer erfolgreich deaktiviert',\n    exampleEmail: 'email@beispiel.de',\n    addAnother: 'Weitere hinzufügen',\n    sendInvitations: 'Einladungen senden',\n    invitationsSent: 'Einladungen erfolgreich versendet',\n    updated: 'Daten aktualisiert',\n    resendInvite: 'Einladung erneut senden',\n    cancelInvite: 'Einladung zurücknehmen',\n    restoreInvite: 'Einladung wiederherstellen',\n    inviteSent: 'Einladung erfolgreich gesendet',\n    inviteRestored: 'Einladung wiederhergestellt',\n    resendInviteModalTitle: 'Sind Sie sicher, dass Sie die Einladung erneut senden möchten?',\n    reactivate: 'Aktivieren',\n    confirmReactivateMessage: 'Sind Sie sicher, dass Sie diesen Nutzer aktivieren möchten?',\n    confirmReactivateDescription:\n      'Der Nutzer wird wieder auf seinen Account zugreifen und sich einloggen können.',\n    userReactivated: 'Nutzer erfolgreich aktiviert',\n    offices: 'Niederlassungen',\n    newOffice: 'Neue Niederlassung',\n    editOffice: 'Niederlassung bearbeiten',\n    officeCreated: 'Niederlassung erfolgreich angelegt',\n    officeUpdated: 'Niederlassung erfolgreich aktualisiert',\n    copyInviteLink: 'Einladungslink kopieren',\n    copyInviteLinkSuccess: 'Einladungslink erfolgreich kopiert',\n    updateUserType: 'Kategorie ändern',\n    updateUserTypeSuccess: 'Kategorie erfolgreich geändert',\n  },\n  projects: {\n    projects: 'Projekte',\n    openProjects: 'Offene Projekte',\n    closedProjects: 'Geschlossene Projekte',\n    bidPackages: 'Vergabeeinheiten',\n    documents: 'Dokumente',\n    overviewLabel: 'Übersicht',\n    newProject: 'Neues Projekt',\n    newProjectCallToAction: 'Legen Sie ein Projekt an',\n    newProjectExplanation:\n      'Mit einem Projekt organisieren Sie alle Vergabeprozesse eines Bauvorhabens.',\n    closedProjectsHeadline: 'Keine geschlossenen Projekte',\n    closedProjectsExplanation:\n      'Projekte werden hier erscheinen, nachdem Sie diese als geschlossen markieren.',\n    editProject: 'Projekt bearbeiten',\n    reopenProject: 'Projekt öffnen',\n    closeProject: 'Projekt schließen',\n    closeProjectConfirmTitle: 'Sind Sie sicher, dass Sie dieses Projekt schließen möchten?',\n    reopenProjectConfirmTitle: 'Sind Sie sicher, dass Sie dieses Projekt öffnen möchten?',\n    closeConfirmMessage:\n      'Sie werden nicht mehr in der Lage sein, das Projekt zu bearbeiten, neue Bieter einzuladen oder Angebote hinzuzufügen.',\n    reopenConfirmMessage:\n      'Sie werden wieder in der Lage sein, das Projekt zu bearbeiten, neue Bieter einzuladen oder Angebote hinzuzufügen.',\n    closeProjectSuccess: 'Projekt erfolgreich geschlossen',\n    reopenProjectSuccess: 'Projekt erfolgreich geöffnet',\n    removeUserTitle: 'Nutzer entfernen',\n    removeUserMessage: 'Sind Sie sicher, dass Sie {{name}} von diesem Projekt entfernen möchten?',\n    emptyUsersList: 'Ein Projekt benötigt mindestens einen Nutzer.',\n    usersTitle: 'Projekt-Team',\n    editUserTitle: 'Nutzer bearbeiten',\n    addUserLink: 'Nutzer hinzufügen',\n    addUserTitle: 'Nutzer hinzufügen',\n    created: 'Projekt angelegt',\n    updated: 'Projekt aktualisiert',\n    backToProjects: 'Zurück zu Projekten',\n    phase: 'Phase',\n    estimationPhase: 'Ich möchte Angebote zur Kalkulation einholen',\n    bidPhase: 'Ich möchte Aufträge an Nachunternehmer vergeben',\n    overview: {\n      buttonLabels: {\n        edit: 'Bearbeiten',\n        cancel: 'Abbrechen',\n        save: 'Speichern',\n      },\n      headings: {\n        basicInfo: 'Grunddaten',\n        internalData: 'Interne Daten',\n      },\n      newProject: 'Neues Projekt',\n    },\n  },\n  subcontractors: {\n    subcontractors: 'Nachunternehmer',\n    newSubcontractor: 'Neuer Nachunternehmer',\n    newSubcontractorCallToAction: 'Legen Sie einen Nachunternehmer an',\n    newSubcontractorExplanation:\n      'Ein Nachunternehmer ist ein Unternehmen, das Sie im Vergabeprozess anfragen können.',\n    editSubcontractor: 'Nachunternehmer bearbeiten',\n    created: 'Nachunternehmer angelegt',\n    updated: 'Nachunternehmer aktualisiert',\n  },\n  bidPackages: {\n    project: 'Projekt',\n    bidPackages: 'Vergabeeinheiten',\n    backToProject: 'Zurück zum Projekt',\n    newBidPackage: 'Neue Vergabeeinheit',\n    newBidPackageCallToAction: 'Legen Sie eine Vergabeeinheit an',\n    newBidPackageExplanation:\n      'Eine Vergabeeinheit ist eine Leistung, die Sie an einen Nachunterneher vergeben möchten.',\n    editBidPackage: 'Vergabeeinheit bearbeiten',\n    deleteBidPackage: 'Vergabeeinheit löschen',\n    created: 'Vergabeeinheit angelegt',\n    updated: 'Vergabeeinheit aktualisiert',\n    biddersLabel: 'Bieter',\n    documents: 'Dokumente',\n    messagesLabel: 'Nachrichten',\n    overviewLabel: 'Übersicht',\n    published: 'Veröffentlicht',\n    publishAndSendInvitations: 'Veröffentlichen und Einladungen senden',\n    publishConfirmTitle: 'Sind Sie sicher, dass Sie diese Vergabeeinheit veröffentlichen möchten?',\n    publishConfirmMessage:\n      'Alle hinzugefügten Nachunternehmer werden Einladungen per E-Mail erhalten.',\n    publishSuccess: 'Vergabeeinheit erfolgreich veröffentlicht',\n    remove: 'Entfernen',\n    removeConfirmTitle: 'Sind Sie sicher, dass Sie diesen Nachunternehmer entfernen möchten?',\n    removeConfirmMessage: 'Sie können den Nachunternehmer jederzeit wieder hinzufügen.',\n    removeSuccess: 'Nachunternehmer erfolgreich entfernt',\n    resendInvitation: 'Einladung erneut senden',\n    resendInvitationConfirmTitle:\n      'Sind Sie sicher, dass Sie diesem Kontakt eine weitere Einladung per E-Mail senden möchten?',\n    resendInvitationSuccess: 'Einladung erfolgreich erneut gesendet',\n    addBidders: 'Bieter hinzufügen',\n    inviteBidders: 'Bieter einladen',\n    addDescription:\n      'Wählen Sie Bieter aus Ihrer Nachunternehmer-Datenbank. Einladungen per E-Mail werden erst dann versendet, wenn Sie die Vergabeeinheit veröffentlichen.',\n    inviteDescription: 'Laden Sie weitere Nachunternehmer ein, ein Angebot abzugeben.',\n    search: 'Suche',\n    basedWithin: 'Sitz im Umkreis von',\n    kilometersOf: 'Kilometern von',\n    add: 'Hinzufügen',\n    added: 'Hinzugefügt',\n    banned: 'Gesperrt',\n    addSuccess: 'Nachunternehmer erfolgreich hinzugefügt',\n    sendInvitation: 'Einladen',\n    inviteConfirmTitle:\n      'Sind Sie sicher, dass Sie eine Einladung per E-Mail an diesen Nachunternehmer senden möchten?',\n    inviteSuccess: 'Einladung erfolgreich versendet',\n    noResults: 'Es wurden keine Nachunternehmer gefunden.',\n    resetFilters: 'Filter zurücksetzen',\n    bidAwardedSuccess: 'Auftrag erfolgreich vergeben',\n    awardBid: 'Auftrag vergeben',\n    awardBidConfirmTitle:\n      'Sind Sie sicher, dass Sie den Auftrag an diesen Nachunternehmer vergeben möchten?',\n    awardBidConfirmMessage:\n      'Das Angebot dieses Nachunternehmers wird als vergeben markiert, aber es werden keine E-Mails versendet.',\n    bidRejectedSuccess: 'Angebot erfolgreich abgesagt',\n    rejectBid: 'Absagen',\n    rejectBidConfirmTitle: 'Sind Sie sicher, dass Sie diesem Nachunternehmer absagen möchten?',\n    rejectBidConfirmMessage: 'Der Nachunternehmer wird anschließend als abgesagt markiert.',\n    rejectBidConfirmCheckboxLabel: 'Absage per E-Mail an den Nachunternehmer senden',\n    bidUnRejectedSuccess: 'Absage erfolgreich rückgängig gemacht',\n    unRejectBid: 'Rückgängig machen',\n    bidUnAwardedSuccess: 'Vergabe erfolgreich rückgängig gemacht',\n    unAwardBid: 'Rückgängig machen',\n    unAwardBidConfirmTitle:\n      'Sind Sie sicher, dass Sie die Vergabe an diesen Nachunternehmer rückgängig machen möchten?',\n    unAwardBidConfirmMessage:\n      'Das Angebot dieses Nachunternehmers wird nicht mehr als vergeben markiert sein.',\n    selectToViewDetails: 'Wählen Sie einen Bieter aus um Details anzuzeigen',\n    missingBid: 'Fehlen Angebote?',\n    addBidManually: 'Angebot manuell hinzufügen',\n    addOrInviteBiddersCallToAction: 'Fügen Sie Bieter hinzu',\n    addOrInviteBiddersExplanation:\n      'Bieter sind Nachunternehmer, von denen Sie gerne ein Angebot für diese Vergabeeinheit erhalten würden.',\n    projectClosed: 'Dieses Projekt ist geschlossen. Es können keine Angebote hinzugefügt werden.',\n    requestDeclinedReason: 'Grund für Absage',\n    changeStatus: 'Status ändern',\n    changeStatusSuccess: 'Status erfolgreich geändert',\n    overview: {\n      buttonLabels: {\n        edit: 'Bearbeiten',\n        cancel: 'Abbrechen',\n        save: 'Speichern',\n      },\n      headings: {\n        basicInfo: 'Grunddaten',\n        internalData: 'Interne Daten',\n      },\n      formFields: {\n        number: 'Nummer',\n        name: 'Name',\n        bidsDueAt: 'Submissionsdatum',\n        startsOn: 'Arbeitsbeginn',\n        endsOn: 'Arbeitsende',\n        description: 'Beschreibung',\n        budget: 'Plankosten',\n        notes: 'Notizen',\n        createdAt: 'Erstellt am',\n      },\n      newBidPackage: 'Neue Vergabeeinheit',\n    },\n  },\n  bidInvites: {\n    backToBidRequests: 'Zurück zu Anfragen',\n    printBidders: {\n      title: 'Bieterliste für {{bidPackage}}',\n      tableHeader: {\n        status: 'Status',\n        currentBid: 'Aktuelles Angebot',\n        name: 'Name',\n        email: 'E-Mail',\n        phone: 'Telefon',\n        fax: 'Fax',\n      },\n    },\n    requests: {\n      bidRequests: 'Anfragen',\n      tableHeader: {\n        project: 'Projekt',\n        bidsDueAt: 'Submissionsdatum',\n        status: 'Status',\n        currentBid: 'Aktuelles Angebot',\n        customer: 'Auftraggeber',\n      },\n    },\n    overview: {\n      overviewTabName: 'Übersicht',\n      bidsTabName: 'Ihr Angebot',\n      messagesTabName: 'Nachrichten',\n      willYouBid: 'Wissen Sie schon, ob Sie ein Angebot abgeben werden?',\n      youWillBid: 'Sie haben sich entschieden, ein Angebot abzugeben.',\n      youWillNotBid: 'Sie haben sich entschieden, kein Angebot abzugeben.',\n      bidSubmitted: 'Sie haben folgende Angebote abgeschickt:',\n      bidNotSubmitted: 'Sie haben bisher kein Angebot abgegeben.',\n      bidAwarded: 'Glückwunsch! Ihr Angebot für dieses Projekt hat den Zuschlag erhalten.',\n      otherWasAwarded: 'Leider wurde der Auftrag bereits an ein anderes Unternehmen vergeben.',\n      declinedReasonHeader: 'Danke für die Rückmeldung',\n      declinedReasonAsk: 'Aus welchen Gründen sind Sie nicht interessiert an diesem Projekt?',\n      declinedReasonSuccess: 'Vielen Dank! Ihre Antwort wurde gespeichert.',\n      yes: 'Ja, werde ich',\n      no: 'Nein, danke',\n      maybe: 'Entscheide später',\n      changeFeedback: 'Auswahl ändern',\n      submitBid: 'Angebot abgeben',\n      reviseBid: 'Angebot überarbeiten',\n      importantDates: 'Wichtige Termine',\n      bidsDue: 'Angebot abzugeben bis',\n      expectedStart: 'Arbeitsbeginn (erwartet)',\n      expectedFinish: 'Arbeitsende (erwartet)',\n      projectDetails: 'Projektdetails',\n      siteLocation: 'Bauort',\n      owner: 'Bauherr',\n      projectDescription: 'Projektbeschreibung',\n      bidPackageDescription: 'Arbeitsbeschreibung',\n      customer: 'Auftraggeber',\n      contactPersons: 'Ansprechpartner',\n      projectClosed:\n        'Dieses Projekt ist geschlossen. Es können keine neuen Angebote abgegeben werden.',\n      bidAmount: 'Ihr aktuelles Angebot',\n      actionsBar: {\n        bidAwarded: 'Projekt ist bereits vergeben.',\n      },\n    },\n    documents: {\n      documents: 'Dokumente',\n    },\n  },\n  documentsPrint: {\n    title: 'Dokumente für {{title}}',\n  },\n  notFound: {\n    heading: '404',\n    message: 'Wir können die von Ihnen gewünschte Seite nicht finden.',\n    home: 'Startseite',\n    requestWithdrawnHeading: 'Anfrage abgelaufen',\n    requestWithdrawnMessage: 'Die Anfrage, die Sie versuchen zu öffnen, ist nicht mehr aktiv.',\n  },\n  errorBoundary: {\n    heading: 'Leider ist etwas schiefgelaufen',\n    explanation:\n      'Leider ist ein Fehler aufgetreten. Unser Team wurde bereits darüber informiert. In manchen Fällen kann ein erneutes Laden der Seite das Problem beheben.',\n    reloadButton: 'Neu laden',\n  },\n  admin: {\n    adminPanel: 'Administration',\n    companies: 'Unternehmen',\n    newCompany: 'Neues Unternehmen',\n    editCompany: 'Unternehmen bearbeiten',\n    companyCreated: 'Unternehmen angelegt',\n    companyUpdated: 'Unternehmen aktualisiert',\n    inviteUsers: 'Nutzer einladen',\n    users: 'Nutzer',\n    bidRequests: 'Anfragen',\n    loginAsUser: 'Als Nutzer einloggen',\n    activateCompany: 'Aktivieren',\n    activateCompanyTitle: 'Sind Sie sicher, dass Sie dieses Unternehmen aktivieren möchten?',\n    activateCompanyMessage:\n      'Der entsprechende Nutzer wird eine E-Mail bekommen und Zugang zur Plattform erhalten.',\n    activateCompanySuccess: 'Unternehmen erfolgreich aktiviert',\n    viewAsSubcontractor: 'Als Nachunternehmer ansehen',\n    bidRequestTableHeader: {\n      project: 'Projekt',\n      bidPackage: 'Vergabeeinheit',\n      subcontractor: 'Nachunternehmer',\n    },\n  },\n  bids: {\n    bids: 'Angebote',\n    emptyContentTitle: 'Noch keine Angebote',\n    emptyContentExplanation: 'Angebote von Nachunternehmern werden hier erscheinen.',\n    tableHeader: {\n      project: 'Projekt',\n      bidPackage: 'Vergabeeinheit',\n      subcontractor: 'Nachunternehmer',\n      amount: 'Gesamtbetrag',\n      date: 'Abgeschickt am',\n    },\n  },\n  messages: {\n    noMessages: {\n      callToAction: 'Beginnen sie eine Konversation',\n      explanation:\n        'Sie können Nachrichten schreiben, um direkt mit Nachunternehmern zu kommunizieren.',\n    },\n    noMatchingMessages: {\n      callToAction: 'Es wurden keine passenden Nachrichten gefunden.',\n    },\n    buttons: {\n      newMessage: 'Neue Nachricht',\n      reply: 'Antworten',\n      send: 'Senden',\n      resetSearchQuery: 'Zurücksetzen',\n    },\n    messageList: {\n      toMe: 'an mich',\n      toAnother: 'an {{names}}',\n    },\n    threadsList: {\n      threadParticipants_plural: '{{name}}, und {{numberOfRemainingParticipants}} weitere',\n      threadParticipants: '{{name}}, und {{numberOfRemainingParticipants}} weiterer',\n    },\n    newMessage: {\n      heading: 'Neue Nachricht verfassen',\n      toSingleRecipient: 'An {{name}}',\n      successNotification: 'Ihre Nachricht an {{names}} wurde gesendet.',\n      fieldLabels: {\n        to: 'An',\n        subject: 'Betreff',\n        message: 'Nachricht',\n      },\n    },\n    newReply: {\n      placeholder: 'Schreiben Sie eine Antwort',\n    },\n  },\n  countries: {\n    AW: 'Aruba',\n    AF: 'Afghanistan',\n    AO: 'Angola',\n    AI: 'Anguilla',\n    AX: 'Åland',\n    AL: 'Albanien',\n    AD: 'Andorra',\n    AE: 'Vereinigte Arabische Emirate',\n    AR: 'Argentinien',\n    AM: 'Armenien',\n    AS: 'Amerikanisch-Samoa',\n    AQ: 'Antarktis',\n    TF: 'Französische Süd- und Antarktisgebiete',\n    AG: 'Antigua und Barbuda',\n    AU: 'Australien',\n    AT: 'Österreich',\n    AZ: 'Aserbaidschan',\n    BI: 'Burundi',\n    BE: 'Belgien',\n    BJ: 'Benin',\n    BF: 'Burkina Faso',\n    BD: 'Bangladesch',\n    BG: 'Bulgarien',\n    BH: 'Bahrain',\n    BS: 'Bahamas',\n    BA: 'Bosnien und Herzegowina',\n    BL: 'Saint-Barthélemy',\n    SH: 'St. Helena, Ascension und Tristan da Cunha',\n    BY: 'Weißrussland',\n    BZ: 'Belize',\n    BM: 'Bermuda',\n    BO: 'Bolivien',\n    BQ: 'Karibische Niederlande',\n    BR: 'Brasilien',\n    BB: 'Barbados',\n    BN: 'Brunei',\n    BT: 'Bhutan',\n    BV: 'Bouvetinsel',\n    BW: 'Botswana',\n    CF: 'Zentralafrikanische Republik',\n    CA: 'Kanada',\n    CC: 'Kokosinseln',\n    CH: 'Schweiz',\n    CL: 'Chile',\n    CN: 'China',\n    CI: 'Elfenbeinküste',\n    CM: 'Kamerun',\n    CD: 'Kongo (Dem. Rep.)',\n    CG: 'Kongo',\n    CK: 'Cookinseln',\n    CO: 'Kolumbien',\n    KM: 'Komoren',\n    CV: 'Kap Verde',\n    CR: 'Costa Rica',\n    CU: 'Kuba',\n    CW: 'Curaçao',\n    CX: 'Weihnachtsinsel',\n    KY: 'Kaimaninseln',\n    CY: 'Zypern',\n    CZ: 'Tschechien',\n    DE: 'Deutschland',\n    DJ: 'Dschibuti',\n    DM: 'Dominica',\n    DK: 'Dänemark',\n    DO: 'Dominikanische Republik',\n    DZ: 'Algerien',\n    EC: 'Ecuador',\n    EG: 'Ägypten',\n    ER: 'Eritrea',\n    EH: 'Westsahara',\n    ES: 'Spanien',\n    EE: 'Estland',\n    ET: 'Äthiopien',\n    FI: 'Finnland',\n    FJ: 'Fidschi',\n    FK: 'Falklandinseln',\n    FR: 'Frankreich',\n    FO: 'Färöer-Inseln',\n    FM: 'Mikronesien',\n    GA: 'Gabun',\n    GB: 'Vereinigtes Königreich',\n    GE: 'Georgien',\n    GG: 'Guernsey',\n    GH: 'Ghana',\n    GI: 'Gibraltar',\n    GN: 'Guinea',\n    GP: 'Guadeloupe',\n    GM: 'Gambia',\n    GW: 'Guinea-Bissau',\n    GQ: 'Äquatorialguinea',\n    GR: 'Griechenland',\n    GD: 'Grenada',\n    GL: 'Grönland',\n    GT: 'Guatemala',\n    GF: 'Französisch-Guayana',\n    GU: 'Guam',\n    GY: 'Guyana',\n    HK: 'Hongkong',\n    HM: 'Heard und die McDonaldinseln',\n    HN: 'Honduras',\n    HR: 'Kroatien',\n    HT: 'Haiti',\n    HU: 'Ungarn',\n    ID: 'Indonesien',\n    IM: 'Insel Man',\n    IN: 'Indien',\n    IO: 'Britisches Territorium im Indischen Ozean',\n    IE: 'Irland',\n    IR: 'Iran',\n    IQ: 'Irak',\n    IS: 'Island',\n    IL: 'Israel',\n    IT: 'Italien',\n    JM: 'Jamaika',\n    JE: 'Jersey',\n    JO: 'Jordanien',\n    JP: 'Japan',\n    KZ: 'Kasachstan',\n    KE: 'Kenia',\n    KG: 'Kirgisistan',\n    KH: 'Kambodscha',\n    KI: 'Kiribati',\n    KN: 'St. Kitts und Nevis',\n    KR: 'Südkorea',\n    XK: 'Kosovo',\n    KW: 'Kuwait',\n    LA: 'Laos',\n    LB: 'Libanon',\n    LR: 'Liberia',\n    LY: 'Libyen',\n    LC: 'St. Lucia',\n    LI: 'Liechtenstein',\n    LK: 'Sri Lanka',\n    LS: 'Lesotho',\n    LT: 'Litauen',\n    LU: 'Luxemburg',\n    LV: 'Lettland',\n    MO: 'Macao',\n    MF: 'Saint-Martin',\n    MA: 'Marokko',\n    MC: 'Monaco',\n    MD: 'Moldawien',\n    MG: 'Madagaskar',\n    MV: 'Malediven',\n    MX: 'Mexiko',\n    MH: 'Marshallinseln',\n    MK: 'Nordmazedonien',\n    ML: 'Mali',\n    MT: 'Malta',\n    MM: 'Myanmar',\n    ME: 'Montenegro',\n    MN: 'Mongolei',\n    MP: 'Nördliche Marianen',\n    MZ: 'Mosambik',\n    MR: 'Mauretanien',\n    MS: 'Montserrat',\n    MQ: 'Martinique',\n    MU: 'Mauritius',\n    MW: 'Malawi',\n    MY: 'Malaysia',\n    YT: 'Mayotte',\n    NA: 'Namibia',\n    NC: 'Neukaledonien',\n    NE: 'Niger',\n    NF: 'Norfolkinsel',\n    NG: 'Nigeria',\n    NI: 'Nicaragua',\n    NU: 'Niue',\n    NL: 'Niederlande',\n    NO: 'Norwegen',\n    NP: 'Nepal',\n    NR: 'Nauru',\n    NZ: 'Neuseeland',\n    OM: 'Oman',\n    PK: 'Pakistan',\n    PA: 'Panama',\n    PN: 'Pitcairninseln',\n    PE: 'Peru',\n    PH: 'Philippinen',\n    PW: 'Palau',\n    PG: 'Papua-Neuguinea',\n    PL: 'Polen',\n    PR: 'Puerto Rico',\n    KP: 'Nordkorea',\n    PT: 'Portugal',\n    PY: 'Paraguay',\n    PS: 'Palästina',\n    PF: 'Französisch-Polynesien',\n    QA: 'Katar',\n    RE: 'Réunion',\n    RO: 'Rumänien',\n    RU: 'Russland',\n    RW: 'Ruanda',\n    SA: 'Saudi-Arabien',\n    SD: 'Sudan',\n    SN: 'Senegal',\n    SG: 'Singapur',\n    GS: 'Südgeorgien und die Südlichen Sandwichinseln',\n    SJ: 'Spitzbergen und Jan Mayen',\n    SB: 'Salomonen',\n    SL: 'Sierra Leone',\n    SV: 'El Salvador',\n    SM: 'San Marino',\n    SO: 'Somalia',\n    PM: 'St. Pierre und Miquelon',\n    RS: 'Serbien',\n    SS: 'Südsudan',\n    ST: 'São Tomé und Príncipe',\n    SR: 'Suriname',\n    SK: 'Slowakei',\n    SI: 'Slowenien',\n    SE: 'Schweden',\n    SZ: 'Swasiland',\n    SX: 'Sint Maarten',\n    SC: 'Seychellen',\n    SY: 'Syrien',\n    TC: 'Turks-und Caicosinseln',\n    TD: 'Tschad',\n    TG: 'Togo',\n    TH: 'Thailand',\n    TJ: 'Tadschikistan',\n    TK: 'Tokelau',\n    TM: 'Turkmenistan',\n    TL: 'Osttimor',\n    TO: 'Tonga',\n    TT: 'Trinidad und Tobago',\n    TN: 'Tunesien',\n    TR: 'Türkei',\n    TV: 'Tuvalu',\n    TW: 'Taiwan',\n    TZ: 'Tansania',\n    UG: 'Uganda',\n    UA: 'Ukraine',\n    UM: 'Kleinere Inselbesitzungen der Vereinigten Staaten',\n    UY: 'Uruguay',\n    US: 'Vereinigte Staaten',\n    UZ: 'Usbekistan',\n    VA: 'Vatikanstadt',\n    VC: 'St. Vincent und die Grenadinen',\n    VE: 'Venezuela',\n    VG: 'Britische Jungferninseln',\n    VI: 'Amerikanische Jungferninseln',\n    VN: 'Vietnam',\n    VU: 'Vanuatu',\n    WF: 'Wallis und Futuna',\n    WS: 'Samoa',\n    YE: 'Jemen',\n    ZA: 'Südafrika',\n    ZM: 'Sambia',\n    ZW: 'Simbabwe',\n  },\n};\n","import { BID_INVITE_STATUS, BID_REQUEST_STATUS, USER_STATUS } from '__graphql__/globalTypes';\n\n/* eslint-disable @typescript-eslint/camelcase */\nexport default {\n  common: {\n    search: 'Search',\n    add: 'Add',\n    addMore: 'Add more',\n    showingResults: '{{startIndex}} – {{endIndex}} of {{count}} result',\n    showingResults_plural: '{{startIndex}} – {{endIndex}} of {{count}} results',\n    showingManyResults_plural: '{{startIndex}} – {{endIndex}} of more than {{count}} results',\n    cancel: 'Cancel',\n    delete: 'Delete',\n    save: 'Save',\n    submit: 'Submit',\n    select: 'Select',\n    noResults: 'There are no results to be shown.',\n    warning: 'Warning',\n    confirmMessage: 'Are you sure you want to continue with this action?',\n    confirm: 'Confirm',\n    confirmDeleteMessage: 'Are you sure you want to delete this item?',\n    confirmDeleteDescription: 'This action cannot be reversed.',\n    itemDeleted: 'Item successfully deleted',\n    appOutdated: 'This version of Cosuno is not up to date. Click here to refresh the page.',\n    itemRemoved: 'Item successfully removed',\n    networkError:\n      'We are having trouble communicating with the server, please check your internet connection.',\n    year: 'Year',\n    edit: 'Edit',\n    error: 'Error',\n    requiredFieldsNote: '* indicates a required field',\n    help: 'Help',\n    internalData: 'Internal data',\n    internalDataHint:\n      'This information is not shared with subcontractors and is only used for company-internal purposes.',\n    documentsTable: {\n      download: 'Download',\n      downloadAll: 'Download all',\n      noResults: 'No documents were found.',\n      dragToEmptyTable: 'Drag and drop relevant files or folders to this area',\n      dragToRoot: 'Drag and drop relevant files or folders to this area',\n      createFolder: 'Create folder',\n      renameFolder: 'Rename folder',\n      renameFile: 'Rename file',\n      name: 'Name',\n      uploadFiles: 'Upload files',\n      uploadFolder: 'Upload folder',\n      uploadProgress: '{{uploadedCount}}/{{totalCount}} Files Uploaded',\n      preparingFiles: 'Preparing files...',\n      documentsUploaded: 'Documents uploaded',\n      documentsRemoved: 'Documents removed',\n      empty: '(empty)',\n      rename: 'Rename',\n      delete: 'Delete',\n      emptyFolderUpload:\n        \"Uploading empty folders is not possible. Try using the 'Create folder' button.\",\n      bidDocuments: 'Bid documents',\n    },\n    selectComponent: {\n      noResults: 'No results',\n      moreResults: '{{count}} options not shown',\n      create: 'Create \"{{itemName}}\"',\n      creating: 'Creating \"{{itemName}}\"...',\n      clearButtonLabel: 'Clear input',\n    },\n    imageUploader: {\n      uploadImage: 'Upload image',\n      uploadedImage: 'Uploaded image',\n      removeImage: 'Remove image',\n    },\n    bidList: {\n      latest: '(latest)',\n    },\n    bidModal: {\n      bidSummary: 'Bid Summary',\n      details: 'Details',\n      documents: 'Documents',\n    },\n    bidFormModal: {\n      addBid: 'New bid',\n      enterDetails: 'Enter details',\n      uploadDocuments: 'Upload documents',\n      totalAmountPlaceholder: 'e.g. 25000.00',\n      documentsError: 'Please upload at least one document.',\n      bidAdded: 'Bid successfully submitted',\n    },\n    companyInfo: {\n      email: 'Email',\n      phone: 'Phone',\n      mobilePhone: 'Mobile',\n      fax: 'Fax',\n      website: 'Website',\n      title: {\n        mr: 'Mr.',\n        ms: 'Ms.',\n      },\n    },\n    bidPackage: {\n      number: 'Number',\n      numberShort: '#',\n      name: 'Name',\n      bidsDueAt: 'Bids due at',\n      startsOn: 'Starts on',\n      endsOn: 'Ends on',\n      status: 'Status',\n      published: 'Published',\n      draft: 'Draft',\n      bidAwarded: 'Awarded',\n      bidders: 'Bidders',\n      viewed: 'Viewed',\n      bids: 'Bids',\n      accepted: 'Accepted',\n      declined: 'Declined',\n      budget: 'Estimated cost',\n      description: 'Description',\n      notes: 'Notes',\n      validation: {\n        mustBeBeforeStartDate: 'Must be before bid package start date.',\n        mustBeBeforeEndDate: 'Must be before bid package end date.',\n        mustBeAfterStartDate: 'Must be after bid package start date.',\n      },\n    },\n    document: {\n      name: 'Name',\n      size: 'Size',\n      lastChanged: 'Last changed',\n    },\n    project: {\n      number: 'Number',\n      numberShort: '#',\n      name: 'Name',\n      image: 'Promotional image',\n      customer: 'Customer',\n      location: 'Location',\n      startsOn: 'Starts on',\n      endsOn: 'Ends on',\n      description: 'Description',\n      user: 'Team Member',\n      manager: 'Manager',\n      defaultUserRole: 'Contact Person',\n      budget: 'Estimated cost',\n      office: 'Office',\n      forceSubcontractorSignup:\n        'Require subcontractors to sign up (Experimental: please consult with Cosuno first)',\n      draft: 'Draft',\n      published: 'Published',\n      completed: 'Completed',\n      closed: 'Closed',\n      status: 'Status',\n      notes: 'Notes',\n      createdAt: 'Created at',\n      validation: {\n        mustBeBeforeEndDate: 'Must be before the project end date.',\n        mustBeAfterStartDate: 'Must be after the project start date.',\n      },\n    },\n    subcontractor: {\n      name: 'Name',\n      contactName: 'Contact name',\n      email: 'Email',\n      phone: 'Phone',\n      fax: 'Fax',\n      website: 'Website',\n      companySize: 'Company size',\n      street: 'Street',\n      postalCode: 'Postal code',\n      city: 'City',\n      country: 'Country',\n      notes: 'Notes',\n      workCategories: 'Work categories',\n      showAllContacts: 'Show all contacts',\n      showFewerContacts: 'Show fewer contacts',\n      unknownContact: 'Unknown contact',\n      isBanned: 'Ban this subcontractor from future projects',\n      contactPerson: {\n        title: {\n          mr: 'Mr.',\n          ms: 'Ms.',\n        },\n      },\n    },\n    subcontractorForm: {\n      contacts: {\n        heading: 'Contacts',\n        oneContactRequired: 'At least one subcontractor contact is required.',\n        removeModalTitle: 'Are you sure you want to remove this contact?',\n        addAnotherButton: 'Add Contact',\n        isPerson: 'This contact is a person.',\n        email: 'Email',\n        titleLabel: 'Title',\n        firstName: 'First name',\n        lastName: 'Last name',\n        jobTitle: 'Job title',\n        phone: 'Phone',\n        mobilePhone: 'Mobile',\n        fax: 'Fax',\n        title: {\n          mr: 'Mr.',\n          ms: 'Ms.',\n        },\n        modalHeading: {\n          newContact: 'Add new contact',\n          existingContact: 'Edit contact',\n        },\n      },\n    },\n    company: {\n      name: 'Company name',\n      status: 'Status',\n      active: 'Active',\n      pendingApproval: 'Pending approval',\n      remindersEnabled: 'Enable subcontractor reminders',\n    },\n    office: {\n      name: 'Name',\n      logo: 'Logo',\n      email: 'Email',\n      phone: 'Phone',\n      fax: 'Fax',\n      website: 'Website',\n      street: 'Street',\n      postalCode: 'Postal code',\n      city: 'City',\n      country: 'Country',\n      address: 'Address',\n    },\n    user: {\n      firstName: 'First name',\n      lastName: 'Last name',\n      name: 'Name',\n      email: 'Email',\n      jobTitle: 'Job title',\n      type: 'User type',\n      status: 'Status',\n      companyName: 'Company',\n      phone: 'Phone',\n      fax: 'Fax',\n      role: 'Role',\n      employee: 'Employee',\n      external: 'External',\n    },\n    request: {\n      invitees: 'Invitees',\n      status: 'Status',\n      updatedAt: 'Last changed',\n      bids: 'Bids',\n      invitedContacts: '{{contact}}, and {{n}} more.',\n      allInvitesFailed: 'Invite failed',\n      [BID_REQUEST_STATUS.pendingInvite]: 'Not Invited',\n      [BID_REQUEST_STATUS.invited]: 'Invited',\n      [BID_REQUEST_STATUS.opened]: 'Opened',\n      [BID_REQUEST_STATUS.viewed]: 'Viewed',\n      [BID_REQUEST_STATUS.undecided]: 'Undecided',\n      [BID_REQUEST_STATUS.inviteDeclined]: 'Not interested',\n      [BID_REQUEST_STATUS.inviteAccepted]: 'Accepted',\n      [BID_REQUEST_STATUS.bidSubmitted]: 'Submitted',\n      [BID_REQUEST_STATUS.bidAwarded]: 'Awarded',\n      [BID_REQUEST_STATUS.bidRejected]: 'Rejected',\n      [BID_REQUEST_STATUS.withdrawn]: 'Withdrawn',\n    },\n    bid: {\n      message: 'Remarks',\n      totalAmount: 'Total amount (net)',\n      submittedOn: 'Submitted on',\n    },\n    bidInviteStatus: {\n      [BID_INVITE_STATUS.draft]: 'Not Invited',\n      [BID_INVITE_STATUS.failed]: 'Invite Failed',\n      [BID_INVITE_STATUS.sent]: 'Invited',\n      [BID_INVITE_STATUS.opened]: 'Opened',\n      [BID_INVITE_STATUS.viewed]: 'Viewed',\n    },\n    userStatus: {\n      [USER_STATUS.invited]: 'Invited',\n      [USER_STATUS.active]: 'Active',\n      [USER_STATUS.inactive]: 'Deactivated',\n      [USER_STATUS.inviteCanceled]: 'Invitation revoked',\n      [USER_STATUS.inviteFailed]: 'Invite failed',\n    },\n  },\n  datesAndTime: {\n    yesterday: 'Yesterday',\n  },\n  pageTitles: {\n    invitation: 'Join Cosuno',\n    projects: 'Projects',\n    account: 'My Account',\n    company: 'My Company',\n    subcontractors: 'Subcontractors',\n    bids: 'Bids',\n    notFound: 'Not Found',\n    requestWithdrawn: 'Bid Request Inactive',\n    login: 'Login',\n    resetPassword: 'Reset Password',\n    createPassword: 'Create Password',\n    adminPanel: 'Administration',\n    signup: 'Sign Up to Cosuno',\n    bidRequests: 'Bid Requests',\n    inviteDeclined: 'Thanks for your feedback',\n  },\n  validation: {\n    required: 'Must be filled out',\n    minLength: 'Must be at least {{min}} characters',\n    maxLength: 'Must be at most {{max}} characters',\n    min: 'Must be at least {{minValue}}',\n    notEmptyArray: 'Please add at least one item',\n    date: 'Must be a valid date',\n    time: 'Must be a valid time',\n    email: 'Must be a valid email',\n    in: 'Must be one of: {{allowedItems}}',\n    url: 'Must be a valid URL',\n    validFileTreeString:\n      'Must be a valid file tree. This is an internal error, please contact our support team.',\n    termsMustBeAccepted: 'The terms and conditions must be accepted.',\n    contactEmailNotUnique: 'Multiple contacts with the same email are not allowed.',\n  },\n  apiErrors: {\n    downloadError: 'Could not download files: {{error}}',\n    bidPackageAlreadyAwarded: '{{packageName}} has already been awarded',\n    bidCreationDeniedOnAwardedPackages:\n      'A bid has been awarded for {{packageName}}. No new bids may be added.',\n    bidCreationDeniedOnUninvitedRequests:\n      'The subcontractor has not been invited to this bid request. No bids may be added.',\n    bidCreationDeniedMissingTotalAmount: 'A bid cannot be added without a total amount',\n    notFound: '{{entityName}} not found',\n    cannotDeleteBidRequest: 'This bidder cannot be deleted, since they have already been invited',\n    bidPackageAlreadyPublished: 'This bid package is already published',\n    cannotDeletePublishedBidPackage: 'A bid package cannot be deleted once it has been published',\n    cannotDeleteProjectWithPublishedBidPackages:\n      'A project cannot be deleted once it has published bid packages',\n    cannotModifyClosedProject: 'This project cannot be modified because it has been closed',\n    thereWereValidationErrors: 'There were validation errors:',\n    invalidEmailOrPassword: 'Invalid email or password',\n    userNotActive: 'You cannot login because your account is not active',\n    invalidCurrentPassword: 'Invalid current password',\n    resetPasswordTokenExpired: 'Token is invalid or expired, please enter your email and try again',\n    inviteTokenExpired:\n      'The invitation token has expired, please ask the person who invited you to do so again.',\n    emailsNotDelivered: 'The invitation has failed for the following users',\n    emailFailed: '{{email}}: Email could not be delivered',\n    emailAlreadyExists: '{{email}}: Email already exists',\n    fileUploadFailed: 'File upload has failed: {{filename}}',\n    userNotInvited: 'You do not have a valid invitation',\n    userInvitationAccepted: 'A user associated with {{email}} has already accepted an invitation.',\n    unauthorized: 'You are not authorized to perform this action.',\n    companyAlreadyActivated: 'The company has already been activated.',\n    bidRequestBelongsToOtherCompany: 'The bid request has been claimed by another company.',\n    mustBeAgentToClaimBidInvite: 'Your company must be an agent to claim bid requests',\n    userMustHaveInvitedStatus: 'User must be invited before their invitation can be canceled',\n    userMustHaveInviteCanceledStatus:\n      \"User's invitation must have been canceled before it can be restored\",\n    localStorageNotPermitted: 'You must allow cookies on this website.',\n    primaryUserMustBeProjectUser: 'A project manager must belong to the project',\n    messages: {\n      recipientsAreRequired: 'At least one recipient has to be picked',\n    },\n  },\n  auth: {\n    login: 'Login',\n    email: 'Email address',\n    password: 'Password',\n    forgotPassword: 'Forgot password?',\n    signOut: 'Sign out',\n    newPassword: 'New password',\n    createPassword: 'Create password',\n    createPasswordSuccess: 'Password successfully created',\n    invitationHeading: '{{firstName}} {{lastName}} has invited you to join {{company}} on Cosuno',\n    invitationMessage:\n      'Please enter the information below to complete your account and join the team:',\n    signupHeading: 'Get started with Cosuno now',\n    signupMessage: 'Please enter the information below to complete your account.',\n    signupSubmit: 'Submit and join',\n    signupSuccessHeading: 'Thank you for signing up!',\n    signupSuccessMessage:\n      'We will get in touch with you shortly in order to activate your account.',\n    accountCreated: 'Account successfully created',\n    invitationNotActiveHeading: 'Invitation already accepted',\n    invitationNotActiveTip:\n      'You have already accepted the invitation and created a user account in the past.',\n    loginNow: 'Proceed to login',\n    termsAccepted: 'I accept the <2>terms and conditions</2> as well as the <6>privacy policy</6>.',\n    bidRequestHeading: \"You've received an invitation to bid from\",\n    alreadyHaveAnAccount: 'Already have an account?',\n    goToLogin: 'Proceed to login',\n    bidRequestSignupHeading: 'Sign up now to view details',\n    resetPassword: {\n      success: 'Thank you. The reset link should arrive in your email inbox shortly.',\n      instructions:\n        'Enter the email address associated with your account, and we’ll email you a link to reset your password.',\n      remember: 'Remember your password?',\n      submit: 'Send reset link',\n      emailNotFound: 'No user was found with this email.',\n    },\n  },\n  profile: {\n    myAccount: 'My account',\n    personalInfo: 'Personal info',\n    password: 'Password',\n    currentPassword: 'Current password',\n    newPassword: 'New password',\n    updatePassword: 'Change password',\n    passwordUpdated: 'Password successfully changed',\n    updated: 'Personal info updated',\n  },\n  company: {\n    company: 'My company',\n    profile: 'Profile',\n    users: 'Users',\n    inviteUsers: 'Invite users',\n    deactivate: 'Deactivate',\n    confirmDeactivateMessage: 'Are you sure you want to deactivate this user?',\n    confirmDeactivateDescription: 'They will be logged out, and will no longer be able to log in.',\n    cancelInviteMessage: 'Are you sure you want to revoke this invitation?',\n    restoreInviteMessage: 'Are you sure you want to restore this invitation?',\n    restoreInviteDescription: 'This will not send a new email to the user.',\n    userDeactivated: 'User successfully deactivated',\n    exampleEmail: 'email@example.com',\n    addAnother: 'Add another',\n    sendInvitations: 'Send invitations',\n    invitationsSent: 'Invitations successfully sent',\n    updated: 'Company info updated',\n    resendInvite: 'Resend invitation',\n    cancelInvite: 'Revoke invitation',\n    restoreInvite: 'Restore invitation',\n    inviteSent: 'Invitation successfully sent',\n    inviteRestored: 'Invitation restored',\n    resendInviteModalTitle: 'Are you sure you want to resend the invitation?',\n    reactivate: 'Activate',\n    confirmReactivateMessage: 'Are you sure you want to activate this user?',\n    confirmReactivateDescription:\n      'They will have regain to their account, and will be able to log in.',\n    userReactivated: 'User successfully activated',\n    offices: 'Offices',\n    newOffice: 'New office',\n    editOffice: 'Edit office',\n    officeCreated: 'Office successfully created',\n    officeUpdated: 'Office successfully updated',\n    copyInviteLink: 'Copy invitation link',\n    copyInviteLinkSuccess: 'Invitation link successfully copied',\n    updateUserType: 'Change user type',\n    updateUserTypeSuccess: 'User type successfully changed',\n  },\n  projects: {\n    projects: 'Projects',\n    openProjects: 'Open projects',\n    closedProjects: 'Closed projects',\n    bidPackages: 'Bid packages',\n    documents: 'Documents',\n    overviewLabel: 'Overview',\n    newProject: 'New project',\n    newProjectCallToAction: 'Create a project',\n    newProjectExplanation:\n      'A project allows you to organize all the bidding processes of your construction project.',\n    closedProjectsHeadline: 'No closed projects',\n    closedProjectsExplanation: 'Projects will show up here after you mark them as closed.',\n    editProject: 'Edit project',\n    reopenProject: 'Reopen project',\n    closeProject: 'Close project',\n    closeProjectConfirmTitle: 'Are you sure you want to close this project?',\n    reopenProjectConfirmTitle: 'Are you sure you want to reopen this project?',\n    closeConfirmMessage:\n      'You will no longer be able to edit project details, invite new bidders, or add bids.',\n    reopenConfirmMessage:\n      'You will be able to edit project details, invite new bidders, and add bids.',\n    closeProjectSuccess: 'Project successfully closed',\n    reopenProjectSuccess: 'Project successfully re-opened',\n    removeUserTitle: 'Remove User',\n    removeUserMessage: 'Are you sure you want to remove {{name}} from this project?',\n    emptyUsersList: 'A project requires at least one user.',\n    usersTitle: 'Project Team',\n    editUserTitle: 'Edit User',\n    addUserLink: 'Add User',\n    addUserTitle: 'Add User',\n    created: 'Project created',\n    updated: 'Project updated',\n    backToProjects: 'Back to projects',\n    phase: 'Phase',\n    estimationPhase: 'I want to collect estimates for budgeting',\n    bidPhase: 'I want to award work to subcontractors',\n    overview: {\n      buttonLabels: {\n        edit: 'Edit',\n        cancel: 'Cancel',\n        save: 'Save',\n      },\n      headings: {\n        basicInfo: 'Basic info',\n        internalData: 'Internal data',\n      },\n      newProject: 'New Project',\n    },\n  },\n  subcontractors: {\n    subcontractors: 'Subcontractors',\n    newSubcontractor: 'New subcontractor',\n    newSubcontractorCallToAction: 'Create a subcontractor',\n    newSubcontractorExplanation: 'A subcontractor is a company that you can send bid requests to.',\n    editSubcontractor: 'Edit subcontractor',\n    created: 'Subcontractor created',\n    updated: 'Subcontractor updated',\n  },\n  bidPackages: {\n    project: 'Project',\n    bidPackages: 'Bid packages',\n    backToProject: 'Back to project',\n    newBidPackage: 'New bid package',\n    newBidPackageCallToAction: 'Create a bid package',\n    newBidPackageExplanation:\n      'A bid package is work that you would like to award to a subcontractor.',\n    editBidPackage: 'Edit bid package',\n    deleteBidPackage: 'Delete bid package',\n    created: 'Bid package created',\n    updated: 'Bid package updated',\n    biddersLabel: 'Bidders',\n    documents: 'Documents',\n    messagesLabel: 'Messages',\n    overviewLabel: 'Overview',\n    published: 'Published',\n    publishAndSendInvitations: 'Publish and send invitations',\n    publishConfirmTitle: 'Are you sure you want to publish this bid package?',\n    publishConfirmMessage: 'All added subcontractors will receive invitation emails.',\n    publishSuccess: 'Bid package successfully published',\n    remove: 'Remove',\n    removeConfirmTitle: 'Are you sure you want to remove this subcontractor?',\n    removeConfirmMessage: 'You will be able to add them again at any point.',\n    removeSuccess: 'Subcontractor successfully removed',\n    resendInvitation: 'Resend Invitation',\n    resendInvitationConfirmTitle:\n      'Are you sure you want to resend an invitation email to this contact?',\n    resendInvitationSuccess: 'Invitation successfully resent',\n    addBidders: 'Add bidders',\n    inviteBidders: 'Invite bidders',\n    addDescription:\n      'Select bidders from your database of subcontractors. Invitation emails will only be sent once you publish the bid package.',\n    inviteDescription: 'Invite additional subcontractors to submit a bid.',\n    search: 'Search',\n    basedWithin: 'Based within',\n    kilometersOf: 'kilometers of',\n    add: 'Add',\n    added: 'Added',\n    banned: 'Banned',\n    addSuccess: 'Subcontractor successfully added',\n    sendInvitation: 'Invite',\n    inviteConfirmTitle: 'Are you sure you want to send an invitation email to this subcontractor?',\n    inviteSuccess: 'Invitation successfully sent',\n    noResults: 'No subcontractors were found.',\n    resetFilters: 'Reset filters',\n    bidAwardedSuccess: 'Bid successfully awarded',\n    awardBid: 'Award bid',\n    awardBidConfirmTitle: 'Are you sure you want to award the bid to this subcontractor?',\n    awardBidConfirmMessage:\n      'This subcontractor will be marked as awarded, but no emails will be sent out.',\n    bidRejectedSuccess: 'Bid successfully rejected',\n    rejectBid: 'Reject bid',\n    rejectBidConfirmTitle: \"Are you sure you want to reject this subcontractor's bid?\",\n    rejectBidConfirmMessage: 'The subcontractor will be marked as rejected',\n    rejectBidConfirmCheckboxLabel:\n      'Send out a rejection email to inform the subcontractor about your decision',\n    bidUnRejectedSuccess: 'Bid status sucessfully reverted',\n    unRejectBid: 'Revert status',\n    bidUnAwardedSuccess: 'Bid successfully un-awarded',\n    unAwardBid: 'Un-award bid',\n    unAwardBidConfirmTitle: 'Are you sure you want to un-award the bid of this subcontractor?',\n    unAwardBidConfirmMessage: 'This subcontractor will no longer be marked as awarded.',\n    selectToViewDetails: 'Select a bidder to view details',\n    missingBid: 'Missing bids?',\n    addBidManually: 'Add bid manually',\n    addOrInviteBiddersCallToAction: 'Add bidders',\n    addOrInviteBiddersExplanation:\n      'Bidders are subcontractors that you would like to bid on this bid package.',\n    projectClosed: 'This project has been closed. No bids may be added.',\n    requestDeclinedReason: 'Reason for declining',\n    changeStatus: 'Change status',\n    changeStatusSuccess: 'Status successfully changed',\n    overview: {\n      buttonLabels: {\n        edit: 'Edit',\n        cancel: 'Cancel',\n        save: 'Save',\n      },\n      headings: {\n        basicInfo: 'Basic info',\n        internalData: 'Internal data',\n      },\n      formFields: {\n        number: 'Number',\n        name: 'Name',\n        bidsDueAt: 'Bids due at',\n        startsOn: 'Starts on',\n        endsOn: 'Ends on',\n        description: 'Description',\n        budget: 'Estimated cost',\n        notes: 'Notes',\n        createdAt: 'Created at',\n      },\n      newBidPackage: 'New Bid Package',\n    },\n  },\n  bidInvites: {\n    backToBidRequests: 'Back to bid requests',\n    printBidders: {\n      title: 'List of Bidders for {{bidPackage}}',\n      tableHeader: {\n        status: 'Status',\n        currentBid: 'Current Bid',\n        name: 'Name',\n        email: 'Email',\n        phone: 'Phone',\n        fax: 'Fax',\n      },\n    },\n    requests: {\n      bidRequests: 'Bid requests',\n      tableHeader: {\n        project: 'Project',\n        bidsDueAt: 'Bids due at',\n        status: 'Status',\n        currentBid: 'Current bid',\n        customer: 'Customer',\n      },\n    },\n    overview: {\n      overviewTabName: 'Overview',\n      bidsTabName: 'Your bid',\n      messagesTabName: 'Messages',\n      willYouBid: \"Do you already know if you're going to submit a bid?\",\n      youWillBid: 'You have decided that you will bid on this project.',\n      youWillNotBid: 'You have decided that you will not bid on this project.',\n      bidSubmitted: 'You have submitted the following bids:',\n      bidNotSubmitted: 'You have not submitted a bid yet.',\n      bidAwarded: 'Congratulations! Your bid for this project has been selected.',\n      otherWasAwarded: 'Unfortunately the bid has already been awarded to another company.',\n      declinedReasonHeader: 'Thanks for your feedback',\n      declinedReasonAsk: 'What are the reasons you are not interested in this project?',\n      declinedReasonSuccess: 'Thank you! Your response has been saved.',\n      yes: 'Yes, I will',\n      no: 'No, thanks',\n      maybe: 'I will decide later',\n      changeFeedback: 'Change feedback',\n      submitBid: 'Submit a bid',\n      reviseBid: 'Revise your bid',\n      importantDates: 'Important dates',\n      bidsDue: 'Bids due',\n      expectedStart: 'Expected start',\n      expectedFinish: 'Expected finish',\n      projectDetails: 'Project details',\n      siteLocation: 'Site location',\n      owner: 'Property owner',\n      projectDescription: 'Project description',\n      bidPackageDescription: 'Work description',\n      customer: 'Customer',\n      contactPersons: 'Contact persons',\n      projectClosed: 'This project has been closed. No more bids may be submitted.',\n      bidAmount: 'Your current bid',\n      actionsBar: {\n        bidAwarded: 'Project has been awarded already.',\n      },\n    },\n    documents: {\n      documents: 'Documents',\n    },\n  },\n  documentsPrint: {\n    title: 'Documents for {{title}}',\n  },\n  notFound: {\n    heading: '404',\n    message: 'We cannot find the page you are looking for.',\n    home: 'Home',\n    requestWithdrawnHeading: 'Bid Request Inactive',\n    requestWithdrawnMessage: 'The bid request you are trying to access is not active anymore.',\n  },\n  errorBoundary: {\n    heading: 'Something went wrong',\n    explanation:\n      'An error has occurred and has been reported to our team. In some cases, reloading the page can resolve the issue.',\n    reloadButton: 'Reload',\n  },\n  admin: {\n    adminPanel: 'Administration',\n    companies: 'Companies',\n    newCompany: 'New company',\n    editCompany: 'Edit company',\n    companyCreated: 'Company created',\n    companyUpdated: 'Company updated',\n    inviteUsers: 'Invite users',\n    users: 'Users',\n    bidRequests: 'Bid Requests',\n    loginAsUser: 'Log in as user',\n    activateCompany: 'Activate',\n    activateCompanyTitle: 'Are you sure you want to activate this company?',\n    activateCompanyMessage:\n      'The associated user will receive an email giving them access to the platform.',\n    activateCompanySuccess: 'Company successfully activated',\n    viewAsSubcontractor: 'View as a subcontractor',\n    bidRequestTableHeader: {\n      project: 'Project',\n      bidPackage: 'Bid package',\n      subcontractor: 'Subcontractor',\n    },\n  },\n  bids: {\n    bids: 'Bids',\n    emptyContentTitle: 'No bids submitted yet',\n    emptyContentExplanation: 'Bids submitted by subcontractors will appear here.',\n    tableHeader: {\n      project: 'Project name',\n      bidPackage: 'Bid package name',\n      subcontractor: 'Subcontractor',\n      amount: 'Amount',\n      date: 'Submitted',\n    },\n  },\n  messages: {\n    noMessages: {\n      callToAction: 'Start a conversation',\n      explanation: 'You can use messages to communicate directly with the companies you work with.',\n    },\n    noMatchingMessages: {\n      callToAction: 'No messages match your search query',\n    },\n    buttons: {\n      newMessage: 'New message',\n      reply: 'Reply',\n      send: 'Send',\n      resetSearchQuery: 'Reset',\n    },\n    messageList: {\n      toMe: 'to me',\n      toAnother: 'to {{names}}',\n    },\n    threadsList: {\n      threadParticipants: '{{name}}, and {{numberOfRemainingParticipants}} more',\n    },\n    newMessage: {\n      heading: 'Create New Message',\n      toSingleRecipient: 'To {{name}}',\n      successNotification: 'Your message to {{names}} has been sent.',\n      fieldLabels: {\n        to: 'To',\n        subject: 'Subject',\n        message: 'Message',\n      },\n    },\n    newReply: {\n      placeholder: 'Write your reply',\n    },\n  },\n  countries: {\n    AW: 'Aruba',\n    AF: 'Afghanistan',\n    AO: 'Angola',\n    AI: 'Anguilla',\n    AX: 'Åland Islands',\n    AL: 'Albania',\n    AD: 'Andorra',\n    AE: 'United Arab Emirates',\n    AR: 'Argentina',\n    AM: 'Armenia',\n    AS: 'American Samoa',\n    AQ: 'Antarctica',\n    TF: 'French Southern and Antarctic Lands',\n    AG: 'Antigua and Barbuda',\n    AU: 'Australia',\n    AT: 'Austria',\n    AZ: 'Azerbaijan',\n    BI: 'Burundi',\n    BE: 'Belgium',\n    BJ: 'Benin',\n    BF: 'Burkina Faso',\n    BD: 'Bangladesh',\n    BG: 'Bulgaria',\n    BH: 'Bahrain',\n    BS: 'Bahamas',\n    BA: 'Bosnia and Herzegovina',\n    BL: 'Saint Barthélemy',\n    SH: 'Saint Helena, Ascension and Tristan da Cunha',\n    BY: 'Belarus',\n    BZ: 'Belize',\n    BM: 'Bermuda',\n    BO: 'Bolivia',\n    BQ: 'Caribbean Netherlands',\n    BR: 'Brazil',\n    BB: 'Barbados',\n    BN: 'Brunei',\n    BT: 'Bhutan',\n    BV: 'Bouvet Island',\n    BW: 'Botswana',\n    CF: 'Central African Republic',\n    CA: 'Canada',\n    CC: 'Cocos (Keeling) Islands',\n    CH: 'Switzerland',\n    CL: 'Chile',\n    CN: 'China',\n    CI: 'Ivory Coast',\n    CM: 'Cameroon',\n    CD: 'DR Congo',\n    CG: 'Republic of the Congo',\n    CK: 'Cook Islands',\n    CO: 'Colombia',\n    KM: 'Comoros',\n    CV: 'Cape Verde',\n    CR: 'Costa Rica',\n    CU: 'Cuba',\n    CW: 'Curaçao',\n    CX: 'Christmas Island',\n    KY: 'Cayman Islands',\n    CY: 'Cyprus',\n    CZ: 'Czechia',\n    DE: 'Germany',\n    DJ: 'Djibouti',\n    DM: 'Dominica',\n    DK: 'Denmark',\n    DO: 'Dominican Republic',\n    DZ: 'Algeria',\n    EC: 'Ecuador',\n    EG: 'Egypt',\n    ER: 'Eritrea',\n    EH: 'Western Sahara',\n    ES: 'Spain',\n    EE: 'Estonia',\n    ET: 'Ethiopia',\n    FI: 'Finland',\n    FJ: 'Fiji',\n    FK: 'Falkland Islands',\n    FR: 'France',\n    FO: 'Faroe Islands',\n    FM: 'Micronesia',\n    GA: 'Gabon',\n    GB: 'United Kingdom',\n    GE: 'Georgia',\n    GG: 'Guernsey',\n    GH: 'Ghana',\n    GI: 'Gibraltar',\n    GN: 'Guinea',\n    GP: 'Guadeloupe',\n    GM: 'Gambia',\n    GW: 'Guinea-Bissau',\n    GQ: 'Equatorial Guinea',\n    GR: 'Greece',\n    GD: 'Grenada',\n    GL: 'Greenland',\n    GT: 'Guatemala',\n    GF: 'French Guiana',\n    GU: 'Guam',\n    GY: 'Guyana',\n    HK: 'Hong Kong',\n    HM: 'Heard Island and McDonald Islands',\n    HN: 'Honduras',\n    HR: 'Croatia',\n    HT: 'Haiti',\n    HU: 'Hungary',\n    ID: 'Indonesia',\n    IM: 'Isle of Man',\n    IN: 'India',\n    IO: 'British Indian Ocean Territory',\n    IE: 'Ireland',\n    IR: 'Iran',\n    IQ: 'Iraq',\n    IS: 'Iceland',\n    IL: 'Israel',\n    IT: 'Italy',\n    JM: 'Jamaica',\n    JE: 'Jersey',\n    JO: 'Jordan',\n    JP: 'Japan',\n    KZ: 'Kazakhstan',\n    KE: 'Kenya',\n    KG: 'Kyrgyzstan',\n    KH: 'Cambodia',\n    KI: 'Kiribati',\n    KN: 'Saint Kitts and Nevis',\n    KR: 'South Korea',\n    XK: 'Kosovo',\n    KW: 'Kuwait',\n    LA: 'Laos',\n    LB: 'Lebanon',\n    LR: 'Liberia',\n    LY: 'Libya',\n    LC: 'Saint Lucia',\n    LI: 'Liechtenstein',\n    LK: 'Sri Lanka',\n    LS: 'Lesotho',\n    LT: 'Lithuania',\n    LU: 'Luxembourg',\n    LV: 'Latvia',\n    MO: 'Macau',\n    MF: 'Saint Martin',\n    MA: 'Morocco',\n    MC: 'Monaco',\n    MD: 'Moldova',\n    MG: 'Madagascar',\n    MV: 'Maldives',\n    MX: 'Mexico',\n    MH: 'Marshall Islands',\n    MK: 'North Macedonia',\n    ML: 'Mali',\n    MT: 'Malta',\n    MM: 'Myanmar',\n    ME: 'Montenegro',\n    MN: 'Mongolia',\n    MP: 'Northern Mariana Islands',\n    MZ: 'Mozambique',\n    MR: 'Mauritania',\n    MS: 'Montserrat',\n    MQ: 'Martinique',\n    MU: 'Mauritius',\n    MW: 'Malawi',\n    MY: 'Malaysia',\n    YT: 'Mayotte',\n    NA: 'Namibia',\n    NC: 'New Caledonia',\n    NE: 'Niger',\n    NF: 'Norfolk Island',\n    NG: 'Nigeria',\n    NI: 'Nicaragua',\n    NU: 'Niue',\n    NL: 'Netherlands',\n    NO: 'Norway',\n    NP: 'Nepal',\n    NR: 'Nauru',\n    NZ: 'New Zealand',\n    OM: 'Oman',\n    PK: 'Pakistan',\n    PA: 'Panama',\n    PN: 'Pitcairn Islands',\n    PE: 'Peru',\n    PH: 'Philippines',\n    PW: 'Palau',\n    PG: 'Papua New Guinea',\n    PL: 'Poland',\n    PR: 'Puerto Rico',\n    KP: 'North Korea',\n    PT: 'Portugal',\n    PY: 'Paraguay',\n    PS: 'Palestine',\n    PF: 'French Polynesia',\n    QA: 'Qatar',\n    RE: 'Réunion',\n    RO: 'Romania',\n    RU: 'Russia',\n    RW: 'Rwanda',\n    SA: 'Saudi Arabia',\n    SD: 'Sudan',\n    SN: 'Senegal',\n    SG: 'Singapore',\n    GS: 'South Georgia',\n    SJ: 'Svalbard and Jan Mayen',\n    SB: 'Solomon Islands',\n    SL: 'Sierra Leone',\n    SV: 'El Salvador',\n    SM: 'San Marino',\n    SO: 'Somalia',\n    PM: 'Saint Pierre and Miquelon',\n    RS: 'Serbia',\n    SS: 'South Sudan',\n    ST: 'São Tomé and Príncipe',\n    SR: 'Suriname',\n    SK: 'Slovakia',\n    SI: 'Slovenia',\n    SE: 'Sweden',\n    SZ: 'Eswatini',\n    SX: 'Sint Maarten',\n    SC: 'Seychelles',\n    SY: 'Syria',\n    TC: 'Turks and Caicos Islands',\n    TD: 'Chad',\n    TG: 'Togo',\n    TH: 'Thailand',\n    TJ: 'Tajikistan',\n    TK: 'Tokelau',\n    TM: 'Turkmenistan',\n    TL: 'Timor-Leste',\n    TO: 'Tonga',\n    TT: 'Trinidad and Tobago',\n    TN: 'Tunisia',\n    TR: 'Turkey',\n    TV: 'Tuvalu',\n    TW: 'Taiwan',\n    TZ: 'Tanzania',\n    UG: 'Uganda',\n    UA: 'Ukraine',\n    UM: 'United States Minor Outlying Islands',\n    UY: 'Uruguay',\n    US: 'United States',\n    UZ: 'Uzbekistan',\n    VA: 'Vatican City',\n    VC: 'Saint Vincent and the Grenadines',\n    VE: 'Venezuela',\n    VG: 'British Virgin Islands',\n    VI: 'United States Virgin Islands',\n    VN: 'Vietnam',\n    VU: 'Vanuatu',\n    WF: 'Wallis and Futuna',\n    WS: 'Samoa',\n    YE: 'Yemen',\n    ZA: 'South Africa',\n    ZM: 'Zambia',\n    ZW: 'Zimbabwe',\n  },\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-console */\n/* eslint-disable prefer-rest-params */\n/* eslint-disable func-names */\n/* eslint-disable @typescript-eslint/unbound-method */\n\n// This fix is required because of a fundmental problem in the interaction between\n// Google Translate and React.\n// More details here: https://github.com/facebook/react/issues/11538\n\nconst applyGoogleTranslateFix = () => {\n  if (typeof Node === 'function' && Node.prototype) {\n    const originalRemoveChild = Node.prototype.removeChild;\n    Node.prototype.removeChild = function(child) {\n      if (child.parentNode !== this) {\n        if (console) {\n          console.error('Cannot remove a child from a different parent', child, this);\n        }\n        return child;\n      }\n      return (originalRemoveChild.apply as any)(this, arguments);\n    };\n\n    const originalInsertBefore = Node.prototype.insertBefore;\n    Node.prototype.insertBefore = function(newNode, referenceNode) {\n      if (referenceNode && referenceNode.parentNode !== this) {\n        if (console) {\n          console.error(\n            'Cannot insert before a reference node from a different parent',\n            referenceNode,\n            this,\n          );\n        }\n        return newNode;\n      }\n      return (originalInsertBefore.apply as any)(this, arguments);\n    };\n  }\n};\n\nexport default applyGoogleTranslateFix;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport * as Sentry from '@sentry/browser';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport moment from 'moment';\nimport { de } from 'moment/locale/de';\nimport axios from 'axios';\n\nimport apolloClient from 'apolloClient';\nimport history from 'browserHistory';\nimport App from 'components/App/App';\nimport * as translations from 'shared/translations';\nimport * as Analytics from 'shared/utils/analytics';\nimport applyGoogleTranslateFix from 'shared/utils/gtranslateFix';\nimport { rootElementId } from 'shared/constants';\n\nif (process.env.NODE_ENV === 'production') {\n  Sentry.init({\n    dsn: 'https://40a32219710749fe9fe776c9d609689f@sentry.io/1439389',\n    environment: process.env.NODE_ENV,\n  });\n\n  // Segment.com analytics integration\n  Analytics.load(process.env.REACT_APP_SEGMENT_WRITE_KEY);\n  history.listen(Analytics.trackPageview);\n}\n\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    Sentry.captureException(error);\n    throw error;\n  },\n);\n\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\ni18n.use(initReactI18next).init({\n  resources: translations,\n  lng: process.env.REACT_APP_DEFAULT_LANG,\n  fallbackLng: 'de',\n  defaultNS: 'common',\n  fallbackNS: 'common',\n  interpolation: { escapeValue: false },\n});\n\nmoment.locale(process.env.REACT_APP_DEFAULT_LANG === 'de' ? de : 'en');\n\napplyGoogleTranslateFix();\n\nReactDOM.render(\n  <ApolloProvider client={apolloClient}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(rootElementId),\n);\n"],"sourceRoot":""}